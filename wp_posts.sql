-- phpMyAdmin SQL Dump
-- version 3.3.8.1
-- http://www.phpmyadmin.net
--
-- 主机: w.rdc.sae.sina.com.cn:3307
-- 生成日期: 2016 年 04 月 24 日 16:28
-- 服务器版本: 5.6.23
-- PHP 版本: 5.3.3

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `app_afeier`
--

-- --------------------------------------------------------

--
-- 表的结构 `wp_posts`
--

CREATE TABLE IF NOT EXISTS `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=321 ;

--
-- 转存表中的数据 `wp_posts`
--

INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(50, 1, '2014-04-16 16:04:14', '2014-04-16 08:04:14', '打包下载：<a href="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/201312181459414245.zip">高性能curl类</a>\r\n\r\n&nbsp;\r\n\r\n核心类：\r\n\r\n&nbsp;\r\n\r\n&lt;?php\r\n\r\n/**\r\n* Zebra_cURL, a high performance PHP cURL library\r\n*\r\n* Zebra_cURL is a high performance PHP library acting as a wrapper to PHP''s {@link http://www.php.net/manual/en/book.curl.php libcurl library},\r\n* which not only allows the running of multiple requests at once asynchronously, in parallel, but also as soon as one\r\n* thread finishes it can be processed right away without having to wait for the other threads in the queue to finish.\r\n*\r\n* Also, each time a request is completed another one is added to the queue, thus keeping a constant number of threads\r\n* running at all times and eliminating wasted CPU cycles from busy waiting. This result is a faster and more efficient\r\n* way of processing large quantities of cURL requests (like fetching thousands of RSS feeds at once), drastically reducing\r\n* processing time.\r\n*\r\n* This script supports GET and POST request, basic downloads as well as downloads from FTP servers, HTTP Authentication,\r\n* and requests through proxy servers.\r\n*\r\n* For maximum efficiency downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary\r\n* strain from the server of having to read files into memory first, and then writing them to disk.\r\n*\r\n* Zebra_cURL requires the {@link http://www.php.net/manual/en/curl.installation.php PHP cURL extension} to be enabled.\r\n*\r\n* The code is heavily commented and generates no warnings/errors/notices when PHP''s error reporting level is set to\r\n* {@link http://www.php.net/manual/en/function.error-reporting.php E_ALL}.\r\n*\r\n* Visit {@link http://stefangabos.ro/php-libraries/zebra-curl/} for more information.\r\n*\r\n* For more resources visit {@link http://stefangabos.ro/}\r\n*\r\n* @author Stefan Gabos &lt;contact@stefangabos.ro&gt;\r\n* @version 1.0.2 (last revision: August 29, 2013)\r\n* @copyright (c) 2013 Stefan Gabos\r\n* @license http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE\r\n* @package Zebra_cURL\r\n*/\r\n\r\nclass Zebra_cURL {\r\n\r\n/**\r\n* The number of parallel, asynchronous, requests to be processed by the library at once.\r\n*\r\n* &lt;code&gt;\r\n* // allow execution of 30 simultaneous threads\r\n* $curl-&gt;threads = 30;\r\n* &lt;/code&gt;\r\n*\r\n* Note that the library will keep this number of parallel threads running at all times (unless, of course, there\r\n* are less remaining URLs to process); it''s doing this by starting a new thread as soon as another one finishes,\r\n* instead of waiting for each batch to finish, and so on, until there are no more URLs to process, and thus\r\n* greatly decreasing execution time.\r\n*\r\n* Default is 10.\r\n*\r\n* @var integer\r\n*/\r\npublic $threads;\r\n\r\n/**\r\n* Default value is TRUE, can be changed by giving the constructor parameter value false.\r\n*\r\n* Used by the {@link _process()} method to determine if we run response body through PHP''s htmlentities function.\r\n*\r\n* @access private\r\n*\r\n*/\r\nprivate $_htmlentities;\r\n\r\n/**\r\n* An associative array linked with all the resources, used to store original URL and file pointer resources, used\r\n* for streaming downloads.\r\n*\r\n* @var array\r\n*\r\n* @access private\r\n*/\r\nprivate $_info;\r\n\r\n/**\r\n* Used by the {@link _process()} method to keep track of URLs that need to be processed.\r\n*\r\n* @access private\r\n*/\r\nprivate $_queue;\r\n\r\n/**\r\n* The cURL multi handle\r\n*\r\n* @var resource\r\n*\r\n* @access private\r\n*/\r\nprivate $_multi_handle;\r\n\r\n/**\r\n* Possible values of the "result" attribute in the object passed to the callback function.\r\n*\r\n* @var array\r\n*\r\n* @access private\r\n*/\r\nprivate $_response_messages = array(\r\n0 =&gt; ''CURLE_OK'',\r\n1 =&gt; ''CURLE_UNSUPPORTED_PROTOCOL'',\r\n2 =&gt; ''CURLE_FAILED_INIT'',\r\n3 =&gt; ''CURLE_URL_MALFORMAT'',\r\n4 =&gt; ''CURLE_URL_MALFORMAT_USER'',\r\n5 =&gt; ''CURLE_COULDNT_RESOLVE_PROXY'',\r\n6 =&gt; ''CURLE_COULDNT_RESOLVE_HOST'',\r\n7 =&gt; ''CURLE_COULDNT_CONNECT'',\r\n8 =&gt; ''CURLE_FTP_WEIRD_SERVER_REPLY'',\r\n9 =&gt; ''CURLE_REMOTE_ACCESS_DENIED'',\r\n11 =&gt; ''CURLE_FTP_WEIRD_PASS_REPLY'',\r\n13 =&gt; ''CURLE_FTP_WEIRD_PASV_REPLY'',\r\n14 =&gt; ''CURLE_FTP_WEIRD_227_FORMAT'',\r\n15 =&gt; ''CURLE_FTP_CANT_GET_HOST'',\r\n17 =&gt; ''CURLE_FTP_COULDNT_SET_TYPE'',\r\n18 =&gt; ''CURLE_PARTIAL_FILE'',\r\n19 =&gt; ''CURLE_FTP_COULDNT_RETR_FILE'',\r\n21 =&gt; ''CURLE_QUOTE_ERROR'',\r\n22 =&gt; ''CURLE_HTTP_RETURNED_ERROR'',\r\n23 =&gt; ''CURLE_WRITE_ERROR'',\r\n25 =&gt; ''CURLE_UPLOAD_FAILED'',\r\n26 =&gt; ''CURLE_READ_ERROR'',\r\n27 =&gt; ''CURLE_OUT_OF_MEMORY'',\r\n28 =&gt; ''CURLE_OPERATION_TIMEDOUT'',\r\n30 =&gt; ''CURLE_FTP_PORT_FAILED'',\r\n31 =&gt; ''CURLE_FTP_COULDNT_USE_REST'',\r\n33 =&gt; ''CURLE_RANGE_ERROR'',\r\n34 =&gt; ''CURLE_HTTP_POST_ERROR'',\r\n35 =&gt; ''CURLE_SSL_CONNECT_ERROR'',\r\n36 =&gt; ''CURLE_BAD_DOWNLOAD_RESUME'',\r\n37 =&gt; ''CURLE_FILE_COULDNT_READ_FILE'',\r\n38 =&gt; ''CURLE_LDAP_CANNOT_BIND'',\r\n39 =&gt; ''CURLE_LDAP_SEARCH_FAILED'',\r\n41 =&gt; ''CURLE_FUNCTION_NOT_FOUND'',\r\n42 =&gt; ''CURLE_ABORTED_BY_CALLBACK'',\r\n43 =&gt; ''CURLE_BAD_FUNCTION_ARGUMENT'',\r\n45 =&gt; ''CURLE_INTERFACE_FAILED'',\r\n47 =&gt; ''CURLE_TOO_MANY_REDIRECTS'',\r\n48 =&gt; ''CURLE_UNKNOWN_TELNET_OPTION'',\r\n49 =&gt; ''CURLE_TELNET_OPTION_SYNTAX'',\r\n51 =&gt; ''CURLE_PEER_FAILED_VERIFICATION'',\r\n52 =&gt; ''CURLE_GOT_NOTHING'',\r\n53 =&gt; ''CURLE_SSL_ENGINE_NOTFOUND'',\r\n54 =&gt; ''CURLE_SSL_ENGINE_SETFAILED'',\r\n55 =&gt; ''CURLE_SEND_ERROR'',\r\n56 =&gt; ''CURLE_RECV_ERROR'',\r\n58 =&gt; ''CURLE_SSL_CERTPROBLEM'',\r\n59 =&gt; ''CURLE_SSL_CIPHER'',\r\n60 =&gt; ''CURLE_SSL_CACERT'',\r\n61 =&gt; ''CURLE_BAD_CONTENT_ENCODING'',\r\n62 =&gt; ''CURLE_LDAP_INVALID_URL'',\r\n63 =&gt; ''CURLE_FILESIZE_EXCEEDED'',\r\n64 =&gt; ''CURLE_USE_SSL_FAILED'',\r\n65 =&gt; ''CURLE_SEND_FAIL_REWIND'',\r\n66 =&gt; ''CURLE_SSL_ENGINE_INITFAILED'',\r\n67 =&gt; ''CURLE_LOGIN_DENIED'',\r\n68 =&gt; ''CURLE_TFTP_NOTFOUND'',\r\n69 =&gt; ''CURLE_TFTP_PERM'',\r\n70 =&gt; ''CURLE_REMOTE_DISK_FULL'',\r\n71 =&gt; ''CURLE_TFTP_ILLEGAL'',\r\n72 =&gt; ''CURLE_TFTP_UNKNOWNID'',\r\n73 =&gt; ''CURLE_REMOTE_FILE_EXISTS'',\r\n74 =&gt; ''CURLE_TFTP_NOSUCHUSER'',\r\n75 =&gt; ''CURLE_CONV_FAILED'',\r\n76 =&gt; ''CURLE_CONV_REQD'',\r\n77 =&gt; ''CURLE_SSL_CACERT_BADFILE'',\r\n78 =&gt; ''CURLE_REMOTE_FILE_NOT_FOUND'',\r\n79 =&gt; ''CURLE_SSH'',\r\n80 =&gt; ''CURLE_SSL_SHUTDOWN_FAILED'',\r\n81 =&gt; ''CURLE_AGAIN'',\r\n82 =&gt; ''CURLE_SSL_CRL_BADFILE'',\r\n83 =&gt; ''CURLE_SSL_ISSUER_ERROR'',\r\n84 =&gt; ''CURLE_FTP_PRET_FAILED'',\r\n84 =&gt; ''CURLE_FTP_PRET_FAILED'',\r\n85 =&gt; ''CURLE_RTSP_CSEQ_ERROR'',\r\n86 =&gt; ''CURLE_RTSP_SESSION_ERROR'',\r\n87 =&gt; ''CURLE_FTP_BAD_FILE_LIST'',\r\n88 =&gt; ''CURLE_CHUNK_FAILED'',\r\n);\r\n\r\n/**\r\n* Constructor of the class.\r\n*\r\n* Below is the list of default options set for each request, unless these options are specifically changed by one\r\n* of the methods or via the {@link option()} method:\r\n*\r\n* - &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; get the last request header; if set to FALSE the "last_request"\r\n* entry of the "headers" attribute of the object given as argument to the\r\n* callback function, will be an empty string; &lt;i&gt;you should leave this\r\n* unaltered!&lt;/i&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_AUTOREFERER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; automatically set the &lt;i&gt;Referer:&lt;/i&gt; field in requests\r\n* where it follows a &lt;i&gt;Location:&lt;/i&gt; redirect;\r\n*\r\n* - &lt;b&gt;CURLOPT_COOKIEFILE&lt;/b&gt; - &lt;b&gt;empty string&lt;/b&gt;; no cookies are loaded, but cookie handling is still\r\n* enabled\r\n*\r\n* - &lt;b&gt;CURLOPT_CONNECTTIMEOUT&lt;/b&gt; - &lt;b&gt;10&lt;/b&gt;; the number of seconds to wait while trying to connect. use 0\r\n* to wait indefinitely;\r\n*\r\n* - &lt;b&gt;CURLOPT_FOLLOWLOCATION&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; automatically follow any &lt;i&gt;Location:&lt;/i&gt; header that the\r\n* server sends as part of the HTTP header (note this is recursive, PHP will\r\n* follow as many &lt;i&gt;Location:&lt;/i&gt; headers as specified by the value of\r\n* CURLOPT_MAXREDIRS - see below);\r\n*\r\n* - &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; get the response header(s); if set to FALSE the "responses"\r\n* entry of the "headers" attribute of the object given as argument to the\r\n* callback function, will be an empty string; &lt;i&gt;you should leave this\r\n* unaltered!&lt;/i&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_MAXREDIRS&lt;/b&gt; - &lt;b&gt;50&lt;/b&gt;; the maximum amount of HTTP redirections to follow; used\r\n* together with CURLOPT_FOLLOWLOCATION;\r\n*\r\n* - &lt;b&gt;CURLOPT_RETURNTRANSFER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; return the transfer''s body as a string instead of outputting\r\n* it directly; if set to FALSE the "body" attribute of the object given as\r\n* argument to a callback function will be an empty string; &lt;b&gt;this will\r\n* always be TRUE and cannot be changed!&lt;/b&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_SSL_VERIFYHOST&lt;/b&gt; - &lt;b&gt;2&lt;/b&gt;; check the existence of a common name in the SSL peer certificate\r\n* (for when connecting to HTTPS), and that it matches with the provided\r\n* hostname; see also {@link ssl()};\r\n*\r\n* - &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; - &lt;b&gt;FALSE&lt;/b&gt;; stop cURL from verifying the peer''s certificate (which\r\n* would most likely cause the request to fail). see also {@link ssl()};\r\n*\r\n* - &lt;b&gt;CURLOPT_TIMEOUT&lt;/b&gt; - &lt;b&gt;10&lt;/b&gt;; the maximum number of seconds to allow cURL functions to\r\n* execute;\r\n*\r\n* - &lt;b&gt;CURLOPT_USERAGENT&lt;/b&gt; - A (slightly) random user agent (Internet Explorer 9 or 10, on Windows\r\n* Vista, 7 or 8, with other extra strings). Some web services will not\r\n* respond unless a valid user-agent string is provided\r\n*\r\n* @param boolean $htmlentities Instructs the script whether the response body returned by the {@link get()}\r\n* and {@link post()} methods should be run through PHP''s\r\n* {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function.\r\n*\r\n* @return void\r\n*/\r\nfunction __construct($htmlentities = true)\r\n{\r\n\r\n// if the cURL extension is not available, trigger an error and stop execution\r\nif (!extension_loaded(''curl'')) trigger_error(''php_curl extension is not loaded!'', E_USER_ERROR);\r\n\r\n// set defaults for accessing HTTPS servers\r\n$this-&gt;ssl();\r\n\r\n// initialize some internal variables\r\n$this-&gt;_multi_handle = false;\r\n$this-&gt;_info = array();\r\n\r\n// caching is disabled by default\r\n$this-&gt;cache(false);\r\n\r\n// the default number of parallel, asynchronous, requests to be processed by the library at once.\r\n$this-&gt;threads = 10;\r\n\r\n// by default, run htmlentities() on the response body\r\n$this-&gt;_htmlentities = $htmlentities;\r\n\r\n}\r\n\r\n/**\r\n* Use this method to enable caching for {@link get() get} and {@link header() header} requests.\r\n*\r\n* &lt;i&gt;Caching is only used for {@link get() get} and {@link header() header} requests, and will be ignored for other\r\n* request types even if it is enabled!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Caching is disabled by default!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occurred: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // cache results in the "cache" folder and for 86400 seconds (24 hours)\r\n* $curl-&gt;cache(''cache'', 86400);\r\n*\r\n* // let''s fetch the RSS feeds of some popular websites\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;get(array(\r\n* ''http://feeds.feedburner.com/alistapart/main'',\r\n* ''http://feeds.feedburner.com/TechCrunch'',\r\n* ''http://feeds.mashable.com/mashable'',\r\n* ), ''mycallback'')\r\n* &lt;/code&gt;\r\n*\r\n* @param string $path The path where the cache files to be stored.\r\n*\r\n* Setting this to FALSE will disable caching.\r\n*\r\n* &lt;i&gt;Unless set to FALSE this must point to a writable directory or an error will\r\n* be triggered!&lt;/i&gt;\r\n*\r\n* @param integer $lifetime (Optional) The number of seconds after which cache will be considered as expired.\r\n*\r\n* Default is 3600.\r\n*\r\n* @param boolean $compress (Optional) If set to TRUE, cache files will be\r\n* {@link http://php.net/manual/ro/function.gzcompress.php gzcompress}-ed so that\r\n* they occupy less disk space.\r\n*\r\n* Default is TRUE.\r\n*\r\n* @param octal $chmod (Optional) The file system permissions to be set for newly created cache files.\r\n*\r\n* I suggest using the value "0755" (without the quotes) but, if you know what you\r\n* are doing, here is how you can calculate the permission levels:\r\n*\r\n* - 400 Owner Read\r\n* - 200 Owner Write\r\n* - 100 Owner Execute\r\n* - 40 Group Read\r\n* - 20 Group Write\r\n* - 10 Group Execute\r\n* - 4 Global Read\r\n* - 2 Global Write\r\n* - 1 Global Execute\r\n*\r\n* Default is "0755" (without the quotes).\r\n*\r\n* @return null\r\n*/\r\npublic function cache($path, $lifetime = 3600, $compress = true, $chmod = 0755)\r\n{\r\n\r\n// if we have to enable caching\r\nif ($path != false)\r\n\r\n// store cache-related properties\r\n$this-&gt;cache = array(\r\n''path'' =&gt; $path,\r\n''lifetime'' =&gt; $lifetime,\r\n''chmod'' =&gt; $chmod,\r\n''compress'' =&gt; $compress,\r\n);\r\n\r\n// if we have to disable caching, disable it\r\nelse $this-&gt;cache = false;\r\n\r\n}\r\n\r\n/**\r\n* Sets the path and name of the file to save to / retrieve cookies from, for each accessed URL. (cookie name/data\r\n* will be stored in this file on a per-domain basis). Important when cookies need to stored/restored to maintain\r\n* status/session of the request(s) made to the same domain(s).\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_COOKIEJAR&lt;/b&gt; and &lt;b&gt;CURLOPT_COOKIEFILE&lt;/b&gt; options.\r\n*\r\n* @param string $path The path to a file to save to / retrieve cookies from, for each accessed URL.\r\n*\r\n* If file does not exist the library will attempt to create it and if it is unable to\r\n* create it will trigger an error.\r\n*\r\n* @param boolean $keep (Optional) By default, the file to save to / retrieve cookies from is deleted when\r\n* script execution finishes. If you want the file to be preserved, set this argument to\r\n* TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* @return null\r\n*/\r\npublic function cookies($path, $keep = false)\r\n{\r\n// file does not exist\r\nif (!is_file($path)) {\r\n\r\n// attempt to create it\r\nif (!($handle = fopen($path, ''a'')))\r\n\r\n// if file could not be created, trigger an error\r\ntrigger_error(''File "'' . $path . ''" for storing cookies could not be found nor could it automatically be created! Make sure either that the path to the file points to a writable directory, or create the file yourself and make it writable.'', E_USER_ERROR);\r\n\r\n// if file could be create, release handle\r\nfclose($handle);\r\n\r\n}\r\n\r\n// set these options\r\n$this-&gt;option(array(\r\nCURLOPT_COOKIEJAR =&gt; $path,\r\nCURLOPT_COOKIEFILE =&gt; $path,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Downloads one or more files from one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument, saves the downloaded\r\n* files (with their original name) to the path specified by the &lt;i&gt;$destination_path&lt;/i&gt;, and executes the callback\r\n* function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request finishes.\r\n*\r\n* Downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary strain from your\r\n* server of reading files into memory first, and then writing them to disk.\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_BINARYTRANSFER&lt;/b&gt; option to TRUE, so you might want to change\r\n* this back to FALSE/0 or "unset" it using the {@link option()} method, before making a {@link get()}, {@link header()}\r\n* or {@link post()} request.\r\n*\r\n* &lt;i&gt;Files are downloaded preserving their name so you may run into trouble when trying to download more images\r\n* having the same name (either from the same, or different servers)!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // download 2 images from 2 different websites, and\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;download(array(\r\n* ''http://www.somewebsite.com/images/alpha.jpg'',\r\n* ''http://www.otherwebsite.com/images/omega.jpg'',\r\n* ), ''destination/path/'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param string $destination_path The path to where to save the file(s) to.\r\n*\r\n* If path is not pointing to a directory or is not writable, the library will\r\n* trigger an error.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an\r\n* anonymous function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the\r\n* request that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function; there''s also an extra entry called &lt;i&gt;original_url&lt;/i&gt;\r\n* because, as curl_getinfo() only returns information\r\n* about the &lt;b&gt;last&lt;/b&gt; request, the original URL may\r\n* be lost otherwise.\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry\r\n* containing the request headers generated by &lt;i&gt;the\r\n* last request&lt;/i&gt;; so, remember, if there are redirects\r\n* involved, there will be more requests made, but only\r\n* information from the last one will be available; if\r\n* explicitly disabled via the {@link option()} method\r\n* by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries\r\n* (if there are redirects involved) with the response\r\n* headers of all the requests made; if explicitly disabled\r\n* via the {@link option()} method by setting\r\n* &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this will be an\r\n* empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array\r\n* is an associative array in the form of property =&gt;\r\n* value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page\r\n* at the URL).\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array\r\n* with 2 entries: the first entry represents the result''s\r\n* code, while the second is the textual representation\r\n* of the code; if the request was successful, these\r\n* values will be &lt;i&gt;array(0, CURLE_OK);&lt;/i&gt; consult\r\n* {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function download($url, $destination_path, $callback = '''')\r\n{\r\n\r\n// if destination path is not a directory or is not writable, trigger an error message\r\nif (!is_dir($destination_path) || !is_writable($destination_path)) trigger_error(''"'' . $destination_path . ''" is not a valid path or is not writable!'', E_USER_ERROR);\r\n\r\n// set download path\r\n$this-&gt;download_path = rtrim($destination_path, ''/\\\\'') . ''/'';\r\n\r\n// instruct the cURL library that it has to do a binary transfer\r\n$this-&gt;option(CURLOPT_BINARYTRANSFER, 1);\r\n\r\n// process request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Works exactly like the {@link download()} method only that downloads are made from an FTP server.\r\n*\r\n* Downloads from an FTP server to which the connection is made using the given &lt;i&gt;$username&lt;/i&gt; and &lt;i&gt;$password&lt;/i&gt;\r\n* arguments, one or more files specified by the &lt;i&gt;$url&lt;/i&gt; argument, saves the downloaded files (with their original\r\n* name) to the path specified by the &lt;i&gt;$destination_path&lt;/i&gt;, and executes the callback function specified by the\r\n* &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request finishes.\r\n*\r\n* Downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary strain from your\r\n* server of reading files into memory first, and then writing them to disk.\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_BINARYTRANSFER&lt;/b&gt; option to TRUE, so you might want to change\r\n* this back to FALSE/0 or "unset" it using the {@link option()} method, before making a {@link get()}, {@link header()}\r\n* or {@link post()} request.\r\n*\r\n* &lt;i&gt;Files are downloaded preserving their name so you may run into trouble when trying to download more images\r\n* having the same name (either from the same, or different servers)!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // connect to the FTP server using the given credential, download a file to a given location and\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;download(''ftp://somefile.ext'', ''destination/path/'', ''username'', ''password'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param string $destination_path The path to where to save the file(s) to.\r\n*\r\n* If path is not pointing to a directory or is not writable, the library will\r\n* trigger an error.\r\n*\r\n* @param string $username (Optional) The username to be used to connect to the FTP server (if required).\r\n*\r\n* @param string $password (Optional) The password to be used to connect to the FTP server (if required).\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an\r\n* anonymous function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the\r\n* request that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry\r\n* containing the request headers generated by &lt;i&gt;the\r\n* last request&lt;/i&gt;; so, remember, if there are redirects\r\n* involved, there will be more requests made, but only\r\n* information from the last one will be available; if\r\n* explicitly disabled via the {@link option()} method\r\n* by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries\r\n* (if there are redirects involved) with the response\r\n* headers of all the requests made; if explicitly disabled\r\n* via the {@link option()} method by setting\r\n* &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this will be an\r\n* empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array\r\n* is an associative array in the form of property =&gt;\r\n* value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page\r\n* at the URL).\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array\r\n* with 2 entries: the first entry represents the result''s\r\n* code, while the second is the textual representation\r\n* of the code; if the request was successful, these\r\n* values will be &lt;i&gt;array(0, CURLE_OK);&lt;/i&gt; consult\r\n* {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function ftp_download($url, $destination_path, $username = '''', $password = '''', $callback = '''')\r\n{\r\n\r\n// if he have at least an username, set username/password\r\nif ($username != '''') $this-&gt;option(CURLOPT_USERPWD, $username . '':'' . $password);\r\n\r\n// call the download method\r\n$this-&gt;download($url, $destination_path, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Performs an HTTP &lt;b&gt;GET&lt;/b&gt; request to one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument and executes the\r\n* callback function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request\r\n* finishes.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // cache results in the "cache" folder and for 3600 seconds (one hour)\r\n* $curl-&gt;cache(''cache'', 3600);\r\n*\r\n* // let''s fetch the RSS feeds of some popular websites\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;get(array(\r\n* ''http://feeds.feedburner.com/alistapart/main'',\r\n* ''http://feeds.feedburner.com/TechCrunch'',\r\n* ''http://feeds.mashable.com/mashable'',\r\n* ), ''mycallback'')\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array is an\r\n* associative array in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page at the\r\n* URL).\r\n*\r\n* Unless disabled via the {@link __construct() constructor}, all\r\n* applicable characters will be converted to HTML entities via\r\n* PHP''s {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function, so remember to use PHP''s {@link http://www.php.net/manual/en/function.html-entity-decode.php html_entity_decode()}\r\n* function to do reverse this, if it''s the case;\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function get($url, $callback = '''')\r\n{\r\n\r\n// make sure we perform a GET request\r\n$this-&gt;option(CURLOPT_HTTPGET, 1);\r\n\r\n// process request(s)\r\nreturn $this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Works exactly like the {@link get()} method, the only difference being that this method will automatically set\r\n* the &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; option to FALSE and thus the &lt;i&gt;body&lt;/i&gt; property of the result will be an empty string.\r\n* Also, &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; and &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; will be set to TRUE and therefore header information\r\n* will be available.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // process given URLs execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* $curl-&gt;header(''http://www.somewebsite.com'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made;\r\n*\r\n* &lt;i&gt;Each entry in the headers'' array is an associative array\r\n* in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - an empty string\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function header($url, $callback = '''')\r\n{\r\n\r\n// no "body" for header requests but make sure we have the headers\r\n$this-&gt;option(array(\r\nCURLINFO_HEADER_OUT =&gt; 1,\r\nCURLOPT_HEADER =&gt; 1,\r\nCURLOPT_HTTPGET =&gt; 1,\r\nCURLOPT_NOBODY =&gt; 1,\r\n));\r\n\r\n// execute request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Use this method to make requests to pages that requires prior HTTP authentication.\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // prepare user name and password\r\n* $curl-&gt;http_authentication(''username'', ''password'');\r\n*\r\n* // get content from a page that requires prior HTTP authentication\r\n* $curl-&gt;get(''http://www.some-page-requiring-prior-http-authentication.com'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param string $username User name to be used for authentication.\r\n*\r\n* @param string $password Password to be used for authentication.\r\n*\r\n* @param string $type (Optional) The HTTP authentication method(s) to use. The options are:\r\n*\r\n* - &lt;b&gt;CURLAUTH_BASIC&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_ANY&lt;/b&gt;\r\n* - CU&lt;b&gt;RLAUTH_ANYSAFE&lt;/b&gt;\r\n*\r\n* The bitwise | (or) operator can be used to combine more than one method. If\r\n* this is done, cURL will poll the server to see what methods it supports and\r\n* pick the best one.\r\n*\r\n* &lt;b&gt;CURLAUTH_ANY&lt;/b&gt; is an alias for &lt;b&gt;CURLAUTH_BASIC&lt;/b&gt; | &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt; |\r\n* &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt; | &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;.\r\n*\r\n* &lt;b&gt;CURLAUTH_ANYSAFE&lt;/b&gt; is an alias for &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt; | &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt; |\r\n* &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;.\r\n*\r\n* Default is &lt;b&gt;CURLAUTH_ANY&lt;/b&gt;.\r\n*\r\n* @return null\r\n*/\r\npublic function http_authentication($username, $password, $type = CURLAUTH_ANY)\r\n{\r\n\r\n// set the required options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPAUTH =&gt; $type,\r\nCURLOPT_USERPWD =&gt; $username . '':'' . $password,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Allows you to set one or more {@link http://php.net/manual/en/function.curl-setopt.php cURL options}.\r\n*\r\n* &lt;code&gt;\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // setting a single option\r\n* $curl-&gt;option(CURLOPT_CONNECTTIMEOUT, 10);\r\n*\r\n* // setting multiple options at once\r\n* $curl-&gt;option(array(\r\n* CURLOPT_TIMEOUT =&gt; 10,\r\n* CURLOPT_CONNECTTIMEOUT =&gt; 10,\r\n* ));\r\n*\r\n* // make a request here...\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $option A single option for which to set a value, or an associative array in the form of\r\n* &lt;i&gt;option&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; (in case of an array, the &lt;i&gt;$value&lt;/i&gt; argument will\r\n* be disregarded).\r\n*\r\n* &lt;i&gt;Setting a value to&lt;/i&gt; &lt;b&gt;null&lt;/b&gt; &lt;i&gt;will "unset" that option.&lt;/i&gt;\r\n*\r\n* @param mixed $value (Optional) If the &lt;i&gt;$option&lt;/i&gt; argument is not an array, then this argument represents\r\n* the value to be set for the respective option. If the &lt;i&gt;$option&lt;/i&gt; argument is an\r\n* array, then the value of this argument will be ignored.\r\n*\r\n* &lt;i&gt;Setting a value to&lt;/i&gt; &lt;b&gt;null&lt;/b&gt; &lt;i&gt;will "unset" that option.&lt;/i&gt;\r\n*\r\n* @return null\r\n*\r\n*/\r\npublic function option($option, $value = '''')\r\n{\r\n\r\n// if $options is given as an array\r\nif (is_array($option))\r\n\r\n// iterate through each of the values\r\nforeach ($option as $name =&gt; $value)\r\n\r\n// if we need to "unset" an option, unset it\r\nif (is_null($value)) unset($this-&gt;options[$name]);\r\n\r\n// set the value for the option otherwise\r\nelse $this-&gt;options[$name] = $value;\r\n\r\n// if option is not given as an array,\r\n// if we need to "unset" an option, unset it\r\nelseif (is_null($value)) unset($this-&gt;options[$option]);\r\n\r\n// set the value for the option otherwise\r\nelse $this-&gt;options[$option] = $value;\r\n\r\n}\r\n\r\n/**\r\n* Performs an HTTP &lt;b&gt;POST&lt;/b&gt; to one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument, using the values specified\r\n* by the &lt;i&gt;$values&lt;/i&gt; argument, and executes the callback function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for\r\n* each and every request, as soon as each request finishes.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // do a POST and execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* $curl-&gt;post(''http://www.somewebsite.com'', array(\r\n* ''field_1'' =&gt; ''value 1'',\r\n* ''field_2'' =&gt; ''value 2'',\r\n* ), ''mycallback'');\r\n*\r\n* // do a POST and execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* // note that we''re also uploading a file this time\r\n* // and note that we''re prefixing the file name with @\r\n* $curl-&gt;post(''http://www.somewebsite.com'', array(\r\n* ''field_1'' =&gt; ''value 1'',\r\n* ''field_2'' =&gt; ''value 2'',\r\n* ''upload'' =&gt; ''@absolute/path/to/file.ext'',\r\n* ), ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to which to POST to.\r\n*\r\n* @param array $values An associative array in the form of &lt;i&gt;element =&gt; value&lt;/i&gt; representing the data to\r\n* post in the HTTP "POST" operation.\r\n*\r\n* To post a file, prepend the filename with @ and use the full path. The file type can\r\n* be explicitly specified by following the filename with the type in the format &lt;b&gt;'';type=mimetype''.&lt;/b&gt;\r\n* You should always specify the mime type as most of the times cURL will send the wrong\r\n* mime type...\r\n*\r\n* The &lt;i&gt;Content-Type&lt;/i&gt; header will be set to &lt;b&gt;multipart/form-data.&lt;/b&gt;\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array is an\r\n* associative array in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page at the\r\n* URL).\r\n*\r\n* Unless disabled via the {@link __construct() constructor}, all\r\n* applicable characters will be converted to HTML entities via\r\n* PHP''s {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function, so remember to use PHP''s {@link http://www.php.net/manual/en/function.html-entity-decode.php html_entity_decode()}\r\n* function to do reverse this, if it''s the case;\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function post($url, $values, $callback = '''')\r\n{\r\n\r\n// if second argument is not an array, trigger an error\r\nif (!is_array($values)) trigger_error(''Second argument to method "post" must be an array!'', E_USER_ERROR);\r\n\r\n// prepare cURL for making a POST\r\n$this-&gt;option(array(\r\nCURLOPT_POST =&gt; 1,\r\nCURLOPT_POSTFIELDS =&gt; http_build_query($values, NULL, ''&amp;''),\r\n));\r\n\r\n// execute request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Instruct the library to tunnel all requests through a proxy server.\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the class\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // connect to a proxy server\r\n* // (that''s a random one i got from http://www.hidemyass.com/proxy-list/)\r\n* $curl-&gt;proxy(''187.63.32.250'', ''3128'');\r\n*\r\n* // fetch a page\r\n* $curl-&gt;get(''http://www.somewebsite.com/'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param string $proxy The HTTP proxy to tunnel requests through.\r\n*\r\n* Can be an URL or an IP address.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and setting &lt;/i&gt;\r\n* &lt;b&gt;CURLOPT_PROXY&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* Setting this argument to FALSE will "unset" all the proxy-related options.\r\n*\r\n* @param string $port (Optional) The port number of the proxy to connect to.\r\n*\r\n* Default is 80.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and setting &lt;/i&gt;\r\n* &lt;b&gt;CURLOPT_PROXYPORT&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param string $username (Optional) The username to be used for the connection to the proxy (if required\r\n* by the proxy)\r\n*\r\n* Default is "" (an empty string)\r\n*\r\n* &lt;i&gt;The username and the password can also be set using the {@link option()} method\r\n* and setting &lt;/i&gt; &lt;b&gt;CURLOPT_PROXYUSERPWD&lt;/b&gt; &lt;i&gt; option to the desired value\r\n* formatted like &lt;/i&gt; &lt;b&gt;[username]:[password]&lt;/b&gt;. .\r\n*\r\n* @param string $password (Optional) The password to be used for the connection to the proxy (if required\r\n* by the proxy)\r\n*\r\n* Default is "" (an empty string)\r\n*\r\n* &lt;i&gt;The username and the password can also be set using the {@link option()} method\r\n* and setting &lt;/i&gt; &lt;b&gt;CURLOPT_PROXYUSERPWD&lt;/b&gt; &lt;i&gt; option to the desired value\r\n* formatted like &lt;/i&gt; &lt;b&gt;[username]:[password]&lt;/b&gt;. .\r\n*\r\n* @return null\r\n*/\r\npublic function proxy($proxy, $port = 80, $username = '''', $password = '''')\r\n{\r\n\r\n// if not disabled\r\nif ($proxy) {\r\n\r\n// set the required options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPPROXYTUNNEL =&gt; 1,\r\nCURLOPT_PROXY =&gt; $proxy,\r\nCURLOPT_PROXYPORT =&gt; $port,\r\n));\r\n\r\n// if a username is also specified\r\nif ($username != '''')\r\n\r\n// set authentication values\r\n$this-&gt;option(CURLOPT_PROXYUSERPWD, $username . '':'' . $password);\r\n\r\n// if disabled\r\n} else\r\n\r\n// unset proxy-related options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPPROXYTUNNEL =&gt; null,\r\nCURLOPT_PROXY =&gt; null,\r\nCURLOPT_PROXYPORT =&gt; null,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Requests made to HTTPS servers sometimes require additional configuration, depending on the server. Most of the\r\n* times {@link __construct() the defaults} set by the library will get you through, but if defaults are not working,\r\n* you can set specific options using this method.\r\n*\r\n* &lt;code&gt;\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the class\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // instruct the library to verify peer''s SSL certificate\r\n* // (ignored if request is not made through HTTPS)\r\n* $curl-&gt;ssl(true);\r\n*\r\n* // fetch a page\r\n* $curl-&gt;get(''https://www.somewebsite.com/'', create_function(''$result'', ''print_r("&lt;pre&gt;"); print_r($result);''));\r\n* &lt;/code&gt;\r\n*\r\n* @param boolean $verify_peer (Optional) Should the peer''s certificate be verified by cURL?\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param integer $verify_host (Optional) Specifies whether or not to check the existence of a common\r\n* name in the SSL peer certificate and that it matches with the provided\r\n* hostname.\r\n*\r\n* - 1 to check the existence of a common name in the SSL peer certificate;\r\n* - 2 to check the existence of a common name and also verify that it\r\n* matches the hostname provided; in production environments the value\r\n* of this option should be kept at 2;\r\n*\r\n* Default is 2\r\n*\r\n* &lt;samp&gt;Support for value 1 removed in cURL 7.28.1&lt;/samp&gt;\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_SSL_VERIFYHOST&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param mixed $file (Optional) An absolute path to a file holding one or more certificates to\r\n* verify the peer with. This only makes sense if &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt;\r\n* is set to TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_CAINFO&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param mixed $path (Optional) An absolute path to a directory that holds multiple CA\r\n* certificates. This only makes sense if &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; is\r\n* set to TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_CAPATH&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @return null\r\n*/\r\npublic function ssl($verify_peer = false, $verify_host = 2, $file = false, $path = false)\r\n{\r\n\r\n// set default options\r\n$this-&gt;option(array(\r\nCURLOPT_SSL_VERIFYPEER =&gt; $verify_peer,\r\nCURLOPT_SSL_VERIFYHOST =&gt; $verify_host,\r\n));\r\n\r\n// if a path to a file holding one or more certificates to verify the peer with was given\r\nif ($file !== false)\r\n\r\n// if file could be found, use it\r\nif (is_file($file)) $this-&gt;option(CURLOPT_CAINFO, $file);\r\n\r\n// if file was not found, trigger an error\r\nelse trigger_error(''File "'' . $file . ''", holding one or more certificates to verify the peer with, was not found!'', E_USER_ERROR);\r\n\r\n// if a directory holding multiple CA certificates was given\r\nif ($path !== false)\r\n\r\n// if folder could be found, use it\r\nif (is_dir($path)) $this-&gt;option(CURLOPT_CAPATH, $path);\r\n\r\n// if folder was not found, trigger an error\r\nelse trigger_error(''Directory "'' . $path . ''", holding one or more CA certificates to verify the peer with, was not found!'', E_USER_ERROR);\r\n\r\n}\r\n\r\n/**\r\n* Returns the set options in "human-readable" format.\r\n*\r\n* @return string Returns the set options in "human-readable" format.\r\n*\r\n* @access private\r\n*/\r\nprivate function _debug()\r\n{\r\n\r\n$result = '''';\r\n\r\n// iterate through the defined constants\r\nforeach(get_defined_constants() as $name =&gt; $number)\r\n\r\n// iterate through the set options\r\nforeach ($this-&gt;options as $index =&gt; $value)\r\n\r\n// if this is a curl-related constant and it is one of the options that are set, add it to the result\r\nif (substr($name, 0, 7) == ''CURLOPT'' &amp;&amp; $number == $index) $result .= $name . '' =&gt; '' . $value . ''&lt;br&gt;'';\r\n\r\n// return the result\r\nreturn $result;\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method to process request and response headers. It parses a string\r\n* containing one or more HTTP headers and returns an array of headers where each entry also contains an associative\r\n* array of &lt;i&gt;name&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; for each row of data in the respective header.\r\n*\r\n* @param string $headers A string containing one or more HTTP headers, where multiple headers are separated by\r\n* a blank line.\r\n*\r\n* @return mixed Returns an array of headers where each entry also contains an associative array of\r\n* &lt;i&gt;name&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; for each row of data in the respective header.\r\n*\r\n* If CURLOPT_HEADER is set to FALSE or 0, this method will return an empty string.\r\n*\r\n* @access private\r\n*/\r\nprivate function _parse_headers($headers)\r\n{\r\n\r\n$result = array();\r\n\r\n// if we have nothing to work with\r\nif ($headers != '''') {\r\n\r\n// split multiple headers by blank lines\r\n$headers = preg_split(''/^\\s*$/m'', trim($headers));\r\n\r\n// iterate through the headers\r\nforeach($headers as $index =&gt; $header) {\r\n\r\n$arguments_count = func_num_args();\r\n\r\n// get all the lines in the header\r\n// lines in headers look like [name] : [value]\r\n// also, the first line, the status, does not have a name, so we add the name now\r\npreg_match_all(''/^(.*?)\\:\\s(.*)$/m'', ($arguments_count == 2 ? ''Request Method: '' : ''Status: '') . trim($header), $matches);\r\n\r\n// save results\r\nforeach ($matches[0] as $key =&gt; $value)\r\n\r\n$result[$index][$matches[1][$key]] = trim($matches[2][$key]);\r\n\r\n}\r\n\r\n}\r\n\r\n// return headers as an array\r\nreturn $result;\r\n\r\n}\r\n\r\n/**\r\n* Does the actual work.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _process($urls, $callback = '''')\r\n{\r\n\r\n// if caching is enabled but path doesn''t exist or is not writable\r\nif ($this-&gt;cache !== false &amp;&amp; (!is_dir($this-&gt;cache[''path'']) || !is_writable($this-&gt;cache[''path''])))\r\n\r\n// trigger an error and stop execution\r\ntrigger_error(''Cache path does not exists or is not writable!'', E_USER_ERROR);\r\n\r\n// if callback function doesn''t exists\r\nif ($callback != '''' &amp;&amp; !is_callable($callback))\r\n\r\n// trigger an error and stop execution\r\ntrigger_error(''Callback function "'' . $callback . ''" does not exist!'', E_USER_ERROR);\r\n\r\n$urls = !is_array($urls) ? (array)$urls : $urls;\r\n\r\n// only if we''re making a GET request, and caching is enabled\r\nif (isset($this-&gt;options[CURLOPT_HTTPGET]) &amp;&amp; $this-&gt;options[CURLOPT_HTTPGET] == 1 &amp;&amp; $this-&gt;cache !== false) {\r\n\r\n// iterate through the URLs\r\nforeach ($urls as $url) {\r\n\r\n// get the path to the cache file associated with the URL\r\n$cache_path = rtrim($this-&gt;cache[''path''], ''/'') . ''/'' . md5($url);\r\n\r\n// if cache file exists and is not expired\r\nif (file_exists($cache_path) &amp;&amp; filemtime($cache_path) + $this-&gt;cache[''lifetime''] &gt; time()) {\r\n\r\n// if we have a callback, return the result from the cache file, and feed it as argument to the callback function\r\nif ($callback != '''') call_user_func($callback, unserialize($this-&gt;cache[''compress''] ? gzuncompress(file_get_contents($cache_path)) : file_get_contents($cache_path)));\r\n\r\n// if no cache file, or cache file is expired\r\n} else $this-&gt;_queue[] = $url;\r\n\r\n}\r\n\r\n// if we''re not making a GET request or caching is disabled, we don''t bother with cache: we need to process all the URLs\r\n} else $this-&gt;_queue = $urls;\r\n\r\n// if there are any URLs to process\r\nif (!empty($this-&gt;_queue)) {\r\n\r\n// initialize the multi handle\r\n// this will allow us to process multiple cURL handles in parallel\r\n$this-&gt;_multi_handle = curl_multi_init();\r\n\r\n// queue the first batch of URLs\r\n// (as many as defined by the "threads" property or less if there aren''t as many URLs)\r\n$this-&gt;_queue_requests();\r\n\r\n$running = null;\r\n\r\n// loop\r\ndo {\r\n\r\n// get status update\r\nwhile (($status = curl_multi_exec($this-&gt;_multi_handle, $running)) == CURLM_CALL_MULTI_PERFORM);\r\n\r\n// if no request has finished yet, keep looping\r\nif ($status != CURLM_OK) break;\r\n\r\n// if a request was just completed, we''ll have to find out which one\r\nwhile ($info = curl_multi_info_read($this-&gt;_multi_handle)) {\r\n\r\n// get handle of the completed request\r\n$handle = $info[''handle''];\r\n\r\n// get content associated with the handle\r\n$content = curl_multi_getcontent($handle);\r\n\r\n// get the handle''s ID\r\n$resource_number = preg_replace(''/Resource id #/'', '''', $handle);\r\n\r\n// create a new object in which we will store all the data associated with the handle,\r\n// as properties of this object\r\n$result = new stdClass();\r\n\r\n// get information about the request\r\n$result-&gt;info = curl_getinfo($handle);\r\n\r\n// extend the "info" property with the original URL\r\n$result-&gt;info = array(''original_url'' =&gt; $this-&gt;_info[''fh'' . $resource_number][''original_url'']) + $result-&gt;info;\r\n\r\n// last request headers\r\n$result-&gt;headers[''last_request''] =\r\n\r\n(\r\n\r\n// if CURLINFO_HEADER_OUT is set\r\nisset($this-&gt;options[CURLINFO_HEADER_OUT]) &amp;&amp;\r\n\r\n// if CURLINFO_HEADER_OUT is TRUE\r\n$this-&gt;options[CURLINFO_HEADER_OUT] == 1 &amp;&amp;\r\n\r\n// if we actually have this information\r\nisset($result-&gt;info[''request_header''])\r\n\r\n// extract request headers\r\n) ? $this-&gt;_parse_headers($result-&gt;info[''request_header''], true) : '''';\r\n\r\n// remove request headers information from its previous location\r\nunset($result-&gt;info[''request_header'']);\r\n\r\n// get headers (unless we were explicitly told not to)\r\n$result-&gt;headers[''responses''] = (isset($this-&gt;options[CURLOPT_HEADER]) &amp;&amp; $this-&gt;options[CURLOPT_HEADER] == 1) ?\r\n\r\n$this-&gt;_parse_headers(substr($content, 0, $result-&gt;info[''header_size''])) :\r\n\r\n'''';\r\n\r\n// get output (unless we were explicitly told not to)\r\n$result-&gt;body = (!isset($this-&gt;options[CURLOPT_NOBODY]) || (isset($this-&gt;options[CURLOPT_NOBODY]) &amp;&amp; $this-&gt;options[CURLOPT_NOBODY] == 0)) ?\r\n\r\n((isset($this-&gt;options[CURLOPT_HEADER]) &amp;&amp; $this-&gt;options[CURLOPT_HEADER] == 1) ?\r\n\r\nsubstr($content, $result-&gt;info[''header_size'']) :\r\n\r\n$content) :\r\n\r\n'''';\r\n\r\n// if we have a body, we''re not doing a binary transfer, and _htmlentities is set to TRUE, run htmlentities() on it\r\nif (!empty($result-&gt;body) &amp;&amp; !isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;_htmlentities) $result-&gt;body = htmlentities($result-&gt;body);\r\n\r\n// get CURLs response code and associated message\r\n$result-&gt;response = array($this-&gt;_response_messages[$info[''result'']], $info[''result'']);\r\n\r\n// if caching is enabled and we''re making a GET request\r\nif ($this-&gt;cache !== false &amp;&amp; isset($this-&gt;options[CURLOPT_HTTPGET]) &amp;&amp; $this-&gt;options[CURLOPT_HTTPGET] == 1) {\r\n\r\n// get the path to the cache file associated with the URL\r\n$cache_path = rtrim($this-&gt;cache[''path''], ''/'') . ''/'' . md5($result-&gt;info[''original_url'']);\r\n\r\n// cache the result\r\nfile_put_contents($cache_path, $this-&gt;cache[''compress''] ? gzcompress(serialize($result)) : serialize($result));\r\n\r\n// set rights on the file\r\nchmod($cache_path, intval($this-&gt;cache[''chmod''], 8));\r\n\r\n}\r\n\r\n// call the attached callback function sending our object as argument\r\nif ($callback != '''') call_user_func($callback, $result);\r\n\r\n// if there are more URLs to process, queue the next one\r\nif (!empty($this-&gt;_queue)) $this-&gt;_queue_requests();\r\n\r\n// remove the handle that we finished processing\r\n// this needs to be done *after* we''ve already queued a new URL for processing\r\ncurl_multi_remove_handle($this-&gt;_multi_handle, $handle);\r\n\r\n// make sure the handle gets closed\r\ncurl_close($handle);\r\n\r\n// if we''re downloading something\r\nif (isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;options[CURLOPT_BINARYTRANSFER])\r\n\r\n// close the associated file pointer\r\nfclose($this-&gt;_info[''fh'' . $resource_number][''file_handler'']);\r\n\r\n// remove information associated with this resource\r\nunset($this-&gt;_info[''fh'' . $resource_number]);\r\n\r\n}\r\n\r\n// waits until curl_multi_exec() returns CURLM_CALL_MULTI_PERFORM or until the timeout, whatever happens first\r\nif ($running) curl_multi_select($this-&gt;_multi_handle, 1);\r\n\r\n// as long as there are threads running\r\n} while ($running);\r\n\r\n// close the multi curl handle\r\ncurl_multi_close($this-&gt;_multi_handle);\r\n\r\n}\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method, which takes care of keeping a constant number of requests\r\n* queued, so that as soon as one request finishes another one will instantly take its place, thus making sure that\r\n* the maximum allowed number of parallel threads are running all the time.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _queue_requests()\r\n{\r\n\r\n// get the length of the queue\r\n$queue_length = count($this-&gt;_queue);\r\n\r\n// iterate through the items in the queue\r\nfor ($i = 0; $i &lt; ($queue_length &lt; $this-&gt;threads ? $queue_length : $this-&gt;threads); $i++) {\r\n\r\n// remove first URL from the queue\r\n$url = array_shift($this-&gt;_queue);\r\n\r\n// initialize individual cURL handle with the URL\r\n$handle = curl_init($url);\r\n\r\n// make sure defaults are set\r\n$this-&gt;_set_defaults();\r\n\r\n// get the handle''s ID\r\n$resource_number = preg_replace(''/Resource id #/'', '''', $handle);\r\n\r\n// save the original URL\r\n// (because there may be redirects, and because "curl_getinfo" returns information only about the last\r\n// request, this can be lost otherwise)\r\n$this-&gt;_info[''fh'' . $resource_number][''original_url''] = $url;\r\n\r\n// if we''re downloading something\r\nif (isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;options[CURLOPT_BINARYTRANSFER]) {\r\n\r\n// open a file and save the file pointer\r\n$this-&gt;_info[''fh'' . $resource_number][''file_handler''] = fopen($this-&gt;download_path . basename($url), ''w'');\r\n\r\n// no headers\r\n$this-&gt;option(CURLOPT_HEADER, 0);\r\n\r\n// tell cURL to use the file for streaming the download\r\n$this-&gt;option(CURLOPT_FILE, $this-&gt;_info[''fh'' . $resource_number][''file_handler'']);\r\n\r\n}\r\n\r\n// set options for the handle\r\ncurl_setopt_array($handle, $this-&gt;options);\r\n\r\n// add the normal handle to the multi handle\r\ncurl_multi_add_handle($this-&gt;_multi_handle, $handle);\r\n\r\n}\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method, which sets the default cURL options for each request.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _set_defaults()\r\n{\r\n\r\n// if "CURLOPT_AUTOREFERER" has not been explicitly set, make it TRUE\r\n// (automatically set the "Referer:" field where it follows a "Location:" redirect)\r\nif (!isset($this-&gt;options[CURLOPT_AUTOREFERER])) $this-&gt;option(CURLOPT_AUTOREFERER, 1);\r\n\r\n// if "CURLOPT_COOKIEFILE" has not been explicitly set, set it to the default value\r\n// (name of the file containing the cookie data; if the name is an empty string, no cookies are\r\n// loaded, but cookie handling is still enabled)\r\nif (!isset($this-&gt;options[CURLOPT_COOKIEFILE])) $this-&gt;option(CURLOPT_COOKIEFILE, '''');\r\n\r\n// if "CURLOPT_CONNECTTIMEOUT" has not been explicitly set, set it to the default value\r\n// (the number of seconds to wait while trying to connect)\r\nif (!isset($this-&gt;options[CURLOPT_CONNECTTIMEOUT])) $this-&gt;option(CURLOPT_CONNECTTIMEOUT, 10);\r\n\r\n// if "CURLOPT_FOLLOWLOCATION" has not been explicitly set, make it TRUE\r\n// (follow any "Location:" header that the server sends as part of the HTTP header - note this is recursive\r\n// and that PHP will follow as many "Location:" headers as specified by CURLOPT_MAXREDIRS)\r\nif (!isset($this-&gt;options[CURLOPT_FOLLOWLOCATION])) $this-&gt;option(CURLOPT_FOLLOWLOCATION, 1);\r\n\r\n// if "CURLOPT_HEADER" has not been explicitly set, make it TRUE\r\n// (include the response header(s) as a property of the object given as argument to the callback)\r\nif (!isset($this-&gt;options[CURLOPT_HEADER])) $this-&gt;option(CURLOPT_HEADER, 1);\r\n\r\n// if "CURLINFO_HEADER_OUT" has not been explicitly set, make it TRUE\r\n// (include the last request headers as a property of the object given as argument to the callback)\r\nif (!isset($this-&gt;options[CURLINFO_HEADER_OUT])) $this-&gt;option(CURLINFO_HEADER_OUT, 1);\r\n\r\n// if "CURLOPT_MAXREDIRS" has not been explicitly set, set it to the default value\r\n// (the maximum amount of HTTP redirections to follow; used together with CURLOPT_FOLLOWLOCATION)\r\nif (!isset($this-&gt;options[CURLOPT_MAXREDIRS])) $this-&gt;option(CURLOPT_MAXREDIRS, 50);\r\n\r\n// if "CURLOPT_TIMEOUT" has not been explicitly set, set it to the default value\r\n// (the maximum number of seconds to allow cURL functions to execute)\r\nif (!isset($this-&gt;options[CURLOPT_TIMEOUT])) $this-&gt;option(CURLOPT_TIMEOUT, 30);\r\n\r\n// if "CURLOPT_USERAGENT" has not been explicitly set, use a random user agent\r\n// (some services/websites will block the request if there''s no/invalid user agent)\r\n// note that the user agent will change whenever you run the script!\r\nif (!isset($this-&gt;options[CURLOPT_USERAGENT])) $this-&gt;option(CURLOPT_USERAGENT, $this-&gt;_user_agent());\r\n\r\n// if "CURLOPT_RETURNTRANSFER" is always TRUE\r\n// (return the transfer as a string of instead of outputting it out directly)\r\n$this-&gt;option(CURLOPT_RETURNTRANSFER, 1);\r\n\r\n}\r\n\r\n/**\r\n* Generates a (slightly) random user agent (Internet Explorer 9 or 10, on Windows Vista, 7 or 8, with other extra\r\n* strings)\r\n*\r\n* Some web services will not respond unless a valid user-agent string is provided.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _user_agent()\r\n{\r\n\r\n// browser version: 9 or 10\r\n$version = rand(9, 10);\r\n\r\n// windows version; here are the meanings:\r\n// Windows NT 6.2 -&gt; Windows 8 // can have IE10\r\n// Windows NT 6.1 -&gt; Windows 7 // can have IE9 or IE10\r\n// Windows NT 6.0 -&gt; Windows Vista // can have IE9\r\n$major_version = 6;\r\n\r\n$minor_version =\r\n\r\n// for IE9 Windows can have "0", "1" or "2" as minor version number\r\n$version == 8 || $version == 9 ? rand(0, 2) :\r\n\r\n// for IE10 Windows will have "2" as major version number\r\n2;\r\n\r\n// add some extra information\r\n$extras = rand(0, 3);\r\n\r\n// return the random user agent string\r\nreturn ''Mozilla/5.0 (compatible; MSIE '' . $version . ''.0; Windows NT '' . $major_version . ''.'' . $minor_version . ($extras == 1 ? ''; WOW64'' : ($extras == 2 ? ''; Win64; IA64'' : ($extras == 3 ? ''; Win64; x64'' : ''''))) . '')'';\r\n\r\n}\r\n\r\n}\r\n\r\n?&gt;', '高性能CURL类', '', 'publish', 'open', 'open', '', '%e9%ab%98%e6%80%a7%e8%83%bdcurl%e7%b1%bb', '', '', '2014-04-16 16:04:14', '2014-04-16 08:04:14', '', 0, 'http://afeier.sinaapp.com/?p=50', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(51, 1, '2014-04-16 16:02:23', '2014-04-16 08:02:23', '', '高性能curl类', '', 'inherit', 'open', 'open', '', '201312181459414245', '', '', '2014-04-16 16:02:23', '2014-04-16 08:02:23', '', 50, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/201312181459414245.zip', 0, 'attachment', 'application/zip', 0),
(52, 1, '2014-04-16 16:03:34', '2014-04-16 08:03:34', '打包下载<a href="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/201312181459414245.zip">高性能curl类</a>', '高性能CURL类', '', 'inherit', 'open', 'open', '', '50-revision', '', '', '2014-04-16 16:03:34', '2014-04-16 08:03:34', '', 50, 'http://afeier.sinaapp.com/?p=52', 0, 'revision', '', 0),
(2, 1, '2014-02-28 06:12:39', '2014-02-28 06:12:39', '这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如，个人博客通常有类似这样的介绍：\n\n<blockquote>欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的博客。我住在天朝的帝都，有条叫做 Jack 的狗。</blockquote>\n\n... 公司博客可以这样写：\n\n<blockquote>XYZ Doohickey 公司成立于 1971 年，自从建立以来，我们一直向社会贡献着优秀 doohicky。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</blockquote>\n\n您可以访问<a href="http://1.afeier.sinaapp.com/wp-admin/">仪表盘</a>，删除本页面，然后添加您自己的内容。祝您使用愉快！', '示例页面', '', 'publish', 'open', 'open', '', 'sample-page', '', '', '2014-02-28 06:12:39', '2014-02-28 06:12:39', '', 0, 'http://1.afeier.sinaapp.com/?page_id=2', 0, 'page', '', 0),
(4, 1, '2014-02-28 14:18:02', '2014-02-28 06:18:02', 'class mypdo extends pdo{\r\n\r\nprivate static $instances=null;\r\n\r\npublic $connected=false;\r\n\r\n&nbsp;\r\n\r\npublic static function getInstance($options=array()){\r\n\r\n&nbsp;\r\n\r\nif(self::$instances==null){\r\n\r\nself::$instances = array();\r\n\r\n}\r\n\r\n$options = self::_setOptions($options);\r\n\r\nksort($options);\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nif(empty(self::$instances[$name])){\r\n\r\n&nbsp;\r\n\r\ntry{\r\n\r\n$name = md5(serialize($options));\r\n\r\nself::$instances[$name] = new mypdo($options);\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nself::$instances[$name]-&gt;connected = true;\r\n\r\n}catch(\\PDOException $e){\r\n\r\necho $e-&gt;getMessage();\r\n\r\nreturn false;\r\n\r\n}\r\n\r\nreturn self::$instances[$name];\r\n\r\n}else{\r\n\r\nreturn self::$instances[$name];\r\n\r\n}\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\npublic function __construct($options, $driver_options = null){\r\n\r\nparent::__construct($options[''type''].'':dbname=''.$options[''name''].'';host=''.$options[''host''].'';charset=''.$options[''charset''], $options[''user''], $options[''pass''], $driver_options);\r\n\r\n$this-&gt;setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\r\n\r\n//$this-&gt;setAttribute(\\PDO::ATTR_EMULATE_PREPARES, false);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\npublic static function _setOptions($options = array()){\r\n\r\nif(empty($options)){\r\n\r\n$options[''user''] = '''';\r\n\r\n$options[''pass''] = '''';\r\n\r\n$options[''name''] = '''';\r\n\r\n$options[''host''] = ''xx.mysql.rds.aliyuncs.com'';\r\n\r\n$options[''type''] = ''mysql'';\r\n\r\n$options[''charset''] = ''utf8'';\r\n\r\n$options[''prefix''] = '''';\r\n\r\n}\r\n\r\nreturn $options;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}', '一个简单的PDO封装类，单件模式', '', 'publish', 'open', 'open', '', '%e4%b8%80%e4%b8%aa%e7%ae%80%e5%8d%95%e7%9a%84pdo%e5%b0%81%e8%a3%85%e7%b1%bb%ef%bc%8c%e5%8d%95%e4%bb%b6%e6%a8%a1%e5%bc%8f', '', '', '2014-07-27 16:58:41', '2014-07-27 08:58:41', '', 0, 'http://afeier.sinaapp.com/?p=4', 0, 'post', '', 0),
(5, 1, '2014-02-28 14:17:36', '2014-02-28 06:17:36', '', '自动草稿', '', 'inherit', 'open', 'open', '', '4-revision', '', '', '2014-02-28 14:17:36', '2014-02-28 06:17:36', '', 4, 'http://afeier.sinaapp.com/?p=5', 0, 'revision', '', 0),
(7, 1, '2014-02-28 14:19:06', '2014-02-28 06:19:06', 'class mypdo extends pdo{\n\nprivate static $instances=null;\n\npublic $connected=false;\n\n&nbsp;\n\npublic static function getInstance($options=array()){\n\n&nbsp;\n\nif(self::$instances==null){\n\nself::$instances = array();\n\n}\n\n$options = self::_setOptions($options);\n\nksort($options);\n\n&nbsp;\n\n&nbsp;\n\nif(empty(self::$instances[$name])){\n\n&nbsp;\n\ntry{\n\n$name = md5(serialize($options));\n\nself::$instances[$name] = new mypdo($options);\n\n&nbsp;\n\n&nbsp;\n\nself::$instances[$name]-&gt;connected = true;\n\n}catch(\\PDOException $e){\n\necho $e-&gt;getMessage();\n\nreturn false;\n\n}\n\nreturn self::$instances[$name];\n\n}else{\n\nreturn self::$instances[$name];\n\n}\n\n}\n\n&nbsp;\n\npublic function __construct($options, $driver_options = null){\n\nparent::__construct($options[''type''].'':dbname=''.$options[''name''].'';host=''.$options[''host''].'';charset=''.$options[''charset''], $options[''user''], $options[''pass''], $driver_options);\n\n$this-&gt;setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\n\n//$this-&gt;setAttribute(\\PDO::ATTR_EMULATE_PREPARES, false);\n\n}\n\n&nbsp;\n\n&nbsp;\n\npublic static function _setOptions($options = array()){\n\nif(empty($options)){\n\n$options[''user''] = '''';\n\n$options[''pass''] = '''';\n\n$options[''name''] = '''';\n\n$options[''host''] = ''xx.mysql.rds.aliyuncs.com'';\n\n$options[''type''] = ''mysql'';\n\n$options[''charset''] = ''utf8'';\n\n$options[''prefix''] = '''';\n\n}\n\nreturn $options;\n\n}\n\n&nbsp;\n\n}', '一个简单的PDO封装类，单件模式', '', 'inherit', 'open', 'open', '', '4-autosave', '', '', '2014-02-28 14:19:06', '2014-02-28 06:19:06', '', 4, 'http://afeier.sinaapp.com/?p=7', 0, 'revision', '', 0),
(8, 1, '2014-02-28 14:39:20', '2014-02-28 06:39:20', 'DELIMITER ||;\r\n\r\nCREATE TRIGGER t_cid BEFORE INSERT ON TABLE\r\n\r\nFOR EACH ROW BEGIN\r\n\r\nselect count(increc_id) into @inid from test.tb_cate;\r\n\r\n&nbsp;\r\n\r\nif @inid=0 then\r\n\r\nset new.id = SUBSTRING(concat(''00000'',cast(LAST_INSERT_ID() as char)),(char_length(concat(''00000'',cast(LAST_INSERT_ID() as char)))-4));\r\n\r\nelse\r\n\r\nset new.id = SUBSTRING(concat(''00000'',cast(LAST_INSERT_ID()+1 as char)),(char_length(concat(''00000'',cast(LAST_INSERT_ID()+1 as char)))-4));\r\n\r\nend if;\r\n\r\nEND//', 'mysql 触发生成唯一ID', '', 'publish', 'open', 'open', '', 'mysql-%e8%a7%a6%e5%8f%91%e7%94%9f%e6%88%90%e5%94%af%e4%b8%80id', '', '', '2014-02-28 14:39:20', '2014-02-28 06:39:20', '', 0, 'http://afeier.sinaapp.com/?p=8', 0, 'post', '', 0),
(9, 1, '2014-02-28 14:39:05', '2014-02-28 06:39:05', '', '自动草稿', '', 'inherit', 'open', 'open', '', '8-revision', '', '', '2014-02-28 14:39:05', '2014-02-28 06:39:05', '', 8, 'http://afeier.sinaapp.com/?p=9', 0, 'revision', '', 0),
(10, 1, '2014-02-28 14:40:17', '2014-02-28 06:40:17', '批量查找多个文件中存在的字符\r\n\r\nfind www-error.log -print0|xargs -0 grep -i "wangyin_return"', '常用linux命令', '', 'publish', 'open', 'open', '', '%e5%b8%b8%e7%94%a8linux%e5%91%bd%e4%bb%a4', '', '', '2014-02-28 14:40:17', '2014-02-28 06:40:17', '', 0, 'http://afeier.sinaapp.com/?p=10', 0, 'post', '', 0),
(11, 1, '2014-02-28 14:39:48', '2014-02-28 06:39:48', '', '自动草稿', '', 'inherit', 'open', 'open', '', '10-revision', '', '', '2014-02-28 14:39:48', '2014-02-28 06:39:48', '', 10, 'http://afeier.sinaapp.com/?p=11', 0, 'revision', '', 0),
(12, 1, '2014-02-28 14:41:09', '2014-02-28 06:41:09', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n\r\n4、解压jemalloc\r\n\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc=/opt/jemalloc-3.4.1 --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data \r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n//×××××××\r\n\r\n开发环境安装这个东东，正式环境不装\r\n\r\nhttp://www.laruence.com/2012/02/14/2544.html\r\n\r\n/××××××××\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n开启过滤\r\n\r\nfilter.default = full_special_chars\r\nfilter.default_flags = 0\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n3、把交换分区也关闭掉，修改/etc/rc.local\r\n\r\n加入：swapoff -a\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-fpm+mysql+waf的WEB服务器', '', 'publish', 'open', 'open', '', '%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e7%89%9bx%e7%9a%84ubuntunginxphp5-ftpmmysqlwaf%e7%9a%84web%e6%9c%8d%e5%8a%a1%e5%99%a8', '', '', '2015-10-14 10:55:06', '2015-10-14 02:55:06', '', 0, 'http://afeier.sinaapp.com/?p=12', 0, 'post', '', 0),
(13, 1, '2014-02-28 14:41:05', '2014-02-28 06:41:05', '安装部分：\n=========================================================================================================================\n1、准备环境\n\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\n\n\n2、编译安装modsecurity\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\n./autogen.sh\n./configure --enable-standalone-module\nmake &amp;&amp; make install\n\n\n\n\n3、编译安装gperftools\n\n./configure --enable-frame-pointers\n\nmake &amp;&amp; make install\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\n\n\n4、编译安装jemalloc\n\n./configure\n\nmake &amp;&amp; make install\n\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\n\n5、编译安装tengine | nginx\n\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\nmake &amp;&amp; make install\n\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\n\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:          nginx\n# Required-Start:    $network $remote_fs $local_fs\n# Required-Stop:     $network $remote_fs $local_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Stop/start nginx\n### END INIT INFO\n\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\n\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\nDESC=nginx\nNAME=nginx\nCONFFILE=/etc/nginx/nginx.conf\nDAEMON=/usr/sbin/nginx\nPIDFILE=/var/run/$NAME.pid\nSCRIPTNAME=/etc/init.d/$NAME\n\n[ -x $DAEMON ] || exit 0\n\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\n\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\n\n. /lib/init/vars.sh\n\n. /lib/lsb/init-functions\n\ndo_start()\n{\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n$DAEMON_ARGS\nRETVAL="$?"\nreturn "$RETVAL"\n}\n\ndo_stop()\n{\n# Return\n#   0 if daemon has been stopped\n#   1 if daemon was already stopped\n#   2 if daemon could not be stopped\n#   other if a failure occurred\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nrm -f $PIDFILE\nreturn "$RETVAL"\n}\n\ndo_reload() {\n#\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nreturn "$RETVAL"\n}\n\ndo_configtest() {\nif [ "$#" -ne 0 ]; then\ncase "$1" in\n-q)\nFLAG=$1\n;;\n*)\n;;\nesac\nshift\nfi\n$DAEMON -t $FLAG -c $CONFFILE\nRETVAL="$?"\nreturn $RETVAL\n}\n\ndo_upgrade() {\nOLDBINPIDFILE=$PIDFILE.oldbin\n\ndo_configtest -q || return 6\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nsleep 1\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\nRETVAL="$?"\nelse\necho $"Upgrade failed!"\nRETVAL=1\nreturn $RETVAL\nfi\n}\n\ncase "$1" in\nstart)\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\ndo_start\ncase "$?" in\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\nesac\n;;\nstop)\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\ndo_stop\ncase "$?" in\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\nesac\n;;\nstatus)\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\n;;\nconfigtest)\ndo_configtest\n;;\nupgrade)\ndo_upgrade\n;;\nreload|force-reload)\nlog_daemon_msg "Reloading $DESC" "$NAME"\ndo_reload\nlog_end_msg $?\n;;\nrestart|force-reload)\nlog_daemon_msg "Restarting $DESC" "$NAME"\ndo_configtest -q || exit $RETVAL\ndo_stop\ncase "$?" in\n0|1)\ndo_start\ncase "$?" in\n0) log_end_msg 0 ;;\n1) log_end_msg 1 ;; # Old process is still running\n*) log_end_msg 1 ;; # Failed to start\nesac\n;;\n*)\n# Failed to stop\nlog_end_msg 1\n;;\nesac\n;;\n*)\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\nexit 3\n;;\nesac\n\nexit $RETVAL\n\n\n7、自动启动\n\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\n\nservice nginx start\n\n8、安装php\n\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\n\n\n9、如有需要，安装mysql-server\n\napt-get install mysql-server\n\n\n至此，服务器安装基本搞定\n================================================================================================================================================\n\n&nbsp;\n\n&nbsp;\n\n配置\n\n&nbsp;\n\n1、修改php.ini\n\n加入：\n\n&nbsp;\n\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\n\n&nbsp;\n\n[HOST=w.xx.com]\n\n[PATH=/datas/www/w.xx.com]\n\nopen_basedir=/datas/www/w.xx.com/:/tmp/\n\n&nbsp;\n\n2、配置防火墙\n\n&nbsp;\n\nsudo ufw enable\n\n&nbsp;\n\nsudo ufw default deny\n\n&nbsp;\n\nsudo ufw allow 80\n\n&nbsp;\n\nsudo ufw allow 22\n\n&nbsp;\n\n3、配置nginx.conf', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision', '', '', '2014-02-28 14:41:05', '2014-02-28 06:41:05', '', 12, 'http://afeier.sinaapp.com/?p=13', 0, 'revision', '', 0),
(14, 1, '2015-10-21 15:28:40', '2015-10-21 07:28:40', '安装部分：\n========================================================\n1、准备环境\n\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\n\n4、解压jemalloc\n\n5、编译安装tengine | nginx\n\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc=/opt/jemalloc-3.4.1 --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data\nmake &amp;&amp; make install\n\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\n\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:          nginx\n# Required-Start:    $network $remote_fs $local_fs\n# Required-Stop:     $network $remote_fs $local_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Stop/start nginx\n### END INIT INFO\n\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\n\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\nDESC=nginx\nNAME=nginx\nCONFFILE=/etc/nginx/nginx.conf\nDAEMON=/usr/sbin/nginx\nPIDFILE=/var/run/$NAME.pid\nSCRIPTNAME=/etc/init.d/$NAME\n\n[ -x $DAEMON ] || exit 0\n\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\n\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\n\n. /lib/init/vars.sh\n\n. /lib/lsb/init-functions\n\ndo_start()\n{\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n$DAEMON_ARGS\nRETVAL="$?"\nreturn "$RETVAL"\n}\n\ndo_stop()\n{\n# Return\n#   0 if daemon has been stopped\n#   1 if daemon was already stopped\n#   2 if daemon could not be stopped\n#   other if a failure occurred\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nrm -f $PIDFILE\nreturn "$RETVAL"\n}\n\ndo_reload() {\n#\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nreturn "$RETVAL"\n}\n\ndo_configtest() {\nif [ "$#" -ne 0 ]; then\ncase "$1" in\n-q)\nFLAG=$1\n;;\n*)\n;;\nesac\nshift\nfi\n$DAEMON -t $FLAG -c $CONFFILE\nRETVAL="$?"\nreturn $RETVAL\n}\n\ndo_upgrade() {\nOLDBINPIDFILE=$PIDFILE.oldbin\n\ndo_configtest -q || return 6\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\nRETVAL="$?"\nsleep 1\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\nRETVAL="$?"\nelse\necho $"Upgrade failed!"\nRETVAL=1\nreturn $RETVAL\nfi\n}\n\ncase "$1" in\nstart)\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\ndo_start\ncase "$?" in\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\nesac\n;;\nstop)\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\ndo_stop\ncase "$?" in\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\nesac\n;;\nstatus)\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\n;;\nconfigtest)\ndo_configtest\n;;\nupgrade)\ndo_upgrade\n;;\nreload|force-reload)\nlog_daemon_msg "Reloading $DESC" "$NAME"\ndo_reload\nlog_end_msg $?\n;;\nrestart|force-reload)\nlog_daemon_msg "Restarting $DESC" "$NAME"\ndo_configtest -q || exit $RETVAL\ndo_stop\ncase "$?" in\n0|1)\ndo_start\ncase "$?" in\n0) log_end_msg 0 ;;\n1) log_end_msg 1 ;; # Old process is still running\n*) log_end_msg 1 ;; # Failed to start\nesac\n;;\n*)\n# Failed to stop\nlog_end_msg 1\n;;\nesac\n;;\n*)\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\nexit 3\n;;\nesac\n\nexit $RETVAL\n\n7、自动启动\n\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\n\nservice nginx start\n\n8、安装php\n\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\n\n9、如有需要，安装mysql-server\n\napt-get install mysql-server\n\n至此，服务器安装基本搞定\n================================================================\n\n//×××××××\n\n开发环境安装这个东东，正式环境不装\n\nhttp://www.laruence.com/2012/02/14/2544.html\n\n/××××××××\n\n配置\n\n&nbsp;\n\n1、修改php.ini\n\n加入：\n\n&nbsp;\n\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\n\n开启过滤\n\nfilter.default = full_special_chars\nfilter.default_flags = 0\n\n[HOST=w.xx.com]\n\n[PATH=/datas/www/w.xx.com]\n\nopen_basedir=/datas/www/w.xx.com/:/tmp/\n\n&nbsp;\n\n2、配置防火墙\n\n&nbsp;\n\nsudo ufw enable\n\n&nbsp;\n\nsudo ufw default deny\n\n&nbsp;\n\nsudo ufw allow 80\n\n&nbsp;\n\nsudo ufw allow 22\n\n&nbsp;\n\n3、配置nginx.conf\n\n&nbsp;\n\n4、配置服务器设置\n\n&nbsp;\n\n修改/etc/sysctl.conf\n\nnet.ipv4.ip_forward = 0\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.conf.default.accept_source_route = 0\nkernel.sysrq = 0\nkernel.core_uses_pid = 1\nnet.ipv4.tcp_syncookies = 1\nkernel.msgmnb = 65536\nkernel.msgmax = 65536\nkernel.shmmax = 68719476736\nkernel.shmall = 4294967296\nnet.ipv4.tcp_max_tw_buckets = 6000\nnet.ipv4.tcp_sack = 1\nnet.ipv4.tcp_window_scaling = 1\nnet.ipv4.tcp_rmem = 4096 87380 4194304\nnet.ipv4.tcp_wmem = 4096 16384 4194304\nnet.core.wmem_default = 8388608\nnet.core.rmem_default = 8388608\nnet.core.rmem_max = 16777216\nnet.core.wmem_max = 16777216\nnet.core.netdev_max_backlog = 262144\nnet.core.somaxconn = 262144\nnet.ipv4.tcp_max_orphans = 3276800\nnet.ipv4.tcp_max_syn_backlog = 262144\nnet.ipv4.tcp_timestamps = 0\nnet.ipv4.tcp_synack_retries = 1\nnet.ipv4.tcp_syn_retries = 1\nnet.ipv4.tcp_tw_recycle = 1\nnet.ipv4.tcp_tw_reuse = 1\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\nnet.ipv4.tcp_fin_timeout = 1\nnet.ipv4.tcp_keepalive_time = 30\nnet.ipv4.ip_local_port_range = 1024 65000\n\n然后 sysctl -p\n\n修改文件打开数：\n\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\nulimit -SHn 51201\n\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\nvi /etc/security/limits.conf\n# add\n* soft nofile 51201\n* hard nofile 51201\n\n3、把交换分区也关闭掉，修改/etc/rc.local\n\n加入：swapoff -a\n\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-fpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-autosave', '', '', '2015-10-21 15:28:40', '2015-10-21 07:28:40', '', 12, 'http://afeier.sinaapp.com/?p=14', 0, 'revision', '', 0),
(15, 1, '2014-02-28 14:41:09', '2014-02-28 06:41:09', '安装部分：\r\n=========================================================================================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n\r\n\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n\r\n至此，服务器安装基本搞定\r\n================================================================================================================================================\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n&nbsp;\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-2', '', '', '2014-02-28 14:41:09', '2014-02-28 06:41:09', '', 12, 'http://afeier.sinaapp.com/?p=15', 0, 'revision', '', 0),
(16, 1, '2014-03-02 23:08:51', '2014-03-02 15:08:51', '1、查询当前本周第一天的unixtime\r\n\r\nunix_timestamp(adddate(curdate(),-weekday(curdate())))\r\n\r\n&nbsp;\r\n\r\n2、查询本月第一天的unixtime\r\n\r\nunix_timestamp(date(concat(year(curdate()),''-'',month(curdate()),''-'',''1'')))\r\n\r\n&nbsp;\r\n\r\n3、查询本年第一天的unixtime\r\n\r\nunix_timestamp(date(concat(year(curdate()),''-1-1'')))', 'mysql常用命令', '', 'publish', 'open', 'open', '', 'mysql%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4', '', '', '2014-03-03 14:32:22', '2014-03-03 06:32:22', '', 0, 'http://afeier.sinaapp.com/?p=16', 0, 'post', '', 0),
(17, 1, '2014-03-02 23:05:58', '2014-03-02 15:05:58', '1、查询当前月的unixtime\n\nunix_timestamp(adddate(curdate(),-weekday(curdate())))\n\n&nbsp;\n\n2、查询本月第一天的unixtime\n\nunix_timestamp(date(concat(year(curdate()),''-'',month(curdate()),''-'',''1'')))', 'mysql常用命令', '', 'inherit', 'open', 'open', '', '16-revision', '', '', '2014-03-02 23:05:58', '2014-03-02 15:05:58', '', 16, 'http://afeier.sinaapp.com/?p=17', 0, 'revision', '', 0),
(18, 1, '2014-03-03 14:33:26', '2014-03-03 06:33:26', '1、查询当前本周第一天的unixtime\n\nunix_timestamp(adddate(curdate(),-weekday(curdate())))\n\n&nbsp;\n\n2、查询本月第一天的unixtime\n\nunix_timestamp(date(concat(year(curdate()),''-'',month(curdate()),''-'',''1'')))\n\n&nbsp;\n\n3、查询本年第一天的unixtime\n\nunix_timestamp(date(concat(year(curdate()),''-1-1'')))', 'mysql常用命令', '', 'inherit', 'open', 'open', '', '16-autosave', '', '', '2014-03-03 14:33:26', '2014-03-03 06:33:26', '', 16, 'http://afeier.sinaapp.com/?p=18', 0, 'revision', '', 0),
(19, 1, '2014-03-02 23:08:51', '2014-03-02 15:08:51', '1、查询当前月的unixtime\r\n\r\nunix_timestamp(adddate(curdate(),-weekday(curdate())))\r\n\r\n&nbsp;\r\n\r\n2、查询本月第一天的unixtime\r\n\r\nunix_timestamp(date(concat(year(curdate()),''-'',month(curdate()),''-'',''1'')))\r\n\r\n&nbsp;\r\n\r\n3、查询本年第一天的unixtime\r\n\r\nunix_timestamp(date(concat(year(curdate()),''-1-1'')))', 'mysql常用命令', '', 'inherit', 'open', 'open', '', '16-revision-2', '', '', '2014-03-02 23:08:51', '2014-03-02 15:08:51', '', 16, 'http://afeier.sinaapp.com/?p=19', 0, 'revision', '', 0),
(20, 1, '2014-03-03 17:50:57', '2014-03-03 09:50:57', 'public function mthreats(){\r\n\r\n//echo "Program starts at ". date(''h:i:s'') . "&lt;br&gt;";\r\n\r\n//$stime=microtime(true);\r\n$timeout = 3;\r\n$sockets = array(); //socket句柄数组\r\n//一次发起多个请求\r\n$delay = 0;\r\n\r\n\r\n$http = ''tcp://114.80.227.184:80/smssend.asp'';\r\n$row = parse_url($http);\r\n$host = $row[''host''];\r\n\r\n$port = $row[''port''] ? $row[''port'']:80;\r\n$file = $row[''path''];\r\n$post='''';\r\n/* echo "&lt;br&gt;";\r\necho $host;\r\necho "&lt;br&gt;";\r\necho $file;\r\n\r\nexit(); */\r\n\r\n\r\n\r\nwhile ($delay++ &lt; 10)\r\n{\r\n\r\n$data = array\r\n(\r\n''UserID''=&gt;"sdfd", //用户账号\r\n''UserKey''=&gt;"dfasdff", //MD5位32密码\r\n''PhoneNumber''=&gt;''185'', //号码\r\n''SmsContent''=&gt;"test m-threads",\r\n//''utime''=&gt;microtime(TRUE)-$stime,\r\n//''time''=&gt;microtime(TRUE) //内容\r\n//''time''=&gt;''2010-05-27 12:11'', //定时发送\r\n//''mid''=&gt;$mid //子扩展号\r\n);\r\nwhile (list($k,$v) = each($data))\r\n{\r\n$post .= rawurlencode($k)."=".rawurlencode($v)."&amp;"; //转URL标准码\r\n}\r\n$post = substr( $post , 0 , -1 );\r\n$len = strlen($post);\r\n\r\n\r\n\r\n$sh = stream_socket_client("$http", $errno, $errstr, $timeout,\r\nSTREAM_CLIENT_ASYNC_CONNECT|STREAM_CLIENT_CONNECT);\r\n//usleep(1000);\r\nsleep(1);\r\nif ($sh) {\r\n$sockets[] = $sh;\r\n$out = "POST $file HTTP/1.1\\r\\n";\r\n$out .= "Host: $host\\r\\n";\r\n$out .= "Content-type: application/x-www-form-urlencoded\\r\\n";\r\n$out .= "Connection: Close\\r\\n";\r\n$out .= "Content-Length: $len\\r\\n\\r\\n";\r\n$out .= $post;\r\n\r\nfwrite($sh, $out);\r\n} else {\r\necho "Stream failed to open correctly./n";\r\n}\r\n}\r\n//非阻塞模式来接收响应\r\n$result = array();\r\n$read_block_size = 8192;\r\nwhile (count($sockets))\r\n{\r\n$read = $sockets;\r\n$n = stream_select($read, $w=null, $e=null, $timeout);\r\nvar_dump($n);\r\n//if ($n &gt; 0) //据说stream_select返回值不总是可信任的\r\nif (count($read))\r\n{\r\n/* stream_select generally shuffles $read, so we need to\r\ncompute from which socket(s) we''re reading. */\r\nforeach ($read as $r)\r\n{\r\n$id = array_search($r, $sockets);\r\n$data = fread($r, $read_block_size);\r\nif (strlen($data) == 0)\r\n{\r\necho "Stream {$id} closes at " . microtime(TRUE) . "&lt;br&gt;";\r\nfclose($r);\r\nunset($sockets[$id]);\r\n} else {\r\nif (!isset($result[$id])) $result[$id] = '''';\r\n$result[$id] .= $data;\r\n}\r\n}\r\n} else {\r\necho "Time-out!/n";\r\nbreak;\r\n}\r\n}\r\n}\r\n}', 'php多线程读取远程数据', '', 'publish', 'open', 'open', '', 'php%e5%a4%9a%e7%ba%bf%e7%a8%8b%e8%af%bb%e5%8f%96%e8%bf%9c%e7%a8%8b%e6%95%b0%e6%8d%ae', '', '', '2014-03-03 17:50:57', '2014-03-03 09:50:57', '', 0, 'http://afeier.sinaapp.com/?p=20', 0, 'post', '', 0),
(21, 1, '2014-03-03 17:50:40', '2014-03-03 09:50:40', 'public function mthreats(){\n\n//echo "Program starts at ". date(''h:i:s'') . "&lt;br&gt;";\n\n//$stime=microtime(true);\n$timeout = 3;\n$sockets = array(); //socket句柄数组\n//一次发起多个请求\n$delay = 0;\n\n\n$http = ''tcp://114.80.227.184:80/smssend.asp'';\n$row = parse_url($http);\n$host = $row[''host''];\n\n$port = $row[''port''] ? $row[''port'']:80;\n$file = $row[''path''];\n$post='''';\n/* echo "&lt;br&gt;";\necho $host;\necho "&lt;br&gt;";\necho $file;\n\nexit(); */\n\n\n\nwhile ($delay++ &lt; 10)\n{\n\n$data = array\n(\n''UserID''=&gt;"sdfd", //用户账号\n''UserKey''=&gt;"dfasdff", //MD5位32密码\n''PhoneNumber''=&gt;''185'', //号码\n''SmsContent''=&gt;"test m-threads",\n//''utime''=&gt;microtime(TRUE)-$stime,\n//''time''=&gt;microtime(TRUE) //内容\n//''time''=&gt;''2010-05-27 12:11'', //定时发送\n//''mid''=&gt;$mid //子扩展号\n);\nwhile (list($k,$v) = each($data))\n{\n$post .= rawurlencode($k)."=".rawurlencode($v)."&amp;"; //转URL标准码\n}\n$post = substr( $post , 0 , -1 );\n$len = strlen($post);\n\n\n\n$sh = stream_socket_client("$http", $errno, $errstr, $timeout,\nSTREAM_CLIENT_ASYNC_CONNECT|STREAM_CLIENT_CONNECT);\n//usleep(1000);\nsleep(1);\nif ($sh) {\n$sockets[] = $sh;\n$out = "POST $file HTTP/1.1\\r\\n";\n$out .= "Host: $host\\r\\n";\n$out .= "Content-type: application/x-www-form-urlencoded\\r\\n";\n$out .= "Connection: Close\\r\\n";\n$out .= "Content-Length: $len\\r\\n\\r\\n";\n$out .= $post;\n\nfwrite($sh, $out);\n} else {\necho "Stream failed to open correctly./n";\n}\n}\n//非阻塞模式来接收响应\n$result = array();\n$read_block_size = 8192;\nwhile (count($sockets))\n{\n$read = $sockets;\n$n = stream_select($read, $w=null, $e=null, $timeout);\nvar_dump($n);\n//if ($n &gt; 0) //据说stream_select返回值不总是可信任的\nif (count($read))\n{\n/* stream_select generally shuffles $read, so we need to\ncompute from which socket(s) we''re reading. */\nforeach ($read as $r)\n{\n$id = array_search($r, $sockets);\n$data = fread($r, $read_block_size);\nif (strlen($data) == 0)\n{\necho "Stream {$id} closes at " . microtime(TRUE) . "&lt;br&gt;";\nfclose($r);\nunset($sockets[$id]);\n} else {\nif (!isset($result[$id])) $result[$id] = '''';\n$result[$id] .= $data;\n}\n}\n} else {\necho "Time-out!/n";\nbreak;\n}\n}\n}\n}', 'php多线程读取远程数据', '', 'inherit', 'open', 'open', '', '20-revision', '', '', '2014-03-03 17:50:40', '2014-03-03 09:50:40', '', 20, 'http://afeier.sinaapp.com/?p=21', 0, 'revision', '', 0),
(23, 1, '2014-03-09 09:47:02', '2014-03-09 01:47:02', '<div>1、在终端中直接输入  sudo apt-get install subversion，选择安装即可</div>\r\n<div>2、查看版本命令 svnserve --version（更多命令直接键入svnserve --help可查看到）</div>\r\n<div>3、查看svnserver是否已启动： netstat -ntlp，可看到svn对应的端口3690（如果没有看见，则证明服务未启动，可使用svnserve -d启动svn服务，还可以通过svnserve -d -r /home/wwwwfw/mobile来指定启动目录）</div>\r\n<div>4、建立项目：svnadmin create mobile(mobile为项目名称，位置在当前登录用户的主目录下，如我使用wwwwfw登录，则路径为/home/wwwwfw/mobile）</div>\r\n<div>5、在mobile文件夹中可以看到conf文件夹，可针对conf文件夹中的authz、passwd、svnserve.conf进行设 置，svnserve.conf主要设置整体的安全策略，passwd则设置用户名和密码，authz则是设置具体的用户有什么权限。</div>\r\n<div>7、常用svn命令：</div>\r\n<div>     <strong>checkout</strong>(co)命令：</div>\r\n<strong>      svn co</strong> url --username user --password password\r\n\r\n根据提示可以输入yes来保存帐号和密码；\r\n\r\n<strong>       update</strong>(up)命令：\r\n\r\n进入到需要更新的目录，输入：<strong>svn up</strong>；\r\n\r\n<strong>      commit</strong>(ci)命令：\r\n\r\n进入需要提交的目录，输入：<strong>svn ci</strong> -m "修改信息"\r\n\r\n<strong>    add</strong>命令：\r\n\r\n进入需要提交的目录，输入：<strong>svn add</strong> filename or path\r\n\r\n添加完之后需要用commit命令提交。\r\n\r\n&nbsp;\r\n\r\n另外，在vi中也可以不退出编辑的文件来提交文件，\r\n\r\n使用shell命令：<strong>:!</strong> svn ci -m "commit information.."\r\n\r\n&nbsp;\r\n\r\n更多详细安装步骤见：<a href="http://www.svn8.com/svnpz/20100320/26880.html" rel="nofollow" target="_blank">ubuntu下svn服务器安装</a>\r\n\r\n&nbsp;\r\n\r\nubuntu下SVN服务器安装配置 一、SVN安装\r\n1.安装包\r\n$ sudo apt-get install subversion\r\n\r\n2.添加svn管理用户及subversion组\r\n$ sudo adduser svnuser\r\n$ sudo addgroup subversion\r\n$ sudo addgroup svnuser subversion\r\n\r\n&nbsp;\r\n\r\n3.创建项目目录\r\n$ sudo mkdir /home/svn\r\n$ cd /home/svn\r\n$ sudo mkdir fitness\r\n$ sudo chown -R root:subversion fitness\r\n$ sudo chmod -R g+rws fitness\r\n\r\n4.创建SVN文件仓库\r\n$ sudo svnadmin create /home/svn/fitness\r\n\r\n5.访问方式及项目导入：\r\n$ svn co file:///home/svn/fitness\r\n或者\r\n$ svn co file://localhost/home/svn/fitness\r\n* 注意：\r\n如果您并不确定主机的名称，您必须使用三个斜杠(///)，而如果您指定了主机的名称，则您必须使用两个斜杠(//).\r\n//--\r\n下面的命令用于将项目导入到SVN 文件仓库：\r\n$ svn import -m "New import" /home/svn/fitness file:///home/svnuser/src/fitness\r\n一定要注明导入信息\r\n\r\n&nbsp;\r\n\r\n//--------------------------//\r\n6.访问权限设置\r\n修改 /home/svn/fitness目录下：\r\nsvnserve.conf 、passwd 、authz三个文件,行最前端不允许有空格\r\n//--\r\n编辑svnserve.conf文件,把如下两行取消注释\r\npassword-db = password\r\nauthz-db = authz\r\n\r\n//补充说明\r\n# [general]\r\nanon-access=none\r\nauth-access = write\r\npassword-db = passwd\r\n其中 anon-access 和 auth-access 分别为匿名和有权限用户的权限，默认给匿名用户只读的权限,但如果想拒绝匿\r\n\r\n&nbsp;\r\n\r\n名用户的访问，只需把 read 改成 none 就能达到目的。\r\n\r\n//--\r\n编辑/home/svnuser/etc/passwd 如下:\r\n[users]\r\nmirze = 123456\r\ntest1 = 123456\r\ntest2 = 123456\r\n//--\r\n编辑/home/svnuser/etc/authz如下\r\n[groups]\r\nadmin = mirze,test1\r\ntest = test2\r\n[/]\r\n@admin=rw\r\n*=r\r\n这里设置了三个用户mirze,test1,test2密码都是123456\r\n其中mirze和test1属于admin组，有读和写的权限,test2属于test组只有读的权限\r\n\r\n7.启动SVN服务\r\nsvnserve -d -r /home/svn\r\n描述说明：\r\n-d 表示svnserver以“守护”进程模式运行\r\n-r 指定文件系统的根位置（版本库的根目录），这样客户端不用输入全路径，就可以访问版本库\r\n如: svn://192.168.12.118/fitness\r\n\r\n这时SVN安装就完成了.\r\n局域网访问方式：\r\n例如：svn checkout svn://192.168.12.118/fitness --username mirze --password 123456 /var/www/fitness', 'ubuntu 安装svnserver', '', 'publish', 'open', 'open', '', 'ubuntu-%e5%ae%89%e8%a3%85svnserver', '', '', '2014-08-29 11:24:18', '2014-08-29 03:24:18', '', 0, 'http://afeier.sinaapp.com/?p=23', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(24, 1, '2014-03-09 09:46:50', '2014-03-09 01:46:50', '<div>1、在终端中直接输入  sudo apt-get install subversion，选择安装即可</div>\n<div>2、查看版本命令 svnserve --version（更多命令直接键入svnserve --help可查看到）</div>\n<div>3、查看svnserver是否已启动： netstat -ntlp，可看到svn对应的端口3690（如果没有看见，则证明服务未启动，可使用svnserve -d启动svn服务，还可以通过svnserve -d -r /home/wwwwfw/mobile来指定启动目录）</div>\n<div>4、建立项目：svnadmin create mobile(mobile为项目名称，位置在当前登录用户的主目录下，如我使用wwwwfw登录，则路径为/home/wwwwfw/mobile）</div>\n<div>5、在mobile文件夹中可以看到conf文件夹，可针对conf文件夹中的authz、passwd、svnserve.conf进行设 置，svnserve.conf主要设置整体的安全策略，passwd则设置用户名和密码，authz则是设置具体的用户有什么权限。</div>\n<div>7、常用svn命令：</div>\n<div>     <strong>checkout</strong>(co)命令：</div>\n<strong>      svn co</strong> url --username user --password password\n\n根据提示可以输入yes来保存帐号和密码；\n\n<strong>       update</strong>(up)命令：\n\n进入到需要更新的目录，输入：<strong>svn up</strong>；\n\n<strong>      commit</strong>(ci)命令：\n\n进入需要提交的目录，输入：<strong>svn ci</strong> -m "修改信息"\n\n<strong>    add</strong>命令：\n\n进入需要提交的目录，输入：<strong>svn add</strong> filename or path\n\n添加完之后需要用commit命令提交。\n\n&nbsp;\n\n另外，在vi中也可以不退出编辑的文件来提交文件，\n\n使用shell命令：<strong>:!</strong> svn ci -m "commit information.."\n\n&nbsp;\n\n更多详细安装步骤见：<a href="http://www.svn8.com/svnpz/20100320/26880.html" rel="nofollow" target="_blank">ubuntu下svn服务器安装</a>\n\n&nbsp;\n\nubuntu下SVN服务器安装配置 一、SVN安装\n1.安装包\n$ sudo apt-get install subversion\n\n2.添加svn管理用户及subversion组\n$ sudo adduser svnuser\n$ sudo addgroup subversion\n$ sudo addgroup svnuser subversion\n\n&nbsp;\n\n3.创建项目目录\n$ sudo mkdir /home/svn\n$ cd /home/svn\n$ sudo mkdir fitness\n$ sudo chown -R root:subversion fitness\n$ sudo chmod -R g+rws fitness\n\n4.创建SVN文件仓库\n$ sudo svnadmin create /home/svn/fitness\n\n5.访问方式及项目导入：\n$ svn co file:///home/svn/fitness\n或者\n$ svn co file://localhost/home/svn/fitness\n* 注意：\n如果您并不确定主机的名称，您必须使用三个斜杠(///)，而如果您指定了主机的名称，则您必须使用两个斜杠(//).\n//--\n下面的命令用于将项目导入到SVN 文件仓库：\n$ svn import -m "New import" /home/svn/fitness file:///home/svnuser/src/fitness\n一定要注明导入信息\n\n&nbsp;\n\n//--------------------------//\n6.访问权限设置\n修改 /home/svn/fitness目录下：\nsvnserve.conf 、passwd 、authz三个文件,行最前端不允许有空格\n//--\n编辑svnserve.conf文件,把如下两行取消注释\npassword-db = password\nauthz-db = authz\n\n//补充说明\n# [general]\nanon-access = read\nauth-access = write\npassword-db = passwd\n其中 anon-access 和 auth-access 分别为匿名和有权限用户的权限，默认给匿名用户只读的权限,但如果想拒绝匿\n\n&nbsp;\n\n名用户的访问，只需把 read 改成 none 就能达到目的。\n\n//--\n编辑/home/svnuser/etc/passwd 如下:\n[users]\nmirze = 123456\ntest1 = 123456\ntest2 = 123456\n//--\n编辑/home/svnuser/etc/authz如下\n[groups]\nadmin = mirze,test1\ntest = test2\n[/]\n@admin=rw\n*=r\n这里设置了三个用户mirze,test1,test2密码都是123456\n其中mirze和test1属于admin组，有读和写的权限,test2属于test组只有读的权限\n\n7.启动SVN服务\nsvnserve -d -r /home/svn\n描述说明：\n-d 表示svnserver以“守护”进程模式运行\n-r 指定文件系统的根位置（版本库的根目录），这样客户端不用输入全路径，就可以访问版本库\n如: svn://192.168.12.118/fitness\n\n这时SVN安装就完成了.\n局域网访问方式：\n例如：svn checkout svn://192.168.12.118/fitness --username mirze --password 123456 /var/www/fitness', 'ubuntu 安装svn', '', 'inherit', 'open', 'open', '', '23-revision', '', '', '2014-03-09 09:46:50', '2014-03-09 01:46:50', '', 23, 'http://afeier.sinaapp.com/?p=24', 0, 'revision', '', 0),
(25, 1, '2014-03-09 09:48:06', '2014-03-09 01:48:06', '<div>1、在终端中直接输入  sudo apt-get install subversion，选择安装即可</div>\n<div>2、查看版本命令 svnserve --version（更多命令直接键入svnserve --help可查看到）</div>\n<div>3、查看svnserver是否已启动： netstat -ntlp，可看到svn对应的端口3690（如果没有看见，则证明服务未启动，可使用svnserve -d启动svn服务，还可以通过svnserve -d -r /home/wwwwfw/mobile来指定启动目录）</div>\n<div>4、建立项目：svnadmin create mobile(mobile为项目名称，位置在当前登录用户的主目录下，如我使用wwwwfw登录，则路径为/home/wwwwfw/mobile）</div>\n<div>5、在mobile文件夹中可以看到conf文件夹，可针对conf文件夹中的authz、passwd、svnserve.conf进行设 置，svnserve.conf主要设置整体的安全策略，passwd则设置用户名和密码，authz则是设置具体的用户有什么权限。</div>\n<div>7、常用svn命令：</div>\n<div>     <strong>checkout</strong>(co)命令：</div>\n<strong>      svn co</strong> url --username user --password password\n\n根据提示可以输入yes来保存帐号和密码；\n\n<strong>       update</strong>(up)命令：\n\n进入到需要更新的目录，输入：<strong>svn up</strong>；\n\n<strong>      commit</strong>(ci)命令：\n\n进入需要提交的目录，输入：<strong>svn ci</strong> -m "修改信息"\n\n<strong>    add</strong>命令：\n\n进入需要提交的目录，输入：<strong>svn add</strong> filename or path\n\n添加完之后需要用commit命令提交。\n\n&nbsp;\n\n另外，在vi中也可以不退出编辑的文件来提交文件，\n\n使用shell命令：<strong>:!</strong> svn ci -m "commit information.."\n\n&nbsp;\n\n更多详细安装步骤见：<a href="http://www.svn8.com/svnpz/20100320/26880.html" rel="nofollow" target="_blank">ubuntu下svn服务器安装</a>\n\n&nbsp;\n\nubuntu下SVN服务器安装配置 一、SVN安装\n1.安装包\n$ sudo apt-get install subversion\n\n2.添加svn管理用户及subversion组\n$ sudo adduser svnuser\n$ sudo addgroup subversion\n$ sudo addgroup svnuser subversion\n\n&nbsp;\n\n3.创建项目目录\n$ sudo mkdir /home/svn\n$ cd /home/svn\n$ sudo mkdir fitness\n$ sudo chown -R root:subversion fitness\n$ sudo chmod -R g+rws fitness\n\n4.创建SVN文件仓库\n$ sudo svnadmin create /home/svn/fitness\n\n5.访问方式及项目导入：\n$ svn co file:///home/svn/fitness\n或者\n$ svn co file://localhost/home/svn/fitness\n* 注意：\n如果您并不确定主机的名称，您必须使用三个斜杠(///)，而如果您指定了主机的名称，则您必须使用两个斜杠(//).\n//--\n下面的命令用于将项目导入到SVN 文件仓库：\n$ svn import -m "New import" /home/svn/fitness file:///home/svnuser/src/fitness\n一定要注明导入信息\n\n&nbsp;\n\n//--------------------------//\n6.访问权限设置\n修改 /home/svn/fitness目录下：\nsvnserve.conf 、passwd 、authz三个文件,行最前端不允许有空格\n//--\n编辑svnserve.conf文件,把如下两行取消注释\npassword-db = password\nauthz-db = authz\n\n//补充说明\n# [general]\nanon-access = read\nauth-access = write\npassword-db = passwd\n其中 anon-access 和 auth-access 分别为匿名和有权限用户的权限，默认给匿名用户只读的权限,但如果想拒绝匿\n\n&nbsp;\n\n名用户的访问，只需把 read 改成 none 就能达到目的。\n\n//--\n编辑/home/svnuser/etc/passwd 如下:\n[users]\nmirze = 123456\ntest1 = 123456\ntest2 = 123456\n//--\n编辑/home/svnuser/etc/authz如下\n[groups]\nadmin = mirze,test1\ntest = test2\n[/]\n@admin=rw\n*=r\n这里设置了三个用户mirze,test1,test2密码都是123456\n其中mirze和test1属于admin组，有读和写的权限,test2属于test组只有读的权限\n\n7.启动SVN服务\nsvnserve -d -r /home/svn\n描述说明：\n-d 表示svnserver以“守护”进程模式运行\n-r 指定文件系统的根位置（版本库的根目录），这样客户端不用输入全路径，就可以访问版本库\n如: svn://192.168.12.118/fitness\n\n这时SVN安装就完成了.\n局域网访问方式：\n例如：svn checkout svn://192.168.12.118/fitness --username mirze --password 123456 /var/www/fitness', 'ubuntu 安装svnserver', '', 'inherit', 'open', 'open', '', '23-autosave', '', '', '2014-03-09 09:48:06', '2014-03-09 01:48:06', '', 23, 'http://afeier.sinaapp.com/?p=25', 0, 'revision', '', 0),
(26, 1, '2014-03-09 10:27:21', '2014-03-09 02:27:21', 'pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。\r\n-print： find命令将匹配的文件输出到标准输出。\r\n-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为''command'' { } \\;，注意{ }和\\；之间的空格。\r\n-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。\r\n<div>#-print 将查找到的文件输出到标准输出\r\n#-exec   command   {} \\;      —–将查到的文件执行command操作,{} 和 \\;之间有空格\r\n#-ok 和-exec相同，只不过在操作前要询用户</div>\r\n<div>例：find . -name .svn | xargs rm -rf</div>\r\n<div>\r\n\r\n====================================================\r\n\r\n-name   filename             #查找名为filename的文件\r\n-perm                        #按执行权限来查找\r\n-user    username             #按文件属主来查找\r\n-group groupname            #按组来查找\r\n-mtime   -n +n                #按文件更改时间来查找文件，-n指n天以内，+n指n天以前\r\n-atime    -n +n               #按文件访问时间来查GIN: 0px"&gt;\r\n\r\n-ctime    -n +n              #按文件创建时间来查找文件，-n指n天以内，+n指n天以前\r\n\r\n</div>\r\n<div>-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在\r\n-nouser                     #查无有效属主的文件，即文件的属主在/etc/passwd中不存\r\n-newer   f1 !f2              找文件，-n指n天以内，+n指n天以前\r\n-ctime    -n +n               #按文件创建时间来查找文件，-n指n天以内，+n指n天以前\r\n-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在\r\n-nouser                      #查无有效属主的文件，即文件的属主在/etc/passwd中不存\r\n-newer   f1 !f2               #查更改时间比f1新但比f2旧的文件\r\n-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件\r\n-size      n[c]               #查长度为n块[或n字节]的文件\r\n-depth                       #使查找在进入子目录前先行查找完本目录\r\n-fstype                     #查更改时间比f1新但比f2旧的文件\r\n-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件\r\n-size      n[c]               #查长度为n块[或n字节]的文件\r\n-depth                       #使查找在进入子目录前先行查找完本目录\r\n-fstype                      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到\r\n-mount                       #查文件时不跨越文件系统mount点\r\n-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件\r\n-cpio                %;      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到\r\n-mount                       #查文件时不跨越文件系统mount点\r\n-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件\r\n-cpio                        #对匹配的文件使用cpio命令，将他们备份到磁带设备中\r\n-prune                       #忽略某个目录\r\n=====================================================\r\n$find   ~   -name   "*.txt"   -print    #在$HOME中查.txt文件并显示\r\n$find   .    -name   "*.txt"   -print\r\n$find   .    -name   "[A-Z]*"   -print   #查以大写字母开头的文件\r\n$find   /etc   -name   "host*"   -print #查以host开头的文件\r\n$find   .   -name   "[a-z][a-z][0–9][0–9].txt"    -print   #查以两个小写字母和两个数字开头的txt文件\r\n$find .   -perm   755   -print\r\n$find   .   -perm -007   -exec ls -l {} \\;   #查所有用户都可读写执行的文件同-perm 777\r\n$find   . -type d   -print\r\n$find   .   !   -type   d   -print\r\n$find   .   -type l   -print\r\n\r\n$find   .   -size   +1000000c   -print        #查长度大于1Mb的文件\r\n$find   .   -size   100c         -print       # 查长度为100c的文件\r\n$find   .   -size   +10   -print              #查长度超过期作废10块的文件（1块=512字节）\r\n\r\n$cd /\r\n$find   etc   home   apps    -depth   -print   | cpio   -ivcdC65536   -o   /dev/rmt0\r\n$find   /etc -name "passwd*"   -exec grep   "cnscn"   {}   \\;   #看是否存在cnscn用户\r\n$find . -name "yao*"   | xargs file\r\n$find   . -name "yao*"   |   xargs   echo    "" &gt; /tmp/core.log\r\n$find   . -name "yao*"   | xargs   chmod   o-w\r\n\r\n======================================================\r\n\r\n<strong>find   -name april*                     在当前目录下查找以april开始的文件</strong>\r\n<strong>find   -name   april*   fprint file        在当前目录下查找以april开始的文件，并把结果输出到file中</strong>\r\n<strong>find   -name ap* -o -name may*   查找以ap或may开头的文件</strong>\r\n<strong>find   /mnt   -name tom.txt   -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件</strong>\r\n<strong>find   /mnt   -name t.txt ! -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件</strong>\r\n<strong>find   /tmp   -name wa* -type l            在/tmp下查找名为wa开头且类型为符号链接的文件</strong>\r\n<strong>find   /home   -mtime   -2                 在/home下查最近两天内改动过的文件</strong>\r\n<strong>find /home    -atime -1                  查1天之内被存取过的文件</strong>\r\n<strong>find /home -mmin    +60                  在/home下查60分钟前改动过的文件</strong>\r\n<strong>find /home   -amin   +30                  查最近30分钟前被存取过的文件</strong>\r\n<strong>find /home   -newer   tmp.txt             在/home下查更新时间比tmp.txt近的文件或目录</strong>\r\n<strong>find /home   -anewer   tmp.txt            在/home下查存取时间比tmp.txt近的文件或目录</strong>\r\n<strong>find   /home   -used   -2                  列出文件或目录被改动过之后，在2日内被存取过的文件或目录</strong>\r\n<strong>find   /home   -user cnscn                列出/home目录内属于用户cnscn的文件或目录</strong>\r\n<strong>find   /home   -uid   +501                  列出/home目录内用户的识别码大于501的文件或目录</strong>\r\n<strong>find   /home   -group   cnscn              列出/home内组为cnscn的文件或目录</strong>\r\n<strong>find   /home   -gid 501                   列出/home内组id为501的文件或目录</strong>\r\n<strong>find   /home   -nouser                    列出/home内不属于本地用户的文件或目录</strong>\r\n<strong>find   /home   -nogroup                   列出/home内不属于本地组的文件或目录</strong>\r\n<strong>find   /home    -name tmp.txt    -maxdepth   4   列出/home内的tmp.txt 查时深度最多为3层</strong>\r\n<strong>find   /home   -name tmp.txt   -mindepth   3   从第2层开始查</strong>\r\n<strong>find   /home   -empty                     查找大小为0的文件或空目录</strong>\r\n<strong>find   /home   -size   +512k                查大于512k的文件</strong>\r\n<strong>find   /home   -size   -512k               查小于512k的文件</strong>\r\n<strong>find   /home   -links   +2                查硬连接数大于2的文件或目录</strong>\r\n<strong>find   /home   -perm   0700                查权限为700的文件或目录</strong>\r\n<strong>find   /tmp   -name tmp.txt   -exec cat {} \\;</strong>\r\n<strong>find   /tmp   -name   tmp.txt   -ok   rm {} \\;</strong>\r\n\r\n<strong>find    /   -amin    -10     # 查找在系统中最后10分钟访问的文件\r\nfind    /   -atime   -2        # 查找在系统中最后48小时访问的文件\r\nfind    /   -empty             # 查找在系统中为空的文件或者文件夹\r\nfind    /   -group   cat        # 查找在系统中属于 groupcat的文件\r\nfind    /   -mmin   -5         # 查找在系统中最后5分钟里修改过的文件\r\nfind    /   -mtime   -1       #查找在系统中最后24小时里修改过的文件\r\nfind    /   -nouser           #查找在系统中属于作废用户的文件\r\nfind    /   -user    fred     #查找在系统中属于FRED这个用户的文件</strong>\r\n\r\n</div>\r\n<div><strong><strong>查当前目录下的所有普通文件</strong></strong>\r\n\r\n<hr size="1" />\r\n\r\n<div><strong><strong><strong># find . -type f -exec ls -l {} \\;\r\n-rw-r–r–    1 root      root         34928 2003-02-25   ./conf/httpd.conf\r\n-rw-r–r–    1 root      root         12959 2003-02-25   ./conf/magic\r\n-rw-r–r–    1 root      root          180 2003-02-25   ./conf.d/README\r\n查当前目录下的所有普通文件，并在- e x e c选项中使用ls -l命令将它们列出</strong></strong></strong>=================================================\r\n在/ l o g s目录中查找更改时间在5日以前的文件并删除它们：\r\n$ find logs -type f -mtime +5 -exec   -ok   rm {} \\;\r\n\r\n=================================================\r\n查询当天修改过的文件\r\n[root@book class]# find   ./   -mtime   -1   -type f   -exec   ls -l   {} \\;\r\n\r\n=================================================\r\n查询文件并询问是否要显示\r\n[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \\;\r\n&lt; ls … ./classDB.inc.php &gt; ? y\r\n-rw-r–r–    1 cnscn    cnscn       13709   1月 12 12:22 ./classDB.inc.php\r\n[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \\;\r\n&lt; ls … ./classDB.inc.php &gt; ? n\r\n[root@book class]#\r\n\r\n=================================================\r\n查询并交给awk去处理\r\n[root@book class]# who   |   awk   ’{print $1"\\t"$2}’\r\ncnscn    pts/0\r\n\r\n=================================================\r\nawk—grep—sed\r\n\r\n[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’ |   sed   s"/\\/dev\\///g"\r\n文件系统\r\nsda2\r\nsda1\r\n[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’\r\n文件系统\r\n/dev/sda2\r\n/dev/sda1\r\n\r\n</div>\r\n<div>\r\n<div><strong><strong><strong>1)</strong>在/tmp中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR"，最后打印出所有包含"SYSCALL_VECTOR"的文件名</strong></strong>A) find   /tmp   -name   "*.h"   | xargs   -n50   grep SYSCALL_VECTOR\r\nB) grep   SYSCALL_VECTOR   /tmp/*.h | cut    -d’:''   -f1| uniq &gt; filename\r\nC) find   /tmp   -name "*.h"   -exec grep "SYSCALL_VECTOR"   {}   \\; -print\r\n\r\n2)find / -name filename -exec rm -rf {} \\;\r\nfind / -name filename -ok rm -rf {} \\;\r\n\r\n<strong>3)比如要查找磁盘中大于3M的文件：\r\n</strong>find . -size +3000k -exec ls -ld {} ;\r\n\r\n4)将find出来的东西拷到另一个地方\r\nfind *.c -exec cp ‘{}’ /tmp ‘;’\r\n\r\n如果有特殊文件，可以用cpio，也可以用这样的语法：\r\nfind dir -name filename -print | cpio -pdv newdir\r\n\r\n6)查找<strong>2004-11-30 16:36:37时更改过的文件</strong>\r\n<strong># A=`find ./ -name "*php"` |   ls -l –full-time $A 2&gt;/dev/null | grep "2004-11-30 16:36:37"</strong>\r\n\r\n</div>\r\n</div>\r\n</div>', 'unix find命令详解', '', 'publish', 'open', 'open', '', 'unix-find%e5%91%bd%e4%bb%a4%e8%af%a6%e8%a7%a3', '', '', '2014-03-09 10:27:21', '2014-03-09 02:27:21', '', 0, 'http://afeier.sinaapp.com/?p=26', 0, 'post', '', 0),
(27, 1, '2014-03-09 10:26:58', '2014-03-09 02:26:58', '', '自动草稿', '', 'inherit', 'open', 'open', '', '26-revision', '', '', '2014-03-09 10:26:58', '2014-03-09 02:26:58', '', 26, 'http://afeier.sinaapp.com/?p=27', 0, 'revision', '', 0),
(28, 1, '2014-03-09 10:28:24', '2014-03-09 02:28:24', 'pathname: find命令所查找的目录路径。例如用.来表示当前目录，用/来表示系统根目录。\n-print： find命令将匹配的文件输出到标准输出。\n-exec： find命令对匹配的文件执行该参数所给出的shell命令。相应命令的形式为''command'' { } \\;，注意{ }和\\；之间的空格。\n-ok： 和-exec的作用相同，只不过以一种更为安全的模式来执行该参数所给出的shell命令，在执行每一个命令之前，都会给出提示，让用户来确定是否执行。\n<div>#-print 将查找到的文件输出到标准输出\n#-exec   command   {} \\;      —–将查到的文件执行command操作,{} 和 \\;之间有空格\n#-ok 和-exec相同，只不过在操作前要询用户</div>\n<div>例：find . -name .svn | xargs rm -rf</div>\n<div>\n\n====================================================\n\n-name   filename             #查找名为filename的文件\n-perm                        #按执行权限来查找\n-user    username             #按文件属主来查找\n-group groupname            #按组来查找\n-mtime   -n +n                #按文件更改时间来查找文件，-n指n天以内，+n指n天以前\n-atime    -n +n               #按文件访问时间来查GIN: 0px"&gt;\n\n-ctime    -n +n              #按文件创建时间来查找文件，-n指n天以内，+n指n天以前\n\n</div>\n<div>-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在\n-nouser                     #查无有效属主的文件，即文件的属主在/etc/passwd中不存\n-newer   f1 !f2              找文件，-n指n天以内，+n指n天以前\n-ctime    -n +n               #按文件创建时间来查找文件，-n指n天以内，+n指n天以前\n-nogroup                     #查无有效属组的文件，即文件的属组在/etc/groups中不存在\n-nouser                      #查无有效属主的文件，即文件的属主在/etc/passwd中不存\n-newer   f1 !f2               #查更改时间比f1新但比f2旧的文件\n-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件\n-size      n[c]               #查长度为n块[或n字节]的文件\n-depth                       #使查找在进入子目录前先行查找完本目录\n-fstype                     #查更改时间比f1新但比f2旧的文件\n-type    b/d/c/p/l/f         #查是块设备、目录、字符设备、管道、符号链接、普通文件\n-size      n[c]               #查长度为n块[或n字节]的文件\n-depth                       #使查找在进入子目录前先行查找完本目录\n-fstype                      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到\n-mount                       #查文件时不跨越文件系统mount点\n-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件\n-cpio                %;      #查位于某一类型文件系统中的文件，这些文件系统类型通常可 在/etc/fstab中找到\n-mount                       #查文件时不跨越文件系统mount点\n-follow                      #如果遇到符号链接文件，就跟踪链接所指的文件\n-cpio                        #对匹配的文件使用cpio命令，将他们备份到磁带设备中\n-prune                       #忽略某个目录\n=====================================================\n$find   ~   -name   "*.txt"   -print    #在$HOME中查.txt文件并显示\n$find   .    -name   "*.txt"   -print\n$find   .    -name   "[A-Z]*"   -print   #查以大写字母开头的文件\n$find   /etc   -name   "host*"   -print #查以host开头的文件\n$find   .   -name   "[a-z][a-z][0–9][0–9].txt"    -print   #查以两个小写字母和两个数字开头的txt文件\n$find .   -perm   755   -print\n$find   .   -perm -007   -exec ls -l {} \\;   #查所有用户都可读写执行的文件同-perm 777\n$find   . -type d   -print\n$find   .   !   -type   d   -print\n$find   .   -type l   -print$find   .   -size   +1000000c   -print        #查长度大于1Mb的文件\n$find   .   -size   100c         -print       # 查长度为100c的文件\n$find   .   -size   +10   -print              #查长度超过期作废10块的文件（1块=512字节）\n\n$cd /\n$find   etc   home   apps    -depth   -print   | cpio   -ivcdC65536   -o   /dev/rmt0\n$find   /etc -name "passwd*"   -exec grep   "cnscn"   {}   \\;   #看是否存在cnscn用户\n$find . -name "yao*"   | xargs file\n$find   . -name "yao*"   |   xargs   echo    "" &gt; /tmp/core.log\n$find   . -name "yao*"   | xargs   chmod   o-w\n\n======================================================\n\n<strong>find   -name april*                     在当前目录下查找以april开始的文件</strong>\n<strong>find   -name   april*   fprint file        在当前目录下查找以april开始的文件，并把结果输出到file中</strong>\n<strong>find   -name ap* -o -name may*   查找以ap或may开头的文件</strong>\n<strong>find   /mnt   -name tom.txt   -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型为vfat的文件</strong>\n<strong>find   /mnt   -name t.txt ! -ftype vfat   在/mnt下查找名称为tom.txt且文件系统类型不为vfat的文件</strong>\n<strong>find   /tmp   -name wa* -type l            在/tmp下查找名为wa开头且类型为符号链接的文件</strong>\n<strong>find   /home   -mtime   -2                 在/home下查最近两天内改动过的文件</strong>\n<strong>find /home    -atime -1                  查1天之内被存取过的文件</strong>\n<strong>find /home -mmin    +60                  在/home下查60分钟前改动过的文件</strong>\n<strong>find /home   -amin   +30                  查最近30分钟前被存取过的文件</strong>\n<strong>find /home   -newer   tmp.txt             在/home下查更新时间比tmp.txt近的文件或目录</strong>\n<strong>find /home   -anewer   tmp.txt            在/home下查存取时间比tmp.txt近的文件或目录</strong>\n<strong>find   /home   -used   -2                  列出文件或目录被改动过之后，在2日内被存取过的文件或目录</strong>\n<strong>find   /home   -user cnscn                列出/home目录内属于用户cnscn的文件或目录</strong>\n<strong>find   /home   -uid   +501                  列出/home目录内用户的识别码大于501的文件或目录</strong>\n<strong>find   /home   -group   cnscn              列出/home内组为cnscn的文件或目录</strong>\n<strong>find   /home   -gid 501                   列出/home内组id为501的文件或目录</strong>\n<strong>find   /home   -nouser                    列出/home内不属于本地用户的文件或目录</strong>\n<strong>find   /home   -nogroup                   列出/home内不属于本地组的文件或目录</strong>\n<strong>find   /home    -name tmp.txt    -maxdepth   4   列出/home内的tmp.txt 查时深度最多为3层</strong>\n<strong>find   /home   -name tmp.txt   -mindepth   3   从第2层开始查</strong>\n<strong>find   /home   -empty                     查找大小为0的文件或空目录</strong>\n<strong>find   /home   -size   +512k                查大于512k的文件</strong>\n<strong>find   /home   -size   -512k               查小于512k的文件</strong>\n<strong>find   /home   -links   +2                查硬连接数大于2的文件或目录</strong>\n<strong>find   /home   -perm   0700                查权限为700的文件或目录</strong>\n<strong>find   /tmp   -name tmp.txt   -exec cat {} \\;</strong>\n<strong>find   /tmp   -name   tmp.txt   -ok   rm {} \\;</strong>\n\n<strong>find    /   -amin    -10     # 查找在系统中最后10分钟访问的文件\nfind    /   -atime   -2        # 查找在系统中最后48小时访问的文件\nfind    /   -empty             # 查找在系统中为空的文件或者文件夹\nfind    /   -group   cat        # 查找在系统中属于 groupcat的文件\nfind    /   -mmin   -5         # 查找在系统中最后5分钟里修改过的文件\nfind    /   -mtime   -1       #查找在系统中最后24小时里修改过的文件\nfind    /   -nouser           #查找在系统中属于作废用户的文件\nfind    /   -user    fred     #查找在系统中属于FRED这个用户的文件</strong>\n\n</div>\n<div><strong><strong>查当前目录下的所有普通文件</strong></strong>\n\n<hr size="1" />\n\n<div><strong><strong><strong># find . -type f -exec ls -l {} \\;\n-rw-r–r–    1 root      root         34928 2003-02-25   ./conf/httpd.conf\n-rw-r–r–    1 root      root         12959 2003-02-25   ./conf/magic\n-rw-r–r–    1 root      root          180 2003-02-25   ./conf.d/README\n查当前目录下的所有普通文件，并在- e x e c选项中使用ls -l命令将它们列出</strong></strong></strong>=================================================\n在/ l o g s目录中查找更改时间在5日以前的文件并删除它们：\n$ find logs -type f -mtime +5 -exec   -ok   rm {} \\;=================================================\n查询当天修改过的文件\n[root@book class]# find   ./   -mtime   -1   -type f   -exec   ls -l   {} \\;\n\n=================================================\n查询文件并询问是否要显示\n[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \\;\n&lt; ls … ./classDB.inc.php &gt; ? y\n-rw-r–r–    1 cnscn    cnscn       13709   1月 12 12:22 ./classDB.inc.php\n[root@book class]# find   ./   -mtime   -1   -type f   -ok   ls -l   {} \\;\n&lt; ls … ./classDB.inc.php &gt; ? n\n[root@book class]#\n\n=================================================\n查询并交给awk去处理\n[root@book class]# who   |   awk   ’{print $1"\\t"$2}’\ncnscn    pts/0\n\n=================================================\nawk—grep—sed\n\n[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’ |   sed   s"/\\/dev\\///g"\n文件系统\nsda2\nsda1\n[root@book class]# df   -k |   awk ‘{print $1}’ |   grep   -v   ’none’\n文件系统\n/dev/sda2\n/dev/sda1\n\n</div>\n<div>\n<div><strong><strong><strong>1)</strong>在/tmp中查找所有的*.h，并在这些文件中查找“SYSCALL_VECTOR"，最后打印出所有包含"SYSCALL_VECTOR"的文件名</strong></strong>A) find   /tmp   -name   "*.h"   | xargs   -n50   grep SYSCALL_VECTOR\nB) grep   SYSCALL_VECTOR   /tmp/*.h | cut    -d’:''   -f1| uniq &gt; filename\nC) find   /tmp   -name "*.h"   -exec grep "SYSCALL_VECTOR"   {}   \\; -print2)find / -name filename -exec rm -rf {} \\;\nfind / -name filename -ok rm -rf {} \\;\n\n<strong>3)比如要查找磁盘中大于3M的文件：\n</strong>find . -size +3000k -exec ls -ld {} ;\n\n4)将find出来的东西拷到另一个地方\nfind *.c -exec cp ‘{}’ /tmp ‘;’\n\n如果有特殊文件，可以用cpio，也可以用这样的语法：\nfind dir -name filename -print | cpio -pdv newdir\n\n6)查找<strong>2004-11-30 16:36:37时更改过的文件</strong>\n<strong># A=`find ./ -name "*php"` |   ls -l –full-time $A 2&gt;/dev/null | grep "2004-11-30 16:36:37"</strong>\n\n</div>\n</div>\n</div>', 'unix find命令详解', '', 'inherit', 'open', 'open', '', '26-autosave', '', '', '2014-03-09 10:28:24', '2014-03-09 02:28:24', '', 26, 'http://afeier.sinaapp.com/?p=28', 0, 'revision', '', 0),
(29, 1, '2014-03-09 21:12:14', '2014-03-09 13:12:14', '一般是因为开启了跨站攻击防护引起的，构造POST数据时应加入防护码：\r\n\r\n{''&lt;?php echo $this-&gt;security-&gt;get_csrf_token_name();?&gt;'':''&lt;?php echo $this-&gt;security-&gt;get_csrf_hash(); ?&gt;''', 'ci 异步POST提交参数，500错误解决办法', '', 'publish', 'open', 'open', '', 'ci-%e5%bc%82%e6%ad%a5post%e6%8f%90%e4%ba%a4%e5%8f%82%e6%95%b0%ef%bc%8c500%e9%94%99%e8%af%af%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95', '', '', '2014-03-09 21:12:14', '2014-03-09 13:12:14', '', 0, 'http://afeier.sinaapp.com/?p=29', 0, 'post', '', 0),
(30, 1, '2014-03-09 21:11:22', '2014-03-09 13:11:22', '一般是因为开启了跨站攻击防护引起的\n\n{''&lt;?php echo $this-&gt;security-&gt;get_csrf_token_name();?&gt;'':''&lt;?php echo $this-&gt;security-&gt;get_csrf_hash(); ?&gt;''', 'ci 异步POST提交参数，500错误解决办法', '', 'inherit', 'open', 'open', '', '29-revision', '', '', '2014-03-09 21:11:22', '2014-03-09 13:11:22', '', 29, 'http://afeier.sinaapp.com/?p=30', 0, 'revision', '', 0),
(31, 1, '2014-03-10 15:38:15', '2014-03-10 07:38:15', '1.首先这不是一个常见问题，传统刷页面的方式不会遇到\r\n2.同一时间只有一个AJAX请求的时候也不会遇到\r\n3.同一时间有两个或两个以上AJAX请求必然遇到\r\n\r\n配置文件：\r\n$config[''sess_expiration'']  = 30;             //设置session的有效期是30秒\r\n$config[''sess_time_to_update'']   = 5;   //session更新间隔是5秒\r\n\r\n遇到的问题是：\r\n每隔2秒钟，同时发起2个AJAX请求控制器的两个不同ACTION，每当到5秒钟 更新SESSION的时候，SESSION就失效了。\r\n\r\n---------------------------------------------------------------\r\nfunction sess_update()\r\n{\r\nif (($this-&gt;userdata[''last_activity''] + $this-&gt;sess_time_to_update) &gt;= $this-&gt;now)\r\n{\r\nreturn;\r\n}\r\n$old_sessid = $this-&gt;userdata[''session_id''];\r\n$new_sessid = '''';\r\nwhile (strlen($new_sessid) &lt; 32)\r\n{\r\n$new_sessid .= mt_rand(0, mt_getrandmax());\r\n}\r\n$new_sessid .= $this-&gt;CI-&gt;input-&gt;ip_address();\r\n$new_sessid = md5(uniqid($new_sessid, TRUE));\r\n\r\n$this-&gt;userdata[''session_id''] = $new_sessid;\r\n$this-&gt;userdata[''last_activity''] = $this-&gt;now;\r\n$cookie_data = NULL;\r\n\r\nif ($this-&gt;sess_use_database === TRUE)\r\n{\r\n$cookie_data = array();\r\nforeach (array(''session_id'',''ip_address'',''user_agent'',''last_activity'') as $val)\r\n{\r\n$cookie_data[$val] = $this-&gt;userdata[$val];\r\n}\r\n\r\n$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now, ''session_id'' =&gt; $new_sessid), array(''session_id'' =&gt; $old_sessid)));\r\n}\r\n\r\n$this-&gt;_set_cookie($cookie_data);\r\n}\r\n\r\n--------------------------------------------------------------\r\n\r\n看了一下 session.php 文件的代码，在update() 方法里最后这句，它会用新生成的session_id 替换原来的session_id,在数据库里会替换，同时把新的session_id放到cookie发到客户端，期望的是客户端下次用session_id来请求。但是如果是同时发出了两个AJAX请求，那么第一个到达的AJAX请求会执行到修改库里的SESSION_ID这里，新的SESSION_ID会写到客户端，但是第二个到达的AJAX还是在用老的SESSION_ID来访问，这个时候 用老的SESSION_ID到库里查数据当然结果是空的，然后会给第二个到达的AJAX请求创建一个新的空的SESSION，并又给客户端发出一个了更新的SESSION_ID。这一轮结束之后,SESSION就失效了。\r\n\r\n解决的办法是\r\n1.$this-&gt;userdata[''session_id''] = $new_sessid;   这句注释掉。\r\n2.            $this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now, ''session_id'' =&gt; $new_sessid), array(''session_id'' =&gt; $old_sessid)));\r\n变成\r\n$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now), array(''session_id'' =&gt; $old_sessid)));\r\n\r\n就是不让原来的session_id 被修改，永远使用原来的session_id, 只延长 last_activity 上次访问时间', '多个异步请求导致的CI SESSION失效问题', '', 'publish', 'open', 'open', '', '%e5%a4%9a%e4%b8%aa%e5%bc%82%e6%ad%a5%e8%af%b7%e6%b1%82%e5%af%bc%e8%87%b4%e7%9a%84ci-session%e5%a4%b1%e6%95%88%e9%97%ae%e9%a2%98', '', '', '2014-03-10 15:38:15', '2014-03-10 07:38:15', '', 0, 'http://afeier.sinaapp.com/?p=31', 0, 'post', '', 0),
(32, 1, '2014-03-10 15:37:16', '2014-03-10 07:37:16', '', '自动草稿', '', 'inherit', 'open', 'open', '', '31-revision', '', '', '2014-03-10 15:37:16', '2014-03-10 07:37:16', '', 31, 'http://afeier.sinaapp.com/?p=32', 0, 'revision', '', 0),
(33, 1, '2014-03-10 15:39:18', '2014-03-10 07:39:18', '1.首先这不是一个常见问题，传统刷页面的方式不会遇到\n2.同一时间只有一个AJAX请求的时候也不会遇到\n3.同一时间有两个或两个以上AJAX请求必然遇到\n\n配置文件：\n$config[''sess_expiration'']  = 30;             //设置session的有效期是30秒\n$config[''sess_time_to_update'']   = 5;   //session更新间隔是5秒\n\n遇到的问题是：\n每隔2秒钟，同时发起2个AJAX请求控制器的两个不同ACTION，每当到5秒钟 更新SESSION的时候，SESSION就失效了。\n\n---------------------------------------------------------------\nfunction sess_update()\n{\nif (($this-&gt;userdata[''last_activity''] + $this-&gt;sess_time_to_update) &gt;= $this-&gt;now)\n{\nreturn;\n}\n$old_sessid = $this-&gt;userdata[''session_id''];\n$new_sessid = '''';\nwhile (strlen($new_sessid) &lt; 32)\n{\n$new_sessid .= mt_rand(0, mt_getrandmax());\n}\n$new_sessid .= $this-&gt;CI-&gt;input-&gt;ip_address();\n$new_sessid = md5(uniqid($new_sessid, TRUE));\n\n$this-&gt;userdata[''session_id''] = $new_sessid;\n$this-&gt;userdata[''last_activity''] = $this-&gt;now;\n$cookie_data = NULL;\n\nif ($this-&gt;sess_use_database === TRUE)\n{\n$cookie_data = array();\nforeach (array(''session_id'',''ip_address'',''user_agent'',''last_activity'') as $val)\n{\n$cookie_data[$val] = $this-&gt;userdata[$val];\n}\n\n$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now, ''session_id'' =&gt; $new_sessid), array(''session_id'' =&gt; $old_sessid)));\n}\n\n$this-&gt;_set_cookie($cookie_data);\n}\n\n--------------------------------------------------------------\n\n看了一下 session.php 文件的代码，在update() 方法里最后这句，它会用新生成的session_id 替换原来的session_id,在数据库里会替换，同时把新的session_id放到cookie发到客户端，期望的是客户端下次用session_id来请求。但是如果是同时发出了两个AJAX请求，那么第一个到达的AJAX请求会执行到修改库里的SESSION_ID这里，新的SESSION_ID会写到客户端，但是第二个到达的AJAX还是在用老的SESSION_ID来访问，这个时候 用老的SESSION_ID到库里查数据当然结果是空的，然后会给第二个到达的AJAX请求创建一个新的空的SESSION，并又给客户端发出一个了更新的SESSION_ID。这一轮结束之后,SESSION就失效了。\n\n解决的办法是\n1.$this-&gt;userdata[''session_id''] = $new_sessid;   这句注释掉。\n2.            $this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now, ''session_id'' =&gt; $new_sessid), array(''session_id'' =&gt; $old_sessid)));\n变成\n$this-&gt;CI-&gt;db-&gt;query($this-&gt;CI-&gt;db-&gt;update_string($this-&gt;sess_table_name, array(''last_activity'' =&gt; $this-&gt;now), array(''session_id'' =&gt; $old_sessid)));\n\n就是不让原来的session_id 被修改，永远使用原来的session_id, 只延长 last_activity 上次访问时间', '多个异步请求导致的CI SESSION失效问题', '', 'inherit', 'open', 'open', '', '31-autosave', '', '', '2014-03-10 15:39:18', '2014-03-10 07:39:18', '', 31, 'http://afeier.sinaapp.com/?p=33', 0, 'revision', '', 0),
(35, 1, '2014-03-14 16:02:26', '2014-03-14 08:02:26', '1、\r\n\r\ninput   正则    onkeyup="value=value.replace(/[^0-9]/g,'''')"\r\n\r\n2、完全JSON实现的级联菜单\r\n\r\n<a href="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/03/QQ截图20140320014124.png"><img class="alignnone size-full wp-image-41" title="QQ截图20140320014124" src="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/03/QQ截图20140320014124.png" alt="" width="658" height="383" /></a>\r\n\r\njson数据格式\r\n\r\narray(''1''=&gt;array(''name''=&gt;''s'',''conts''=&gt;array(''2''=&gt;''x'',''3''=&gt;''y'')))\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;', 'js小技巧', '', 'publish', 'open', 'open', '', 'js%e5%b0%8f%e6%8a%80%e5%b7%a7', '', '', '2014-03-20 01:44:13', '2014-03-19 17:44:13', '', 0, 'http://afeier.sinaapp.com/?p=35', 0, 'post', '', 0),
(36, 1, '2014-03-14 16:01:53', '2014-03-14 08:01:53', '', 'js小技巧', '', 'inherit', 'open', 'open', '', '35-revision', '', '', '2014-03-14 16:01:53', '2014-03-14 08:01:53', '', 35, 'http://afeier.sinaapp.com/?p=36', 0, 'revision', '', 0),
(37, 1, '2014-03-23 01:05:02', '2014-03-22 17:05:02', '1、\n\ninput   正则    onkeyup="value=value.replace(/[^0-9]/g,'''')"\n\n2、完全JSON实现的级联菜单\n\n<a href="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/03/QQ截图20140320014124.png"><img class="alignnone size-full wp-image-41" title="QQ截图20140320014124" src="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/03/QQ截图20140320014124.png" alt="" width="658" height="383" /></a>\n\njson数据格式\n\narray(''1''=&gt;array(''name''=&gt;''s'',''conts''=&gt;array(''2''=&gt;''x'',''3''=&gt;''y'')))\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;', 'js小技巧', '', 'inherit', 'open', 'open', '', '35-autosave', '', '', '2014-03-23 01:05:02', '2014-03-22 17:05:02', '', 35, 'http://afeier.sinaapp.com/?p=37', 0, 'revision', '', 0),
(38, 1, '2014-03-15 16:33:54', '2014-03-15 08:33:54', '<pre id="line1"><a href="view-source:http://hdpussy.xxx/video/2a0671e154ecc9ca3c4b9f0c4b431e5e/">http://hdpussy.xxx</a></pre>', 'ok movie', '', 'private', 'open', 'open', '', 'ok-movie', '', '', '2014-03-15 16:33:54', '2014-03-15 08:33:54', '', 0, 'http://afeier.sinaapp.com/?p=38', 0, 'post', '', 0),
(39, 1, '2014-03-15 16:33:45', '2014-03-15 08:33:45', '<pre id="line1"><a href="view-source:http://hdpussy.xxx/video/2a0671e154ecc9ca3c4b9f0c4b431e5e/">http://hdpussy.xxx</a></pre>', 'ok movie', '', 'inherit', 'open', 'open', '', '38-revision', '', '', '2014-03-15 16:33:45', '2014-03-15 08:33:45', '', 38, 'http://afeier.sinaapp.com/?p=39', 0, 'revision', '', 0),
(40, 1, '2014-03-15 16:34:56', '2014-03-15 08:34:56', '<pre id="line1"><a href="view-source:http://hdpussy.xxx/video/2a0671e154ecc9ca3c4b9f0c4b431e5e/">http://hdpussy.xxx</a></pre>', 'ok movie', '', 'inherit', 'open', 'open', '', '38-autosave', '', '', '2014-03-15 16:34:56', '2014-03-15 08:34:56', '', 38, 'http://afeier.sinaapp.com/?p=40', 0, 'revision', '', 0),
(41, 1, '2014-03-20 01:41:58', '2014-03-19 17:41:58', '', 'QQ截图20140320014124', '', 'inherit', 'open', 'open', '', 'qq%e6%88%aa%e5%9b%be20140320014124', '', '', '2014-03-20 01:41:58', '2014-03-19 17:41:58', '', 35, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/03/QQ截图20140320014124.png', 0, 'attachment', 'image/png', 0),
(42, 1, '2014-03-14 16:02:26', '2014-03-14 08:02:26', 'input   正则    onkeyup="value=value.replace(/[^0-9]/g,'''')"', 'js小技巧', '', 'inherit', 'open', 'open', '', '35-revision-2', '', '', '2014-03-14 16:02:26', '2014-03-14 08:02:26', '', 35, 'http://afeier.sinaapp.com/?p=42', 0, 'revision', '', 0),
(44, 1, '2014-03-23 01:03:47', '2014-03-22 17:03:47', '//滚动图片类\r\n(function(){\r\n$.scrolls=function(args){\r\nvar s_ui=$(args.ui);\r\nvar s_li=$(args.li);\r\nvar s_left=$(args.left);\r\nvar s_right=$(args.right);\r\nvar intervalId=0;\r\nvar that = this;//取得当前对象\r\nthis.init=function(){\r\ns_ui.width(6500);\r\nthis.slideauto();\r\ns_ui.hover(function(){that.slidestop()},function(){that.slideauto()});\r\ns_left.click(function(){\r\nthat.slidestop();\r\nthat.slid_left();\r\n});\r\ns_right.click(function(){\r\nthat.slidestop();\r\nthat.slide();\r\n});\r\n}\r\nthis.slide=function(){\r\ns_ui.animate({''marginLeft'':-220},300,function(){\r\ns_ui.find(''li:first'').appendTo(s_ui);\r\ns_ui.css(''marginLeft'',0);\r\n\r\n});\r\nreturn false;\r\n\r\n};\r\nthis.slid_left=function(){\r\ns_ui.animate({''marginLeft'':220},300,function(){\r\ns_ui.find(''li:last'').prependTo(s_ui);\r\ns_ui.css(''marginLeft'',0);\r\n\r\n});\r\nreturn false;\r\n\r\n};\r\n\r\nthis.slideauto=function(){\r\nintervalId=window.setInterval(function(){that.slide();},3000);\r\n\r\n};\r\nthis.slidestop=function(){\r\nwindow.clearInterval(intervalId);\r\n};\r\n\r\n\r\n}\r\n}\r\n\r\n\r\n)(jQuery);\r\n\r\n//TAB切换类\r\n(function(){\r\n$.tabs=function(args){\r\nvar tabs=$(args.tabs).find(''a'');\r\nvar cons=$(args.conts).find(''.tc'');\r\nthis.run=function(){\r\ntabs.each(function(id){\r\n\r\n$(this).mouseover(function () {\r\ntabs.removeClass(''on'');\r\n$(this).addClass(''on'');\r\ncons.each(function(){$(this).addClass(''hidden'');});\r\ncons.eq(id).removeClass(''hidden'');\r\n});\r\n})\r\n}\r\n}\r\n})(jQuery);', '几个常用的JS类', '', 'publish', 'open', 'open', '', '%e5%87%a0%e4%b8%aa%e5%b8%b8%e7%94%a8%e7%9a%84js%e7%b1%bb', '', '', '2014-03-23 01:03:47', '2014-03-22 17:03:47', '', 0, 'http://afeier.sinaapp.com/?p=44', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(45, 1, '2014-03-23 01:02:56', '2014-03-22 17:02:56', '', '自动草稿', '', 'inherit', 'open', 'open', '', '44-revision', '', '', '2014-03-23 01:02:56', '2014-03-22 17:02:56', '', 44, 'http://afeier.sinaapp.com/?p=45', 0, 'revision', '', 0),
(46, 1, '2014-03-24 17:41:51', '2014-03-24 09:41:51', 'find ./ -type f -print0|xargs -0 chmod 644\r\n\r\nfind ./ -type d -print0|xargs -0 chmod 755', '常用linux命令', '', 'publish', 'open', 'open', '', '%e5%b8%b8%e7%94%a8linux%e5%91%bd%e4%bb%a4-2', '', '', '2014-03-24 17:41:51', '2014-03-24 09:41:51', '', 0, 'http://afeier.sinaapp.com/?p=46', 0, 'post', '', 0),
(47, 1, '2014-03-24 17:41:40', '2014-03-24 09:41:40', 'find ./ -type f -print0|xargs -0 chmod 644\n\nfind ./ -type d -print0|xargs -0 chmod 755', '常用linux命令', '', 'inherit', 'open', 'open', '', '46-revision', '', '', '2014-03-24 17:41:40', '2014-03-24 09:41:40', '', 46, 'http://afeier.sinaapp.com/?p=47', 0, 'revision', '', 0),
(48, 1, '2015-02-25 15:14:06', '2015-02-25 07:14:06', 'find ./ -type f -print0|xargs -0 chmod 644\n\nfind ./ -type d -print0|xargs -0 chmod 755', '常用linux命令', '', 'inherit', 'open', 'open', '', '46-autosave', '', '', '2015-02-25 15:14:06', '2015-02-25 07:14:06', '', 46, 'http://afeier.sinaapp.com/?p=48', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(53, 1, '2014-04-16 16:04:42', '2014-04-16 08:04:42', '打包下载：<a href="http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/201312181459414245.zip">高性能curl类</a>\r\n\r\n&nbsp;\r\n\r\n核心类：\r\n\r\n&nbsp;\r\n\r\n&lt;?php\r\n\r\n/**\r\n* Zebra_cURL, a high performance PHP cURL library\r\n*\r\n* Zebra_cURL is a high performance PHP library acting as a wrapper to PHP''s {@link http://www.php.net/manual/en/book.curl.php libcurl library},\r\n* which not only allows the running of multiple requests at once asynchronously, in parallel, but also as soon as one\r\n* thread finishes it can be processed right away without having to wait for the other threads in the queue to finish.\r\n*\r\n* Also, each time a request is completed another one is added to the queue, thus keeping a constant number of threads\r\n* running at all times and eliminating wasted CPU cycles from busy waiting. This result is a faster and more efficient\r\n* way of processing large quantities of cURL requests (like fetching thousands of RSS feeds at once), drastically reducing\r\n* processing time.\r\n*\r\n* This script supports GET and POST request, basic downloads as well as downloads from FTP servers, HTTP Authentication,\r\n* and requests through proxy servers.\r\n*\r\n* For maximum efficiency downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary\r\n* strain from the server of having to read files into memory first, and then writing them to disk.\r\n*\r\n* Zebra_cURL requires the {@link http://www.php.net/manual/en/curl.installation.php PHP cURL extension} to be enabled.\r\n*\r\n* The code is heavily commented and generates no warnings/errors/notices when PHP''s error reporting level is set to\r\n* {@link http://www.php.net/manual/en/function.error-reporting.php E_ALL}.\r\n*\r\n* Visit {@link http://stefangabos.ro/php-libraries/zebra-curl/} for more information.\r\n*\r\n* For more resources visit {@link http://stefangabos.ro/}\r\n*\r\n* @author Stefan Gabos &lt;contact@stefangabos.ro&gt;\r\n* @version 1.0.2 (last revision: August 29, 2013)\r\n* @copyright (c) 2013 Stefan Gabos\r\n* @license http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE\r\n* @package Zebra_cURL\r\n*/\r\n\r\nclass Zebra_cURL {\r\n\r\n/**\r\n* The number of parallel, asynchronous, requests to be processed by the library at once.\r\n*\r\n* &lt;code&gt;\r\n* // allow execution of 30 simultaneous threads\r\n* $curl-&gt;threads = 30;\r\n* &lt;/code&gt;\r\n*\r\n* Note that the library will keep this number of parallel threads running at all times (unless, of course, there\r\n* are less remaining URLs to process); it''s doing this by starting a new thread as soon as another one finishes,\r\n* instead of waiting for each batch to finish, and so on, until there are no more URLs to process, and thus\r\n* greatly decreasing execution time.\r\n*\r\n* Default is 10.\r\n*\r\n* @var integer\r\n*/\r\npublic $threads;\r\n\r\n/**\r\n* Default value is TRUE, can be changed by giving the constructor parameter value false.\r\n*\r\n* Used by the {@link _process()} method to determine if we run response body through PHP''s htmlentities function.\r\n*\r\n* @access private\r\n*\r\n*/\r\nprivate $_htmlentities;\r\n\r\n/**\r\n* An associative array linked with all the resources, used to store original URL and file pointer resources, used\r\n* for streaming downloads.\r\n*\r\n* @var array\r\n*\r\n* @access private\r\n*/\r\nprivate $_info;\r\n\r\n/**\r\n* Used by the {@link _process()} method to keep track of URLs that need to be processed.\r\n*\r\n* @access private\r\n*/\r\nprivate $_queue;\r\n\r\n/**\r\n* The cURL multi handle\r\n*\r\n* @var resource\r\n*\r\n* @access private\r\n*/\r\nprivate $_multi_handle;\r\n\r\n/**\r\n* Possible values of the "result" attribute in the object passed to the callback function.\r\n*\r\n* @var array\r\n*\r\n* @access private\r\n*/\r\nprivate $_response_messages = array(\r\n0 =&gt; ''CURLE_OK'',\r\n1 =&gt; ''CURLE_UNSUPPORTED_PROTOCOL'',\r\n2 =&gt; ''CURLE_FAILED_INIT'',\r\n3 =&gt; ''CURLE_URL_MALFORMAT'',\r\n4 =&gt; ''CURLE_URL_MALFORMAT_USER'',\r\n5 =&gt; ''CURLE_COULDNT_RESOLVE_PROXY'',\r\n6 =&gt; ''CURLE_COULDNT_RESOLVE_HOST'',\r\n7 =&gt; ''CURLE_COULDNT_CONNECT'',\r\n8 =&gt; ''CURLE_FTP_WEIRD_SERVER_REPLY'',\r\n9 =&gt; ''CURLE_REMOTE_ACCESS_DENIED'',\r\n11 =&gt; ''CURLE_FTP_WEIRD_PASS_REPLY'',\r\n13 =&gt; ''CURLE_FTP_WEIRD_PASV_REPLY'',\r\n14 =&gt; ''CURLE_FTP_WEIRD_227_FORMAT'',\r\n15 =&gt; ''CURLE_FTP_CANT_GET_HOST'',\r\n17 =&gt; ''CURLE_FTP_COULDNT_SET_TYPE'',\r\n18 =&gt; ''CURLE_PARTIAL_FILE'',\r\n19 =&gt; ''CURLE_FTP_COULDNT_RETR_FILE'',\r\n21 =&gt; ''CURLE_QUOTE_ERROR'',\r\n22 =&gt; ''CURLE_HTTP_RETURNED_ERROR'',\r\n23 =&gt; ''CURLE_WRITE_ERROR'',\r\n25 =&gt; ''CURLE_UPLOAD_FAILED'',\r\n26 =&gt; ''CURLE_READ_ERROR'',\r\n27 =&gt; ''CURLE_OUT_OF_MEMORY'',\r\n28 =&gt; ''CURLE_OPERATION_TIMEDOUT'',\r\n30 =&gt; ''CURLE_FTP_PORT_FAILED'',\r\n31 =&gt; ''CURLE_FTP_COULDNT_USE_REST'',\r\n33 =&gt; ''CURLE_RANGE_ERROR'',\r\n34 =&gt; ''CURLE_HTTP_POST_ERROR'',\r\n35 =&gt; ''CURLE_SSL_CONNECT_ERROR'',\r\n36 =&gt; ''CURLE_BAD_DOWNLOAD_RESUME'',\r\n37 =&gt; ''CURLE_FILE_COULDNT_READ_FILE'',\r\n38 =&gt; ''CURLE_LDAP_CANNOT_BIND'',\r\n39 =&gt; ''CURLE_LDAP_SEARCH_FAILED'',\r\n41 =&gt; ''CURLE_FUNCTION_NOT_FOUND'',\r\n42 =&gt; ''CURLE_ABORTED_BY_CALLBACK'',\r\n43 =&gt; ''CURLE_BAD_FUNCTION_ARGUMENT'',\r\n45 =&gt; ''CURLE_INTERFACE_FAILED'',\r\n47 =&gt; ''CURLE_TOO_MANY_REDIRECTS'',\r\n48 =&gt; ''CURLE_UNKNOWN_TELNET_OPTION'',\r\n49 =&gt; ''CURLE_TELNET_OPTION_SYNTAX'',\r\n51 =&gt; ''CURLE_PEER_FAILED_VERIFICATION'',\r\n52 =&gt; ''CURLE_GOT_NOTHING'',\r\n53 =&gt; ''CURLE_SSL_ENGINE_NOTFOUND'',\r\n54 =&gt; ''CURLE_SSL_ENGINE_SETFAILED'',\r\n55 =&gt; ''CURLE_SEND_ERROR'',\r\n56 =&gt; ''CURLE_RECV_ERROR'',\r\n58 =&gt; ''CURLE_SSL_CERTPROBLEM'',\r\n59 =&gt; ''CURLE_SSL_CIPHER'',\r\n60 =&gt; ''CURLE_SSL_CACERT'',\r\n61 =&gt; ''CURLE_BAD_CONTENT_ENCODING'',\r\n62 =&gt; ''CURLE_LDAP_INVALID_URL'',\r\n63 =&gt; ''CURLE_FILESIZE_EXCEEDED'',\r\n64 =&gt; ''CURLE_USE_SSL_FAILED'',\r\n65 =&gt; ''CURLE_SEND_FAIL_REWIND'',\r\n66 =&gt; ''CURLE_SSL_ENGINE_INITFAILED'',\r\n67 =&gt; ''CURLE_LOGIN_DENIED'',\r\n68 =&gt; ''CURLE_TFTP_NOTFOUND'',\r\n69 =&gt; ''CURLE_TFTP_PERM'',\r\n70 =&gt; ''CURLE_REMOTE_DISK_FULL'',\r\n71 =&gt; ''CURLE_TFTP_ILLEGAL'',\r\n72 =&gt; ''CURLE_TFTP_UNKNOWNID'',\r\n73 =&gt; ''CURLE_REMOTE_FILE_EXISTS'',\r\n74 =&gt; ''CURLE_TFTP_NOSUCHUSER'',\r\n75 =&gt; ''CURLE_CONV_FAILED'',\r\n76 =&gt; ''CURLE_CONV_REQD'',\r\n77 =&gt; ''CURLE_SSL_CACERT_BADFILE'',\r\n78 =&gt; ''CURLE_REMOTE_FILE_NOT_FOUND'',\r\n79 =&gt; ''CURLE_SSH'',\r\n80 =&gt; ''CURLE_SSL_SHUTDOWN_FAILED'',\r\n81 =&gt; ''CURLE_AGAIN'',\r\n82 =&gt; ''CURLE_SSL_CRL_BADFILE'',\r\n83 =&gt; ''CURLE_SSL_ISSUER_ERROR'',\r\n84 =&gt; ''CURLE_FTP_PRET_FAILED'',\r\n84 =&gt; ''CURLE_FTP_PRET_FAILED'',\r\n85 =&gt; ''CURLE_RTSP_CSEQ_ERROR'',\r\n86 =&gt; ''CURLE_RTSP_SESSION_ERROR'',\r\n87 =&gt; ''CURLE_FTP_BAD_FILE_LIST'',\r\n88 =&gt; ''CURLE_CHUNK_FAILED'',\r\n);\r\n\r\n/**\r\n* Constructor of the class.\r\n*\r\n* Below is the list of default options set for each request, unless these options are specifically changed by one\r\n* of the methods or via the {@link option()} method:\r\n*\r\n* - &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; get the last request header; if set to FALSE the "last_request"\r\n* entry of the "headers" attribute of the object given as argument to the\r\n* callback function, will be an empty string; &lt;i&gt;you should leave this\r\n* unaltered!&lt;/i&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_AUTOREFERER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; automatically set the &lt;i&gt;Referer:&lt;/i&gt; field in requests\r\n* where it follows a &lt;i&gt;Location:&lt;/i&gt; redirect;\r\n*\r\n* - &lt;b&gt;CURLOPT_COOKIEFILE&lt;/b&gt; - &lt;b&gt;empty string&lt;/b&gt;; no cookies are loaded, but cookie handling is still\r\n* enabled\r\n*\r\n* - &lt;b&gt;CURLOPT_CONNECTTIMEOUT&lt;/b&gt; - &lt;b&gt;10&lt;/b&gt;; the number of seconds to wait while trying to connect. use 0\r\n* to wait indefinitely;\r\n*\r\n* - &lt;b&gt;CURLOPT_FOLLOWLOCATION&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; automatically follow any &lt;i&gt;Location:&lt;/i&gt; header that the\r\n* server sends as part of the HTTP header (note this is recursive, PHP will\r\n* follow as many &lt;i&gt;Location:&lt;/i&gt; headers as specified by the value of\r\n* CURLOPT_MAXREDIRS - see below);\r\n*\r\n* - &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; get the response header(s); if set to FALSE the "responses"\r\n* entry of the "headers" attribute of the object given as argument to the\r\n* callback function, will be an empty string; &lt;i&gt;you should leave this\r\n* unaltered!&lt;/i&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_MAXREDIRS&lt;/b&gt; - &lt;b&gt;50&lt;/b&gt;; the maximum amount of HTTP redirections to follow; used\r\n* together with CURLOPT_FOLLOWLOCATION;\r\n*\r\n* - &lt;b&gt;CURLOPT_RETURNTRANSFER&lt;/b&gt; - &lt;b&gt;TRUE&lt;/b&gt;; return the transfer''s body as a string instead of outputting\r\n* it directly; if set to FALSE the "body" attribute of the object given as\r\n* argument to a callback function will be an empty string; &lt;b&gt;this will\r\n* always be TRUE and cannot be changed!&lt;/b&gt;;\r\n*\r\n* - &lt;b&gt;CURLOPT_SSL_VERIFYHOST&lt;/b&gt; - &lt;b&gt;2&lt;/b&gt;; check the existence of a common name in the SSL peer certificate\r\n* (for when connecting to HTTPS), and that it matches with the provided\r\n* hostname; see also {@link ssl()};\r\n*\r\n* - &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; - &lt;b&gt;FALSE&lt;/b&gt;; stop cURL from verifying the peer''s certificate (which\r\n* would most likely cause the request to fail). see also {@link ssl()};\r\n*\r\n* - &lt;b&gt;CURLOPT_TIMEOUT&lt;/b&gt; - &lt;b&gt;10&lt;/b&gt;; the maximum number of seconds to allow cURL functions to\r\n* execute;\r\n*\r\n* - &lt;b&gt;CURLOPT_USERAGENT&lt;/b&gt; - A (slightly) random user agent (Internet Explorer 9 or 10, on Windows\r\n* Vista, 7 or 8, with other extra strings). Some web services will not\r\n* respond unless a valid user-agent string is provided\r\n*\r\n* @param boolean $htmlentities Instructs the script whether the response body returned by the {@link get()}\r\n* and {@link post()} methods should be run through PHP''s\r\n* {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function.\r\n*\r\n* @return void\r\n*/\r\nfunction __construct($htmlentities = true)\r\n{\r\n\r\n// if the cURL extension is not available, trigger an error and stop execution\r\nif (!extension_loaded(''curl'')) trigger_error(''php_curl extension is not loaded!'', E_USER_ERROR);\r\n\r\n// set defaults for accessing HTTPS servers\r\n$this-&gt;ssl();\r\n\r\n// initialize some internal variables\r\n$this-&gt;_multi_handle = false;\r\n$this-&gt;_info = array();\r\n\r\n// caching is disabled by default\r\n$this-&gt;cache(false);\r\n\r\n// the default number of parallel, asynchronous, requests to be processed by the library at once.\r\n$this-&gt;threads = 10;\r\n\r\n// by default, run htmlentities() on the response body\r\n$this-&gt;_htmlentities = $htmlentities;\r\n\r\n}\r\n\r\n/**\r\n* Use this method to enable caching for {@link get() get} and {@link header() header} requests.\r\n*\r\n* &lt;i&gt;Caching is only used for {@link get() get} and {@link header() header} requests, and will be ignored for other\r\n* request types even if it is enabled!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Caching is disabled by default!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occurred: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // cache results in the "cache" folder and for 86400 seconds (24 hours)\r\n* $curl-&gt;cache(''cache'', 86400);\r\n*\r\n* // let''s fetch the RSS feeds of some popular websites\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;get(array(\r\n* ''http://feeds.feedburner.com/alistapart/main'',\r\n* ''http://feeds.feedburner.com/TechCrunch'',\r\n* ''http://feeds.mashable.com/mashable'',\r\n* ), ''mycallback'')\r\n* &lt;/code&gt;\r\n*\r\n* @param string $path The path where the cache files to be stored.\r\n*\r\n* Setting this to FALSE will disable caching.\r\n*\r\n* &lt;i&gt;Unless set to FALSE this must point to a writable directory or an error will\r\n* be triggered!&lt;/i&gt;\r\n*\r\n* @param integer $lifetime (Optional) The number of seconds after which cache will be considered as expired.\r\n*\r\n* Default is 3600.\r\n*\r\n* @param boolean $compress (Optional) If set to TRUE, cache files will be\r\n* {@link http://php.net/manual/ro/function.gzcompress.php gzcompress}-ed so that\r\n* they occupy less disk space.\r\n*\r\n* Default is TRUE.\r\n*\r\n* @param octal $chmod (Optional) The file system permissions to be set for newly created cache files.\r\n*\r\n* I suggest using the value "0755" (without the quotes) but, if you know what you\r\n* are doing, here is how you can calculate the permission levels:\r\n*\r\n* - 400 Owner Read\r\n* - 200 Owner Write\r\n* - 100 Owner Execute\r\n* - 40 Group Read\r\n* - 20 Group Write\r\n* - 10 Group Execute\r\n* - 4 Global Read\r\n* - 2 Global Write\r\n* - 1 Global Execute\r\n*\r\n* Default is "0755" (without the quotes).\r\n*\r\n* @return null\r\n*/\r\npublic function cache($path, $lifetime = 3600, $compress = true, $chmod = 0755)\r\n{\r\n\r\n// if we have to enable caching\r\nif ($path != false)\r\n\r\n// store cache-related properties\r\n$this-&gt;cache = array(\r\n''path'' =&gt; $path,\r\n''lifetime'' =&gt; $lifetime,\r\n''chmod'' =&gt; $chmod,\r\n''compress'' =&gt; $compress,\r\n);\r\n\r\n// if we have to disable caching, disable it\r\nelse $this-&gt;cache = false;\r\n\r\n}\r\n\r\n/**\r\n* Sets the path and name of the file to save to / retrieve cookies from, for each accessed URL. (cookie name/data\r\n* will be stored in this file on a per-domain basis). Important when cookies need to stored/restored to maintain\r\n* status/session of the request(s) made to the same domain(s).\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_COOKIEJAR&lt;/b&gt; and &lt;b&gt;CURLOPT_COOKIEFILE&lt;/b&gt; options.\r\n*\r\n* @param string $path The path to a file to save to / retrieve cookies from, for each accessed URL.\r\n*\r\n* If file does not exist the library will attempt to create it and if it is unable to\r\n* create it will trigger an error.\r\n*\r\n* @param boolean $keep (Optional) By default, the file to save to / retrieve cookies from is deleted when\r\n* script execution finishes. If you want the file to be preserved, set this argument to\r\n* TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* @return null\r\n*/\r\npublic function cookies($path, $keep = false)\r\n{\r\n// file does not exist\r\nif (!is_file($path)) {\r\n\r\n// attempt to create it\r\nif (!($handle = fopen($path, ''a'')))\r\n\r\n// if file could not be created, trigger an error\r\ntrigger_error(''File "'' . $path . ''" for storing cookies could not be found nor could it automatically be created! Make sure either that the path to the file points to a writable directory, or create the file yourself and make it writable.'', E_USER_ERROR);\r\n\r\n// if file could be create, release handle\r\nfclose($handle);\r\n\r\n}\r\n\r\n// set these options\r\n$this-&gt;option(array(\r\nCURLOPT_COOKIEJAR =&gt; $path,\r\nCURLOPT_COOKIEFILE =&gt; $path,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Downloads one or more files from one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument, saves the downloaded\r\n* files (with their original name) to the path specified by the &lt;i&gt;$destination_path&lt;/i&gt;, and executes the callback\r\n* function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request finishes.\r\n*\r\n* Downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary strain from your\r\n* server of reading files into memory first, and then writing them to disk.\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_BINARYTRANSFER&lt;/b&gt; option to TRUE, so you might want to change\r\n* this back to FALSE/0 or "unset" it using the {@link option()} method, before making a {@link get()}, {@link header()}\r\n* or {@link post()} request.\r\n*\r\n* &lt;i&gt;Files are downloaded preserving their name so you may run into trouble when trying to download more images\r\n* having the same name (either from the same, or different servers)!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // download 2 images from 2 different websites, and\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;download(array(\r\n* ''http://www.somewebsite.com/images/alpha.jpg'',\r\n* ''http://www.otherwebsite.com/images/omega.jpg'',\r\n* ), ''destination/path/'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param string $destination_path The path to where to save the file(s) to.\r\n*\r\n* If path is not pointing to a directory or is not writable, the library will\r\n* trigger an error.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an\r\n* anonymous function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the\r\n* request that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function; there''s also an extra entry called &lt;i&gt;original_url&lt;/i&gt;\r\n* because, as curl_getinfo() only returns information\r\n* about the &lt;b&gt;last&lt;/b&gt; request, the original URL may\r\n* be lost otherwise.\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry\r\n* containing the request headers generated by &lt;i&gt;the\r\n* last request&lt;/i&gt;; so, remember, if there are redirects\r\n* involved, there will be more requests made, but only\r\n* information from the last one will be available; if\r\n* explicitly disabled via the {@link option()} method\r\n* by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries\r\n* (if there are redirects involved) with the response\r\n* headers of all the requests made; if explicitly disabled\r\n* via the {@link option()} method by setting\r\n* &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this will be an\r\n* empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array\r\n* is an associative array in the form of property =&gt;\r\n* value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page\r\n* at the URL).\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array\r\n* with 2 entries: the first entry represents the result''s\r\n* code, while the second is the textual representation\r\n* of the code; if the request was successful, these\r\n* values will be &lt;i&gt;array(0, CURLE_OK);&lt;/i&gt; consult\r\n* {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function download($url, $destination_path, $callback = '''')\r\n{\r\n\r\n// if destination path is not a directory or is not writable, trigger an error message\r\nif (!is_dir($destination_path) || !is_writable($destination_path)) trigger_error(''"'' . $destination_path . ''" is not a valid path or is not writable!'', E_USER_ERROR);\r\n\r\n// set download path\r\n$this-&gt;download_path = rtrim($destination_path, ''/\\\\'') . ''/'';\r\n\r\n// instruct the cURL library that it has to do a binary transfer\r\n$this-&gt;option(CURLOPT_BINARYTRANSFER, 1);\r\n\r\n// process request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Works exactly like the {@link download()} method only that downloads are made from an FTP server.\r\n*\r\n* Downloads from an FTP server to which the connection is made using the given &lt;i&gt;$username&lt;/i&gt; and &lt;i&gt;$password&lt;/i&gt;\r\n* arguments, one or more files specified by the &lt;i&gt;$url&lt;/i&gt; argument, saves the downloaded files (with their original\r\n* name) to the path specified by the &lt;i&gt;$destination_path&lt;/i&gt;, and executes the callback function specified by the\r\n* &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request finishes.\r\n*\r\n* Downloads are streamed (bytes downloaded are directly written to disk) removing the unnecessary strain from your\r\n* server of reading files into memory first, and then writing them to disk.\r\n*\r\n* This method will automatically set the &lt;b&gt;CURLOPT_BINARYTRANSFER&lt;/b&gt; option to TRUE, so you might want to change\r\n* this back to FALSE/0 or "unset" it using the {@link option()} method, before making a {@link get()}, {@link header()}\r\n* or {@link post()} request.\r\n*\r\n* &lt;i&gt;Files are downloaded preserving their name so you may run into trouble when trying to download more images\r\n* having the same name (either from the same, or different servers)!&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // connect to the FTP server using the given credential, download a file to a given location and\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;download(''ftp://somefile.ext'', ''destination/path/'', ''username'', ''password'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param string $destination_path The path to where to save the file(s) to.\r\n*\r\n* If path is not pointing to a directory or is not writable, the library will\r\n* trigger an error.\r\n*\r\n* @param string $username (Optional) The username to be used to connect to the FTP server (if required).\r\n*\r\n* @param string $password (Optional) The password to be used to connect to the FTP server (if required).\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an\r\n* anonymous function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the\r\n* request that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry\r\n* containing the request headers generated by &lt;i&gt;the\r\n* last request&lt;/i&gt;; so, remember, if there are redirects\r\n* involved, there will be more requests made, but only\r\n* information from the last one will be available; if\r\n* explicitly disabled via the {@link option()} method\r\n* by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries\r\n* (if there are redirects involved) with the response\r\n* headers of all the requests made; if explicitly disabled\r\n* via the {@link option()} method by setting\r\n* &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this will be an\r\n* empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array\r\n* is an associative array in the form of property =&gt;\r\n* value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page\r\n* at the URL).\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array\r\n* with 2 entries: the first entry represents the result''s\r\n* code, while the second is the textual representation\r\n* of the code; if the request was successful, these\r\n* values will be &lt;i&gt;array(0, CURLE_OK);&lt;/i&gt; consult\r\n* {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function ftp_download($url, $destination_path, $username = '''', $password = '''', $callback = '''')\r\n{\r\n\r\n// if he have at least an username, set username/password\r\nif ($username != '''') $this-&gt;option(CURLOPT_USERPWD, $username . '':'' . $password);\r\n\r\n// call the download method\r\n$this-&gt;download($url, $destination_path, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Performs an HTTP &lt;b&gt;GET&lt;/b&gt; request to one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument and executes the\r\n* callback function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for each and every request, as soon as each request\r\n* finishes.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // cache results in the "cache" folder and for 3600 seconds (one hour)\r\n* $curl-&gt;cache(''cache'', 3600);\r\n*\r\n* // let''s fetch the RSS feeds of some popular websites\r\n* // execute the "mycallback" function for each request, as soon as it finishes\r\n* $curl-&gt;get(array(\r\n* ''http://feeds.feedburner.com/alistapart/main'',\r\n* ''http://feeds.feedburner.com/TechCrunch'',\r\n* ''http://feeds.mashable.com/mashable'',\r\n* ), ''mycallback'')\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array is an\r\n* associative array in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page at the\r\n* URL).\r\n*\r\n* Unless disabled via the {@link __construct() constructor}, all\r\n* applicable characters will be converted to HTML entities via\r\n* PHP''s {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function, so remember to use PHP''s {@link http://www.php.net/manual/en/function.html-entity-decode.php html_entity_decode()}\r\n* function to do reverse this, if it''s the case;\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function get($url, $callback = '''')\r\n{\r\n\r\n// make sure we perform a GET request\r\n$this-&gt;option(CURLOPT_HTTPGET, 1);\r\n\r\n// process request(s)\r\nreturn $this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Works exactly like the {@link get()} method, the only difference being that this method will automatically set\r\n* the &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; option to FALSE and thus the &lt;i&gt;body&lt;/i&gt; property of the result will be an empty string.\r\n* Also, &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; and &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; will be set to TRUE and therefore header information\r\n* will be available.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // process given URLs execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* $curl-&gt;header(''http://www.somewebsite.com'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to process.\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made;\r\n*\r\n* &lt;i&gt;Each entry in the headers'' array is an associative array\r\n* in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - an empty string\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function header($url, $callback = '''')\r\n{\r\n\r\n// no "body" for header requests but make sure we have the headers\r\n$this-&gt;option(array(\r\nCURLINFO_HEADER_OUT =&gt; 1,\r\nCURLOPT_HEADER =&gt; 1,\r\nCURLOPT_HTTPGET =&gt; 1,\r\nCURLOPT_NOBODY =&gt; 1,\r\n));\r\n\r\n// execute request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Use this method to make requests to pages that requires prior HTTP authentication.\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // prepare user name and password\r\n* $curl-&gt;http_authentication(''username'', ''password'');\r\n*\r\n* // get content from a page that requires prior HTTP authentication\r\n* $curl-&gt;get(''http://www.some-page-requiring-prior-http-authentication.com'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param string $username User name to be used for authentication.\r\n*\r\n* @param string $password Password to be used for authentication.\r\n*\r\n* @param string $type (Optional) The HTTP authentication method(s) to use. The options are:\r\n*\r\n* - &lt;b&gt;CURLAUTH_BASIC&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;\r\n* - &lt;b&gt;CURLAUTH_ANY&lt;/b&gt;\r\n* - CU&lt;b&gt;RLAUTH_ANYSAFE&lt;/b&gt;\r\n*\r\n* The bitwise | (or) operator can be used to combine more than one method. If\r\n* this is done, cURL will poll the server to see what methods it supports and\r\n* pick the best one.\r\n*\r\n* &lt;b&gt;CURLAUTH_ANY&lt;/b&gt; is an alias for &lt;b&gt;CURLAUTH_BASIC&lt;/b&gt; | &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt; |\r\n* &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt; | &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;.\r\n*\r\n* &lt;b&gt;CURLAUTH_ANYSAFE&lt;/b&gt; is an alias for &lt;b&gt;CURLAUTH_DIGEST&lt;/b&gt; | &lt;b&gt;CURLAUTH_GSSNEGOTIATE&lt;/b&gt; |\r\n* &lt;b&gt;CURLAUTH_NTLM&lt;/b&gt;.\r\n*\r\n* Default is &lt;b&gt;CURLAUTH_ANY&lt;/b&gt;.\r\n*\r\n* @return null\r\n*/\r\npublic function http_authentication($username, $password, $type = CURLAUTH_ANY)\r\n{\r\n\r\n// set the required options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPAUTH =&gt; $type,\r\nCURLOPT_USERPWD =&gt; $username . '':'' . $password,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Allows you to set one or more {@link http://php.net/manual/en/function.curl-setopt.php cURL options}.\r\n*\r\n* &lt;code&gt;\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // setting a single option\r\n* $curl-&gt;option(CURLOPT_CONNECTTIMEOUT, 10);\r\n*\r\n* // setting multiple options at once\r\n* $curl-&gt;option(array(\r\n* CURLOPT_TIMEOUT =&gt; 10,\r\n* CURLOPT_CONNECTTIMEOUT =&gt; 10,\r\n* ));\r\n*\r\n* // make a request here...\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $option A single option for which to set a value, or an associative array in the form of\r\n* &lt;i&gt;option&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; (in case of an array, the &lt;i&gt;$value&lt;/i&gt; argument will\r\n* be disregarded).\r\n*\r\n* &lt;i&gt;Setting a value to&lt;/i&gt; &lt;b&gt;null&lt;/b&gt; &lt;i&gt;will "unset" that option.&lt;/i&gt;\r\n*\r\n* @param mixed $value (Optional) If the &lt;i&gt;$option&lt;/i&gt; argument is not an array, then this argument represents\r\n* the value to be set for the respective option. If the &lt;i&gt;$option&lt;/i&gt; argument is an\r\n* array, then the value of this argument will be ignored.\r\n*\r\n* &lt;i&gt;Setting a value to&lt;/i&gt; &lt;b&gt;null&lt;/b&gt; &lt;i&gt;will "unset" that option.&lt;/i&gt;\r\n*\r\n* @return null\r\n*\r\n*/\r\npublic function option($option, $value = '''')\r\n{\r\n\r\n// if $options is given as an array\r\nif (is_array($option))\r\n\r\n// iterate through each of the values\r\nforeach ($option as $name =&gt; $value)\r\n\r\n// if we need to "unset" an option, unset it\r\nif (is_null($value)) unset($this-&gt;options[$name]);\r\n\r\n// set the value for the option otherwise\r\nelse $this-&gt;options[$name] = $value;\r\n\r\n// if option is not given as an array,\r\n// if we need to "unset" an option, unset it\r\nelseif (is_null($value)) unset($this-&gt;options[$option]);\r\n\r\n// set the value for the option otherwise\r\nelse $this-&gt;options[$option] = $value;\r\n\r\n}\r\n\r\n/**\r\n* Performs an HTTP &lt;b&gt;POST&lt;/b&gt; to one or more URLs specified by the &lt;i&gt;$url&lt;/i&gt; argument, using the values specified\r\n* by the &lt;i&gt;$values&lt;/i&gt; argument, and executes the callback function specified by the &lt;i&gt;$callback&lt;/i&gt; argument for\r\n* each and every request, as soon as each request finishes.\r\n*\r\n* &lt;i&gt;Multiple requests are made asynchronously, in parallel, and the callback function is called for each and every\r\n* request, as soon as each request finishes. The number of parallel requests to be made at once can be set through\r\n* the {@link threads} property.&lt;/i&gt;\r\n*\r\n* &lt;i&gt;Note that in case of multiple URLs, requests may not finish in the same order as initiated!&lt;/i&gt;\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* // the callback function receives as argument an object with 4 properties\r\n* // (info, header, body and response)\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the Zebra_cURL object\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // do a POST and execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* $curl-&gt;post(''http://www.somewebsite.com'', array(\r\n* ''field_1'' =&gt; ''value 1'',\r\n* ''field_2'' =&gt; ''value 2'',\r\n* ), ''mycallback'');\r\n*\r\n* // do a POST and execute the "mycallback" function for each\r\n* // request, as soon as it finishes\r\n* // note that we''re also uploading a file this time\r\n* // and note that we''re prefixing the file name with @\r\n* $curl-&gt;post(''http://www.somewebsite.com'', array(\r\n* ''field_1'' =&gt; ''value 1'',\r\n* ''field_2'' =&gt; ''value 2'',\r\n* ''upload'' =&gt; ''@absolute/path/to/file.ext'',\r\n* ), ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param mixed $url A single or an array of URLs to which to POST to.\r\n*\r\n* @param array $values An associative array in the form of &lt;i&gt;element =&gt; value&lt;/i&gt; representing the data to\r\n* post in the HTTP "POST" operation.\r\n*\r\n* To post a file, prepend the filename with @ and use the full path. The file type can\r\n* be explicitly specified by following the filename with the type in the format &lt;b&gt;'';type=mimetype''.&lt;/b&gt;\r\n* You should always specify the mime type as most of the times cURL will send the wrong\r\n* mime type...\r\n*\r\n* The &lt;i&gt;Content-Type&lt;/i&gt; header will be set to &lt;b&gt;multipart/form-data.&lt;/b&gt;\r\n*\r\n* @param mixed $callback (Optional) Callback function to be called as soon as a request finishes.\r\n*\r\n* May be given as a string representing a name of an existing function, as an anonymous\r\n* function created on the fly via {@link http://www.php.net/manual/ro/function.create-function.php\r\n* create_function} or, as of PHP 5.3.0, via a {@link http://www.php.net/manual/ro/function.create-function.php\r\n* closure}.\r\n*\r\n* The callback function receives &lt;b&gt;an object&lt;/b&gt; as argument with &lt;b&gt;4 properties&lt;/b&gt;:\r\n*\r\n* - &lt;b&gt;info&lt;/b&gt; - an associative array containing information about the request\r\n* that just finished, as returned by PHP''s\r\n* {@link http://php.net/manual/en/function.curl-getinfo.php curl_getinfo()}\r\n* function;\r\n*\r\n* - &lt;b&gt;headers&lt;/b&gt; - an associative array with 2 items:\r\n*\r\n* &lt;b&gt;- last_request&lt;/b&gt; an array with a single entry containing\r\n* the request headers generated by &lt;i&gt;the last request&lt;/i&gt;; so,\r\n* remember, if there are redirects involved, there will be more\r\n* requests made, but only information from the last one will be\r\n* available; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLINFO_HEADER_OUT&lt;/b&gt; to 0 or FALSE,\r\n* this will be an empty string;\r\n*\r\n* &lt;b&gt;- responses&lt;/b&gt; an array with one or more entries (if there\r\n* are redirects involved) with the response headers of all the\r\n* requests made; if explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_HEADER&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* &lt;i&gt;Unless disabled, each entry in the headers'' array is an\r\n* associative array in the form of property =&gt; value&lt;/i&gt;\r\n*\r\n* - &lt;b&gt;body&lt;/b&gt; - the response of the request (the content of the page at the\r\n* URL).\r\n*\r\n* Unless disabled via the {@link __construct() constructor}, all\r\n* applicable characters will be converted to HTML entities via\r\n* PHP''s {@link http://php.net/manual/en/function.htmlentities.php htmlentities()}\r\n* function, so remember to use PHP''s {@link http://www.php.net/manual/en/function.html-entity-decode.php html_entity_decode()}\r\n* function to do reverse this, if it''s the case;\r\n*\r\n* If "body" is explicitly disabled via the {@link option()}\r\n* method by setting &lt;b&gt;CURLOPT_NOBODY&lt;/b&gt; to 0 or FALSE, this\r\n* will be an empty string;\r\n*\r\n* - &lt;b&gt;response&lt;/b&gt; - the response given by the cURL library as an array with 2\r\n* entries: the first entry represents the result''s code, while\r\n* the second is the textual representation of the code; if the\r\n* request was successful, these values will be &lt;i&gt;array(0,\r\n* CURLE_OK);&lt;/i&gt; consult {@link http://www.php.net/manual/en/function.curl-errno.php#103128\r\n* this list} to see the possible values of this property;\r\n*\r\n* @return null\r\n*/\r\npublic function post($url, $values, $callback = '''')\r\n{\r\n\r\n// if second argument is not an array, trigger an error\r\nif (!is_array($values)) trigger_error(''Second argument to method "post" must be an array!'', E_USER_ERROR);\r\n\r\n// prepare cURL for making a POST\r\n$this-&gt;option(array(\r\nCURLOPT_POST =&gt; 1,\r\nCURLOPT_POSTFIELDS =&gt; http_build_query($values, NULL, ''&amp;''),\r\n));\r\n\r\n// execute request(s)\r\n$this-&gt;_process($url, $callback);\r\n\r\n}\r\n\r\n/**\r\n* Instruct the library to tunnel all requests through a proxy server.\r\n*\r\n* &lt;code&gt;\r\n* // the callback function to be executed for each and every\r\n* // request, as soon as a request finishes\r\n* function mycallback($result) {\r\n*\r\n* // everything went well\r\n* if ($result-&gt;response[1] == CURLE_OK) {\r\n*\r\n* // see all the returned data\r\n* print_r(''&lt;pre&gt;'');\r\n* print_r($result);\r\n*\r\n* // something went wrong\r\n* // ($result still contains all data that could be gathered)\r\n* } else die(''An error occured: '' . $result-&gt;response[1]);\r\n*\r\n* }\r\n*\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the class\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // connect to a proxy server\r\n* // (that''s a random one i got from http://www.hidemyass.com/proxy-list/)\r\n* $curl-&gt;proxy(''187.63.32.250'', ''3128'');\r\n*\r\n* // fetch a page\r\n* $curl-&gt;get(''http://www.somewebsite.com/'', ''mycallback'');\r\n* &lt;/code&gt;\r\n*\r\n* @param string $proxy The HTTP proxy to tunnel requests through.\r\n*\r\n* Can be an URL or an IP address.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and setting &lt;/i&gt;\r\n* &lt;b&gt;CURLOPT_PROXY&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* Setting this argument to FALSE will "unset" all the proxy-related options.\r\n*\r\n* @param string $port (Optional) The port number of the proxy to connect to.\r\n*\r\n* Default is 80.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and setting &lt;/i&gt;\r\n* &lt;b&gt;CURLOPT_PROXYPORT&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param string $username (Optional) The username to be used for the connection to the proxy (if required\r\n* by the proxy)\r\n*\r\n* Default is "" (an empty string)\r\n*\r\n* &lt;i&gt;The username and the password can also be set using the {@link option()} method\r\n* and setting &lt;/i&gt; &lt;b&gt;CURLOPT_PROXYUSERPWD&lt;/b&gt; &lt;i&gt; option to the desired value\r\n* formatted like &lt;/i&gt; &lt;b&gt;[username]:[password]&lt;/b&gt;. .\r\n*\r\n* @param string $password (Optional) The password to be used for the connection to the proxy (if required\r\n* by the proxy)\r\n*\r\n* Default is "" (an empty string)\r\n*\r\n* &lt;i&gt;The username and the password can also be set using the {@link option()} method\r\n* and setting &lt;/i&gt; &lt;b&gt;CURLOPT_PROXYUSERPWD&lt;/b&gt; &lt;i&gt; option to the desired value\r\n* formatted like &lt;/i&gt; &lt;b&gt;[username]:[password]&lt;/b&gt;. .\r\n*\r\n* @return null\r\n*/\r\npublic function proxy($proxy, $port = 80, $username = '''', $password = '''')\r\n{\r\n\r\n// if not disabled\r\nif ($proxy) {\r\n\r\n// set the required options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPPROXYTUNNEL =&gt; 1,\r\nCURLOPT_PROXY =&gt; $proxy,\r\nCURLOPT_PROXYPORT =&gt; $port,\r\n));\r\n\r\n// if a username is also specified\r\nif ($username != '''')\r\n\r\n// set authentication values\r\n$this-&gt;option(CURLOPT_PROXYUSERPWD, $username . '':'' . $password);\r\n\r\n// if disabled\r\n} else\r\n\r\n// unset proxy-related options\r\n$this-&gt;option(array(\r\nCURLOPT_HTTPPROXYTUNNEL =&gt; null,\r\nCURLOPT_PROXY =&gt; null,\r\nCURLOPT_PROXYPORT =&gt; null,\r\n));\r\n\r\n}\r\n\r\n/**\r\n* Requests made to HTTPS servers sometimes require additional configuration, depending on the server. Most of the\r\n* times {@link __construct() the defaults} set by the library will get you through, but if defaults are not working,\r\n* you can set specific options using this method.\r\n*\r\n* &lt;code&gt;\r\n* // include the Zebra_cURL library\r\n* require ''path/to/Zebra_cURL'';\r\n*\r\n* // instantiate the class\r\n* $curl = new Zebra_cURL();\r\n*\r\n* // instruct the library to verify peer''s SSL certificate\r\n* // (ignored if request is not made through HTTPS)\r\n* $curl-&gt;ssl(true);\r\n*\r\n* // fetch a page\r\n* $curl-&gt;get(''https://www.somewebsite.com/'', create_function(''$result'', ''print_r("&lt;pre&gt;"); print_r($result);''));\r\n* &lt;/code&gt;\r\n*\r\n* @param boolean $verify_peer (Optional) Should the peer''s certificate be verified by cURL?\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param integer $verify_host (Optional) Specifies whether or not to check the existence of a common\r\n* name in the SSL peer certificate and that it matches with the provided\r\n* hostname.\r\n*\r\n* - 1 to check the existence of a common name in the SSL peer certificate;\r\n* - 2 to check the existence of a common name and also verify that it\r\n* matches the hostname provided; in production environments the value\r\n* of this option should be kept at 2;\r\n*\r\n* Default is 2\r\n*\r\n* &lt;samp&gt;Support for value 1 removed in cURL 7.28.1&lt;/samp&gt;\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_SSL_VERIFYHOST&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param mixed $file (Optional) An absolute path to a file holding one or more certificates to\r\n* verify the peer with. This only makes sense if &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt;\r\n* is set to TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_CAINFO&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @param mixed $path (Optional) An absolute path to a directory that holds multiple CA\r\n* certificates. This only makes sense if &lt;b&gt;CURLOPT_SSL_VERIFYPEER&lt;/b&gt; is\r\n* set to TRUE.\r\n*\r\n* Default is FALSE.\r\n*\r\n* &lt;i&gt;This option can also be set using the {@link option()} method and\r\n* setting &lt;/i&gt; &lt;b&gt;CURLOPT_CAPATH&lt;/b&gt; &lt;i&gt; option to the desired value&lt;/i&gt;.\r\n*\r\n* @return null\r\n*/\r\npublic function ssl($verify_peer = false, $verify_host = 2, $file = false, $path = false)\r\n{\r\n\r\n// set default options\r\n$this-&gt;option(array(\r\nCURLOPT_SSL_VERIFYPEER =&gt; $verify_peer,\r\nCURLOPT_SSL_VERIFYHOST =&gt; $verify_host,\r\n));\r\n\r\n// if a path to a file holding one or more certificates to verify the peer with was given\r\nif ($file !== false)\r\n\r\n// if file could be found, use it\r\nif (is_file($file)) $this-&gt;option(CURLOPT_CAINFO, $file);\r\n\r\n// if file was not found, trigger an error\r\nelse trigger_error(''File "'' . $file . ''", holding one or more certificates to verify the peer with, was not found!'', E_USER_ERROR);\r\n\r\n// if a directory holding multiple CA certificates was given\r\nif ($path !== false)\r\n\r\n// if folder could be found, use it\r\nif (is_dir($path)) $this-&gt;option(CURLOPT_CAPATH, $path);\r\n\r\n// if folder was not found, trigger an error\r\nelse trigger_error(''Directory "'' . $path . ''", holding one or more CA certificates to verify the peer with, was not found!'', E_USER_ERROR);\r\n\r\n}\r\n\r\n/**\r\n* Returns the set options in "human-readable" format.\r\n*\r\n* @return string Returns the set options in "human-readable" format.\r\n*\r\n* @access private\r\n*/\r\nprivate function _debug()\r\n{\r\n\r\n$result = '''';\r\n\r\n// iterate through the defined constants\r\nforeach(get_defined_constants() as $name =&gt; $number)\r\n\r\n// iterate through the set options\r\nforeach ($this-&gt;options as $index =&gt; $value)\r\n\r\n// if this is a curl-related constant and it is one of the options that are set, add it to the result\r\nif (substr($name, 0, 7) == ''CURLOPT'' &amp;&amp; $number == $index) $result .= $name . '' =&gt; '' . $value . ''&lt;br&gt;'';\r\n\r\n// return the result\r\nreturn $result;\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method to process request and response headers. It parses a string\r\n* containing one or more HTTP headers and returns an array of headers where each entry also contains an associative\r\n* array of &lt;i&gt;name&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; for each row of data in the respective header.\r\n*\r\n* @param string $headers A string containing one or more HTTP headers, where multiple headers are separated by\r\n* a blank line.\r\n*\r\n* @return mixed Returns an array of headers where each entry also contains an associative array of\r\n* &lt;i&gt;name&lt;/i&gt; =&gt; &lt;i&gt;value&lt;/i&gt; for each row of data in the respective header.\r\n*\r\n* If CURLOPT_HEADER is set to FALSE or 0, this method will return an empty string.\r\n*\r\n* @access private\r\n*/\r\nprivate function _parse_headers($headers)\r\n{\r\n\r\n$result = array();\r\n\r\n// if we have nothing to work with\r\nif ($headers != '''') {\r\n\r\n// split multiple headers by blank lines\r\n$headers = preg_split(''/^\\s*$/m'', trim($headers));\r\n\r\n// iterate through the headers\r\nforeach($headers as $index =&gt; $header) {\r\n\r\n$arguments_count = func_num_args();\r\n\r\n// get all the lines in the header\r\n// lines in headers look like [name] : [value]\r\n// also, the first line, the status, does not have a name, so we add the name now\r\npreg_match_all(''/^(.*?)\\:\\s(.*)$/m'', ($arguments_count == 2 ? ''Request Method: '' : ''Status: '') . trim($header), $matches);\r\n\r\n// save results\r\nforeach ($matches[0] as $key =&gt; $value)\r\n\r\n$result[$index][$matches[1][$key]] = trim($matches[2][$key]);\r\n\r\n}\r\n\r\n}\r\n\r\n// return headers as an array\r\nreturn $result;\r\n\r\n}\r\n\r\n/**\r\n* Does the actual work.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _process($urls, $callback = '''')\r\n{\r\n\r\n// if caching is enabled but path doesn''t exist or is not writable\r\nif ($this-&gt;cache !== false &amp;&amp; (!is_dir($this-&gt;cache[''path'']) || !is_writable($this-&gt;cache[''path''])))\r\n\r\n// trigger an error and stop execution\r\ntrigger_error(''Cache path does not exists or is not writable!'', E_USER_ERROR);\r\n\r\n// if callback function doesn''t exists\r\nif ($callback != '''' &amp;&amp; !is_callable($callback))\r\n\r\n// trigger an error and stop execution\r\ntrigger_error(''Callback function "'' . $callback . ''" does not exist!'', E_USER_ERROR);\r\n\r\n$urls = !is_array($urls) ? (array)$urls : $urls;\r\n\r\n// only if we''re making a GET request, and caching is enabled\r\nif (isset($this-&gt;options[CURLOPT_HTTPGET]) &amp;&amp; $this-&gt;options[CURLOPT_HTTPGET] == 1 &amp;&amp; $this-&gt;cache !== false) {\r\n\r\n// iterate through the URLs\r\nforeach ($urls as $url) {\r\n\r\n// get the path to the cache file associated with the URL\r\n$cache_path = rtrim($this-&gt;cache[''path''], ''/'') . ''/'' . md5($url);\r\n\r\n// if cache file exists and is not expired\r\nif (file_exists($cache_path) &amp;&amp; filemtime($cache_path) + $this-&gt;cache[''lifetime''] &gt; time()) {\r\n\r\n// if we have a callback, return the result from the cache file, and feed it as argument to the callback function\r\nif ($callback != '''') call_user_func($callback, unserialize($this-&gt;cache[''compress''] ? gzuncompress(file_get_contents($cache_path)) : file_get_contents($cache_path)));\r\n\r\n// if no cache file, or cache file is expired\r\n} else $this-&gt;_queue[] = $url;\r\n\r\n}\r\n\r\n// if we''re not making a GET request or caching is disabled, we don''t bother with cache: we need to process all the URLs\r\n} else $this-&gt;_queue = $urls;\r\n\r\n// if there are any URLs to process\r\nif (!empty($this-&gt;_queue)) {\r\n\r\n// initialize the multi handle\r\n// this will allow us to process multiple cURL handles in parallel\r\n$this-&gt;_multi_handle = curl_multi_init();\r\n\r\n// queue the first batch of URLs\r\n// (as many as defined by the "threads" property or less if there aren''t as many URLs)\r\n$this-&gt;_queue_requests();\r\n\r\n$running = null;\r\n\r\n// loop\r\ndo {\r\n\r\n// get status update\r\nwhile (($status = curl_multi_exec($this-&gt;_multi_handle, $running)) == CURLM_CALL_MULTI_PERFORM);\r\n\r\n// if no request has finished yet, keep looping\r\nif ($status != CURLM_OK) break;\r\n\r\n// if a request was just completed, we''ll have to find out which one\r\nwhile ($info = curl_multi_info_read($this-&gt;_multi_handle)) {\r\n\r\n// get handle of the completed request\r\n$handle = $info[''handle''];\r\n\r\n// get content associated with the handle\r\n$content = curl_multi_getcontent($handle);\r\n\r\n// get the handle''s ID\r\n$resource_number = preg_replace(''/Resource id #/'', '''', $handle);\r\n\r\n// create a new object in which we will store all the data associated with the handle,\r\n// as properties of this object\r\n$result = new stdClass();\r\n\r\n// get information about the request\r\n$result-&gt;info = curl_getinfo($handle);\r\n\r\n// extend the "info" property with the original URL\r\n$result-&gt;info = array(''original_url'' =&gt; $this-&gt;_info[''fh'' . $resource_number][''original_url'']) + $result-&gt;info;\r\n\r\n// last request headers\r\n$result-&gt;headers[''last_request''] =\r\n\r\n(\r\n\r\n// if CURLINFO_HEADER_OUT is set\r\nisset($this-&gt;options[CURLINFO_HEADER_OUT]) &amp;&amp;\r\n\r\n// if CURLINFO_HEADER_OUT is TRUE\r\n$this-&gt;options[CURLINFO_HEADER_OUT] == 1 &amp;&amp;\r\n\r\n// if we actually have this information\r\nisset($result-&gt;info[''request_header''])\r\n\r\n// extract request headers\r\n) ? $this-&gt;_parse_headers($result-&gt;info[''request_header''], true) : '''';\r\n\r\n// remove request headers information from its previous location\r\nunset($result-&gt;info[''request_header'']);\r\n\r\n// get headers (unless we were explicitly told not to)\r\n$result-&gt;headers[''responses''] = (isset($this-&gt;options[CURLOPT_HEADER]) &amp;&amp; $this-&gt;options[CURLOPT_HEADER] == 1) ?\r\n\r\n$this-&gt;_parse_headers(substr($content, 0, $result-&gt;info[''header_size''])) :\r\n\r\n'''';\r\n\r\n// get output (unless we were explicitly told not to)\r\n$result-&gt;body = (!isset($this-&gt;options[CURLOPT_NOBODY]) || (isset($this-&gt;options[CURLOPT_NOBODY]) &amp;&amp; $this-&gt;options[CURLOPT_NOBODY] == 0)) ?\r\n\r\n((isset($this-&gt;options[CURLOPT_HEADER]) &amp;&amp; $this-&gt;options[CURLOPT_HEADER] == 1) ?\r\n\r\nsubstr($content, $result-&gt;info[''header_size'']) :\r\n\r\n$content) :\r\n\r\n'''';\r\n\r\n// if we have a body, we''re not doing a binary transfer, and _htmlentities is set to TRUE, run htmlentities() on it\r\nif (!empty($result-&gt;body) &amp;&amp; !isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;_htmlentities) $result-&gt;body = htmlentities($result-&gt;body);\r\n\r\n// get CURLs response code and associated message\r\n$result-&gt;response = array($this-&gt;_response_messages[$info[''result'']], $info[''result'']);\r\n\r\n// if caching is enabled and we''re making a GET request\r\nif ($this-&gt;cache !== false &amp;&amp; isset($this-&gt;options[CURLOPT_HTTPGET]) &amp;&amp; $this-&gt;options[CURLOPT_HTTPGET] == 1) {\r\n\r\n// get the path to the cache file associated with the URL\r\n$cache_path = rtrim($this-&gt;cache[''path''], ''/'') . ''/'' . md5($result-&gt;info[''original_url'']);\r\n\r\n// cache the result\r\nfile_put_contents($cache_path, $this-&gt;cache[''compress''] ? gzcompress(serialize($result)) : serialize($result));\r\n\r\n// set rights on the file\r\nchmod($cache_path, intval($this-&gt;cache[''chmod''], 8));\r\n\r\n}\r\n\r\n// call the attached callback function sending our object as argument\r\nif ($callback != '''') call_user_func($callback, $result);\r\n\r\n// if there are more URLs to process, queue the next one\r\nif (!empty($this-&gt;_queue)) $this-&gt;_queue_requests();\r\n\r\n// remove the handle that we finished processing\r\n// this needs to be done *after* we''ve already queued a new URL for processing\r\ncurl_multi_remove_handle($this-&gt;_multi_handle, $handle);\r\n\r\n// make sure the handle gets closed\r\ncurl_close($handle);\r\n\r\n// if we''re downloading something\r\nif (isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;options[CURLOPT_BINARYTRANSFER])\r\n\r\n// close the associated file pointer\r\nfclose($this-&gt;_info[''fh'' . $resource_number][''file_handler'']);\r\n\r\n// remove information associated with this resource\r\nunset($this-&gt;_info[''fh'' . $resource_number]);\r\n\r\n}\r\n\r\n// waits until curl_multi_exec() returns CURLM_CALL_MULTI_PERFORM or until the timeout, whatever happens first\r\nif ($running) curl_multi_select($this-&gt;_multi_handle, 1);\r\n\r\n// as long as there are threads running\r\n} while ($running);\r\n\r\n// close the multi curl handle\r\ncurl_multi_close($this-&gt;_multi_handle);\r\n\r\n}\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method, which takes care of keeping a constant number of requests\r\n* queued, so that as soon as one request finishes another one will instantly take its place, thus making sure that\r\n* the maximum allowed number of parallel threads are running all the time.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _queue_requests()\r\n{\r\n\r\n// get the length of the queue\r\n$queue_length = count($this-&gt;_queue);\r\n\r\n// iterate through the items in the queue\r\nfor ($i = 0; $i &lt; ($queue_length &lt; $this-&gt;threads ? $queue_length : $this-&gt;threads); $i++) {\r\n\r\n// remove first URL from the queue\r\n$url = array_shift($this-&gt;_queue);\r\n\r\n// initialize individual cURL handle with the URL\r\n$handle = curl_init($url);\r\n\r\n// make sure defaults are set\r\n$this-&gt;_set_defaults();\r\n\r\n// get the handle''s ID\r\n$resource_number = preg_replace(''/Resource id #/'', '''', $handle);\r\n\r\n// save the original URL\r\n// (because there may be redirects, and because "curl_getinfo" returns information only about the last\r\n// request, this can be lost otherwise)\r\n$this-&gt;_info[''fh'' . $resource_number][''original_url''] = $url;\r\n\r\n// if we''re downloading something\r\nif (isset($this-&gt;options[CURLOPT_BINARYTRANSFER]) &amp;&amp; $this-&gt;options[CURLOPT_BINARYTRANSFER]) {\r\n\r\n// open a file and save the file pointer\r\n$this-&gt;_info[''fh'' . $resource_number][''file_handler''] = fopen($this-&gt;download_path . basename($url), ''w'');\r\n\r\n// no headers\r\n$this-&gt;option(CURLOPT_HEADER, 0);\r\n\r\n// tell cURL to use the file for streaming the download\r\n$this-&gt;option(CURLOPT_FILE, $this-&gt;_info[''fh'' . $resource_number][''file_handler'']);\r\n\r\n}\r\n\r\n// set options for the handle\r\ncurl_setopt_array($handle, $this-&gt;options);\r\n\r\n// add the normal handle to the multi handle\r\ncurl_multi_add_handle($this-&gt;_multi_handle, $handle);\r\n\r\n}\r\n\r\n}\r\n\r\n/**\r\n* A helper method used by the {@link _process()} method, which sets the default cURL options for each request.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _set_defaults()\r\n{\r\n\r\n// if "CURLOPT_AUTOREFERER" has not been explicitly set, make it TRUE\r\n// (automatically set the "Referer:" field where it follows a "Location:" redirect)\r\nif (!isset($this-&gt;options[CURLOPT_AUTOREFERER])) $this-&gt;option(CURLOPT_AUTOREFERER, 1);\r\n\r\n// if "CURLOPT_COOKIEFILE" has not been explicitly set, set it to the default value\r\n// (name of the file containing the cookie data; if the name is an empty string, no cookies are\r\n// loaded, but cookie handling is still enabled)\r\nif (!isset($this-&gt;options[CURLOPT_COOKIEFILE])) $this-&gt;option(CURLOPT_COOKIEFILE, '''');\r\n\r\n// if "CURLOPT_CONNECTTIMEOUT" has not been explicitly set, set it to the default value\r\n// (the number of seconds to wait while trying to connect)\r\nif (!isset($this-&gt;options[CURLOPT_CONNECTTIMEOUT])) $this-&gt;option(CURLOPT_CONNECTTIMEOUT, 10);\r\n\r\n// if "CURLOPT_FOLLOWLOCATION" has not been explicitly set, make it TRUE\r\n// (follow any "Location:" header that the server sends as part of the HTTP header - note this is recursive\r\n// and that PHP will follow as many "Location:" headers as specified by CURLOPT_MAXREDIRS)\r\nif (!isset($this-&gt;options[CURLOPT_FOLLOWLOCATION])) $this-&gt;option(CURLOPT_FOLLOWLOCATION, 1);\r\n\r\n// if "CURLOPT_HEADER" has not been explicitly set, make it TRUE\r\n// (include the response header(s) as a property of the object given as argument to the callback)\r\nif (!isset($this-&gt;options[CURLOPT_HEADER])) $this-&gt;option(CURLOPT_HEADER, 1);\r\n\r\n// if "CURLINFO_HEADER_OUT" has not been explicitly set, make it TRUE\r\n// (include the last request headers as a property of the object given as argument to the callback)\r\nif (!isset($this-&gt;options[CURLINFO_HEADER_OUT])) $this-&gt;option(CURLINFO_HEADER_OUT, 1);\r\n\r\n// if "CURLOPT_MAXREDIRS" has not been explicitly set, set it to the default value\r\n// (the maximum amount of HTTP redirections to follow; used together with CURLOPT_FOLLOWLOCATION)\r\nif (!isset($this-&gt;options[CURLOPT_MAXREDIRS])) $this-&gt;option(CURLOPT_MAXREDIRS, 50);\r\n\r\n// if "CURLOPT_TIMEOUT" has not been explicitly set, set it to the default value\r\n// (the maximum number of seconds to allow cURL functions to execute)\r\nif (!isset($this-&gt;options[CURLOPT_TIMEOUT])) $this-&gt;option(CURLOPT_TIMEOUT, 30);\r\n\r\n// if "CURLOPT_USERAGENT" has not been explicitly set, use a random user agent\r\n// (some services/websites will block the request if there''s no/invalid user agent)\r\n// note that the user agent will change whenever you run the script!\r\nif (!isset($this-&gt;options[CURLOPT_USERAGENT])) $this-&gt;option(CURLOPT_USERAGENT, $this-&gt;_user_agent());\r\n\r\n// if "CURLOPT_RETURNTRANSFER" is always TRUE\r\n// (return the transfer as a string of instead of outputting it out directly)\r\n$this-&gt;option(CURLOPT_RETURNTRANSFER, 1);\r\n\r\n}\r\n\r\n/**\r\n* Generates a (slightly) random user agent (Internet Explorer 9 or 10, on Windows Vista, 7 or 8, with other extra\r\n* strings)\r\n*\r\n* Some web services will not respond unless a valid user-agent string is provided.\r\n*\r\n* @return null\r\n*\r\n* @access private\r\n*/\r\nprivate function _user_agent()\r\n{\r\n\r\n// browser version: 9 or 10\r\n$version = rand(9, 10);\r\n\r\n// windows version; here are the meanings:\r\n// Windows NT 6.2 -&gt; Windows 8 // can have IE10\r\n// Windows NT 6.1 -&gt; Windows 7 // can have IE9 or IE10\r\n// Windows NT 6.0 -&gt; Windows Vista // can have IE9\r\n$major_version = 6;\r\n\r\n$minor_version =\r\n\r\n// for IE9 Windows can have "0", "1" or "2" as minor version number\r\n$version == 8 || $version == 9 ? rand(0, 2) :\r\n\r\n// for IE10 Windows will have "2" as major version number\r\n2;\r\n\r\n// add some extra information\r\n$extras = rand(0, 3);\r\n\r\n// return the random user agent string\r\nreturn ''Mozilla/5.0 (compatible; MSIE '' . $version . ''.0; Windows NT '' . $major_version . ''.'' . $minor_version . ($extras == 1 ? ''; WOW64'' : ($extras == 2 ? ''; Win64; IA64'' : ($extras == 3 ? ''; Win64; x64'' : ''''))) . '')'';\r\n\r\n}\r\n\r\n}\r\n\r\n?&gt;', '高性能CURL类', '', 'inherit', 'open', 'open', '', '50-autosave', '', '', '2014-04-16 16:04:42', '2014-04-16 08:04:42', '', 50, 'http://afeier.sinaapp.com/?p=53', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(55, 1, '2014-04-26 15:51:28', '2014-04-26 07:51:28', '[gallery]', '科技图片', '', 'publish', 'open', 'open', '', '%e7%a7%91%e6%8a%80%e5%9b%be%e7%89%87', '', '', '2014-04-26 15:51:28', '2014-04-26 07:51:28', '', 0, 'http://afeier.sinaapp.com/?p=55', 0, 'post', '', 0),
(56, 1, '2014-04-26 15:43:11', '2014-04-26 07:43:11', '', '453_41967_591224', '', 'inherit', 'open', 'open', '', '453_41967_591224', '', '', '2014-04-26 15:43:11', '2014-04-26 07:43:11', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41967_591224.gif', 0, 'attachment', 'image/gif', 0),
(57, 1, '2014-04-26 15:43:17', '2014-04-26 07:43:17', '', '453_41968_966951', '', 'inherit', 'open', 'open', '', '453_41968_966951', '', '', '2014-04-26 15:43:17', '2014-04-26 07:43:17', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41968_966951.gif', 0, 'attachment', 'image/gif', 0),
(58, 1, '2014-04-26 15:43:34', '2014-04-26 07:43:34', '', '453_41969_786602', '', 'inherit', 'open', 'open', '', '453_41969_786602', '', '', '2014-04-26 15:43:34', '2014-04-26 07:43:34', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41969_786602.gif', 0, 'attachment', 'image/gif', 0),
(59, 1, '2014-04-26 15:43:45', '2014-04-26 07:43:45', '', '453_41970_167238', '', 'inherit', 'open', 'open', '', '453_41970_167238', '', '', '2014-04-26 15:43:45', '2014-04-26 07:43:45', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41970_167238.gif', 0, 'attachment', 'image/gif', 0),
(60, 1, '2014-04-26 15:43:52', '2014-04-26 07:43:52', '', '453_41972_827102', '', 'inherit', 'open', 'open', '', '453_41972_827102', '', '', '2014-04-26 15:43:52', '2014-04-26 07:43:52', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41972_827102.gif', 0, 'attachment', 'image/gif', 0),
(61, 1, '2014-04-26 15:44:03', '2014-04-26 07:44:03', '', '453_41973_842723', '', 'inherit', 'open', 'open', '', '453_41973_842723', '', '', '2014-04-26 15:44:03', '2014-04-26 07:44:03', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41973_842723.gif', 0, 'attachment', 'image/gif', 0),
(62, 1, '2014-04-26 15:44:14', '2014-04-26 07:44:14', '', '453_41974_783009', '', 'inherit', 'open', 'open', '', '453_41974_783009', '', '', '2014-04-26 15:44:14', '2014-04-26 07:44:14', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41974_783009.gif', 0, 'attachment', 'image/gif', 0),
(63, 1, '2014-04-26 15:44:34', '2014-04-26 07:44:34', '', '453_41975_484327', '', 'inherit', 'open', 'open', '', '453_41975_484327', '', '', '2014-04-26 15:44:34', '2014-04-26 07:44:34', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41975_484327.gif', 0, 'attachment', 'image/gif', 0),
(64, 1, '2014-04-26 15:44:47', '2014-04-26 07:44:47', '', '453_41977_650229', '', 'inherit', 'open', 'open', '', '453_41977_650229', '', '', '2014-04-26 15:44:47', '2014-04-26 07:44:47', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41977_650229.gif', 0, 'attachment', 'image/gif', 0),
(65, 1, '2014-04-26 15:45:03', '2014-04-26 07:45:03', '', '453_41978_341062', '', 'inherit', 'open', 'open', '', '453_41978_341062', '', '', '2014-04-26 15:45:03', '2014-04-26 07:45:03', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41978_341062.gif', 0, 'attachment', 'image/gif', 0),
(66, 1, '2014-04-26 15:45:31', '2014-04-26 07:45:31', '', '453_41979_768976', '', 'inherit', 'open', 'open', '', '453_41979_768976', '', '', '2014-04-26 15:45:31', '2014-04-26 07:45:31', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41979_768976.gif', 0, 'attachment', 'image/gif', 0),
(67, 1, '2014-04-26 15:45:48', '2014-04-26 07:45:48', '', '453_41980_282563', '', 'inherit', 'open', 'open', '', '453_41980_282563', '', '', '2014-04-26 15:45:48', '2014-04-26 07:45:48', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41980_282563.gif', 0, 'attachment', 'image/gif', 0),
(68, 1, '2014-04-26 15:45:59', '2014-04-26 07:45:59', '', '453_41981_415105', '', 'inherit', 'open', 'open', '', '453_41981_415105', '', '', '2014-04-26 15:45:59', '2014-04-26 07:45:59', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41981_415105.gif', 0, 'attachment', 'image/gif', 0),
(69, 1, '2014-04-26 15:46:28', '2014-04-26 07:46:28', '', '453_41982_186347', '', 'inherit', 'open', 'open', '', '453_41982_186347', '', '', '2014-04-26 15:46:28', '2014-04-26 07:46:28', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41982_186347.gif', 0, 'attachment', 'image/gif', 0),
(70, 1, '2014-04-26 15:46:50', '2014-04-26 07:46:50', '', '453_41983_201049', '', 'inherit', 'open', 'open', '', '453_41983_201049', '', '', '2014-04-26 15:46:50', '2014-04-26 07:46:50', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41983_201049.gif', 0, 'attachment', 'image/gif', 0),
(71, 1, '2014-04-26 15:47:18', '2014-04-26 07:47:18', '', '453_41984_522491', '', 'inherit', 'open', 'open', '', '453_41984_522491', '', '', '2014-04-26 15:47:18', '2014-04-26 07:47:18', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41984_522491.gif', 0, 'attachment', 'image/gif', 0),
(72, 1, '2014-04-26 15:47:26', '2014-04-26 07:47:26', '', '453_41986_385675', '', 'inherit', 'open', 'open', '', '453_41986_385675', '', '', '2014-04-26 15:47:26', '2014-04-26 07:47:26', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41986_385675.gif', 0, 'attachment', 'image/gif', 0),
(73, 1, '2014-04-26 15:47:42', '2014-04-26 07:47:42', '', '453_41987_282546', '', 'inherit', 'open', 'open', '', '453_41987_282546', '', '', '2014-04-26 15:47:42', '2014-04-26 07:47:42', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41987_282546.gif', 0, 'attachment', 'image/gif', 0),
(74, 1, '2014-04-26 15:48:07', '2014-04-26 07:48:07', '', '453_41988_691187', '', 'inherit', 'open', 'open', '', '453_41988_691187', '', '', '2014-04-26 15:48:07', '2014-04-26 07:48:07', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41988_691187.gif', 0, 'attachment', 'image/gif', 0),
(75, 1, '2014-04-26 15:48:35', '2014-04-26 07:48:35', '', '453_41989_600254', '', 'inherit', 'open', 'open', '', '453_41989_600254', '', '', '2014-04-26 15:48:35', '2014-04-26 07:48:35', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41989_600254.gif', 0, 'attachment', 'image/gif', 0),
(76, 1, '2014-04-26 15:48:51', '2014-04-26 07:48:51', '', '453_41990_118224', '', 'inherit', 'open', 'open', '', '453_41990_118224', '', '', '2014-04-26 15:48:51', '2014-04-26 07:48:51', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41990_118224.gif', 0, 'attachment', 'image/gif', 0),
(77, 1, '2014-04-26 15:49:18', '2014-04-26 07:49:18', '', '453_41991_625507', '', 'inherit', 'open', 'open', '', '453_41991_625507', '', '', '2014-04-26 15:49:18', '2014-04-26 07:49:18', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41991_625507.gif', 0, 'attachment', 'image/gif', 0),
(78, 1, '2014-04-26 15:49:33', '2014-04-26 07:49:33', '', '453_41992_418777', '', 'inherit', 'open', 'open', '', '453_41992_418777', '', '', '2014-04-26 15:49:33', '2014-04-26 07:49:33', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41992_418777.gif', 0, 'attachment', 'image/gif', 0),
(79, 1, '2014-04-26 15:49:48', '2014-04-26 07:49:48', '', '453_41993_879829', '', 'inherit', 'open', 'open', '', '453_41993_879829', '', '', '2014-04-26 15:49:48', '2014-04-26 07:49:48', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41993_879829.gif', 0, 'attachment', 'image/gif', 0),
(80, 1, '2014-04-26 15:50:02', '2014-04-26 07:50:02', '', '453_41994_711299', '', 'inherit', 'open', 'open', '', '453_41994_711299', '', '', '2014-04-26 15:50:02', '2014-04-26 07:50:02', '', 55, 'http://afeier-wordpress.stor.sinaapp.com/uploads/2014/04/453_41994_711299.gif', 0, 'attachment', 'image/gif', 0),
(81, 1, '2014-04-26 15:42:18', '2014-04-26 07:42:18', '', '科技图片', '', 'inherit', 'open', 'open', '', '55-revision', '', '', '2014-04-26 15:42:18', '2014-04-26 07:42:18', '', 55, 'http://afeier.sinaapp.com/?p=81', 0, 'revision', '', 0),
(82, 1, '2014-04-26 17:45:02', '2014-04-26 09:45:02', '', 'formvalidator规则', '', 'publish', 'open', 'open', '', 'formvalidator%e8%a7%84%e5%88%99', '', '', '2014-04-27 15:33:04', '2014-04-27 07:33:04', '', 0, 'http://afeier.sinaapp.com/?p=82', 0, 'post', '', 0),
(83, 1, '2014-04-26 17:44:27', '2014-04-26 09:44:27', '', '自动草稿', '', 'inherit', 'open', 'open', '', '82-revision', '', '', '2014-04-26 17:44:27', '2014-04-26 09:44:27', '', 82, 'http://afeier.sinaapp.com/?p=83', 0, 'revision', '', 0),
(88, 1, '2014-04-27 16:28:04', '2014-04-27 08:28:04', '正确酿制普通酒\r\n\r\n葡萄酒酿制方法的正确步骤是，首先选择没有病害的葡萄原料，一颗颗进行认真清洗晾干后，再把葡萄弄碎装瓶盖好。葡萄酒里的酒精是靠其中的糖分在酵母菌作用下产生的，放在温暖的地方等待葡萄首次自然发酵，再隔6至18天，换罐或换瓶，进行二次发酵。大家最好使用玻璃材质的广口瓶，二次发酵时间大约为一个星期，经过静置澄清后的葡萄酒，最好把它装进小瓶储藏饮用。需要提醒大家的是，葡萄酒在酿制的过程中，不能加水或加酒。\r\n<div>\r\n<div>\r\n<div>\r\n<div>几年前我在一个熟人那里尝到了她自己酿制的葡萄酒，觉得比在超市买的葡萄酒味道好得多；回家马上买了葡萄就如法炮制。\r\n家庭酿制的红葡萄酒味道纯正，价格便宜，不加任何添加剂和防腐剂，干净没有毒性，喝起来特别放心。这几年，我每到葡萄大量上市的时候，都会酿制红葡萄酒。在我的带动下，我们院子里几乎家家都酿制红葡萄酒，我的同学，朋友也纷纷加入到酿酒队伍之中。今天我又买了十二斤葡萄，酿制葡萄酒。\r\n下面我把酿制红葡萄酒的方法和注意事项介绍一下，有兴趣的朋友不妨一试。</div>\r\n</div>\r\n</div>\r\n</div>\r\n<div>\r\n<h2>食材</h2>\r\n<div>\r\n<ul>\r\n	<li>\r\n<div>一定要在<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a>大量上市的夏天买自然成熟的<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a></div></li>\r\n	<li>\r\n<div>剪刀一把</div></li>\r\n	<li>\r\n<div>大容量盛方<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a>容器（盆）</div></li>\r\n	<li>\r\n<div>高容量瓶子</div></li>\r\n	<li>\r\n<div>盘子</div></li>\r\n	<li>\r\n<div>勺子或网筛、漏瓢更好</div></li>\r\n	<li>\r\n<div>水瓶</div></li>\r\n</ul>\r\n</div>\r\n</div>\r\n<div>\r\n<h2><a name="section-3"></a>步骤/方法</h2>\r\n<div>\r\n<ol>\r\n	<li>\r\n<div>1</div>\r\n<div>一定要在葡萄大量上市的夏天买自然成熟的葡萄，不要买反季节的大棚里栽种的葡萄。要买紫红色的成熟了的葡萄（尝尝味道，很甜的一般是成熟了的）；看看果蒂处，如果是青的，而且味道酸，就可能是打了“催红素”的，这样的葡萄最好不要买。\r\n（站长经验：如果不是集中大量制作的话，买葡萄有个技巧。每天晚上10点左右，到卖葡萄的店铺购买散的葡萄珠，通常很便宜的一般是正常价格低一半左右。我们买来是为了做酒，不是送礼。实际上，葡萄珠更适合我们。）</div>\r\n<div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=1" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=aedffba776c6a7efb926a826cdfbafe9/a71ea8d3fd1f4134dec45b06251f95cad0c85ed2.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n</div></li>\r\n	<li>\r\n<div>2</div>\r\n<div>用剪刀贴近果蒂处把葡萄一个个地剪下来，可以留一点果蒂，以免伤了果皮；不要用手去揪葡萄，揪下葡萄就可能伤到了果皮；凡是伤了果皮的葡萄放到一边去，留着吃，不用它做葡萄酒。\r\n（站长经验：写教程的人都这么说，其实大可不必。当你大批量购买的时候，你就知道有多少伤了果皮的葡萄了。吃是吃不完的。何况本站推荐购买葡萄珠，破皮的更多。） 把葡萄从贴近果蒂的地方剪下来，注意不要伤到果皮</div>\r\n<div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=2" target="_self"><img src="http://h.hiphotos.baidu.com/exp/w=500/sign=853c453b8bd4b31cf03c94bbb7d7276f/42166d224f4a20a489f262bf90529822730ed0de.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n</div></li>\r\n	<li>\r\n<div>3</div>\r\n<div>把剪好的葡萄冲洗干净后用淡盐水浸泡十分钟左右，这是为了去掉葡萄皮上的农药和其他有害物质（前面说到葡萄伤了皮的不要用来酿制葡萄酒，就是害怕浸泡时盐水浸到果肉里面去了，影响葡萄酒的质量）。然后再用清水冲洗一遍，再把水沥干。\r\n（站长经验：不推荐这一步骤，理由是，葡萄皮表面有一层薄薄的白霜，里面含有天然的酵母菌。酵母发酵过程就是制作葡萄酒的过程。破毁了葡萄表皮酵母菌的含量，必定要添加人造酵母。否则发酵不充分，容易引起葡萄酒的变质。） 用盐水浸泡葡萄，约十分钟。将葡萄的水沥干</div>\r\n<div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=3" target="_self"><img src="http://h.hiphotos.baidu.com/exp/w=500/sign=2afcad14103853438ccf8721a312b01f/8435e5dde71190ef6910cca7ce1b9d16fcfa60da.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=4" target="_self"><img src="http://f.hiphotos.baidu.com/exp/w=500/sign=a5c751612df5e0feee1889016c6134e5/6609c93d70cf3bc7cae59394d100baa1cc112ae4.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n</div></li>\r\n	<li>\r\n<div>4</div>\r\n<div>把葡萄倒在盆里，用手把它们一个个捏碎，葡萄皮，葡萄籽和果肉全都留在盆里，然后按照六斤葡萄一斤白糖的比例（喜欢甜一点的可以适当多放一点），搅拌均匀，等白糖完全融化以后装在洗干净的瓶子里。注意，瓶子不要装得太满，要留出三分之一的空间，因为葡萄在发酵的过程中会膨胀，会产生大量的气体，如果装的太满，葡萄酒会溢出来。另外，为了不让外面的空气进去，在瓶盖上最好用塑料袋缠紧。\r\n（站长经验：放糖是为了增加葡萄酒的酒精含量，而不是增加甜度。放糖量要看葡萄的甜度。成熟过度和甜度大的葡萄，放糖量要适量减少，否则增加。过度放糖，拾得其反。也容易引起制作过程中葡萄酒变质、变坏。通常的比例掌握在15%---25%之间。） 这是捏碎了的葡萄。十二斤葡萄我放了两斤半白糖，我喜欢甜一点。这个瓶子是二十斤的容量，可以装十八斤葡萄浆。我今年只做了十二斤葡萄。</div>\r\n<div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=5" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=68f9b61c564e9258a63486eeac83d1d1/c9fcc3cec3fdfc03f39fbdc0d43f8794a5c226e6.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=6" target="_self"><img src="http://f.hiphotos.baidu.com/exp/w=500/sign=bbd5002bf6246b607b0eb274dbf91a35/ac345982b2b7d0a209285ae5cbef76094a369ae0.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n</div></li>\r\n	<li>\r\n<div>5</div>\r\n<div>夏天气温高，过二十一天葡萄酒就酿好了；如果气温低（低于三十度）可以多酿几天。要注意的是，酿的时间越长酒味越浓；葡萄酒酿好以后，放的时间越长，酒味越浓。我不喜欢太浓的葡萄酒，所以即使气温不高，我最多二十六七天就开瓶滤渣。 就用这两件工具过滤葡萄渣。</div>\r\n<div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=7" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=34f3bf622834349b74066e85f9eb1521/7dd98d1001e9390130e1d3467bec54e737d196e2.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=8" target="_self"><img src="http://c.hiphotos.baidu.com/exp/w=500/sign=61c2ec49a18b87d65042ab1f37092860/21a4462309f790524afc19460cf3d7ca7acbd5e3.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\r\n</div></li>\r\n	<li>\r\n<div>6</div>\r\n<div>葡萄酒酿好以后，要把葡萄籽，葡萄皮，还有发了酵的果肉都滤掉，这就要滤渣。滤渣的工具我买的漏瓢（见图）；有的人用纱布过滤也可以；反正因陋就简，家里有什么可以用来去掉渣滓的，就土法上马，物尽其用，留下葡萄酒就行了。要注意的是，滤渣的工具一定要严格消毒，不要把细菌带到酒里面去了哦。</div></li>\r\n	<li>\r\n<div>7</div>\r\n<div>最后，作为过来人的制作经验，滤好的葡萄酒，可以先品尝一下，如果感觉酒味清淡，那说明度数不够，可以再次适量添加糖。进行二次发酵。</div>\r\n<div></div></li>\r\n</ol>\r\n</div>\r\n</div>\r\n<strong>一、葡萄酒的年龄</strong>\r\n\r\n<strong> <wbr> <wbr> <wbr></wbr></wbr></wbr></strong> 葡萄酒是有生命的，所以做酒的葡萄越新鲜越好。\r\n\r\n<wbr> <wbr> <wbr> 普通葡萄酒的<strong>生命周期都在2~3年</strong>。素质好的葡萄酿成的酒寿命要长。</wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> 葡萄酒的生命期限跟人一样要经历出生、幼年、青年、中年、老年和死亡的必然过程，果实成熟就启动了葡萄酒的生命旅程。只不过每种葡萄酒的生命周期都是不同的，短的到半年，长的则有数十年以上，上好的甚至能到百年。</wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> <strong><span style="color: #690120;">红葡萄酒年轻的时候会呈现出紫色或者深紫色</span></strong>，<strong><span style="color: #a61312;">到樱桃红和宝石红说明酒已经开始成熟，</span><span style="color: #a61312;">一般的葡萄酒这时喝最好。</span><span style="color: #a51312;"><span style="color: #790e0d;">如果到了棕红、砖红色，普通的红酒就已经老了</span>，</span></strong>不过好素质的红酒也是相当不错的<strong>。<span style="color: #9c5a3c;">茶色的普通酒基本已经死了</span>，</strong>除了好酒庄特殊的红酒。 <wbr></wbr></wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> 白葡萄酒的色泽也充分表现了葡萄酒的年龄。<span style="color: #e5d102;">白葡萄酒在18~27岁之间就会呈现淡黄色带绿光和淡稻草黄，</span><span style="color: #ffc20e;">28~35岁会出现稻草黄、金色，如果是普通的干白就应该喝掉了</span><span style="color: #d4a10b;">。琥珀色和土黄色的白葡萄酒就已经走到生命的终点，不好喝了；（我酿的白葡萄酒不光是这个颜色，且已经变醋了）</span>如果是甜性白酒就不一样了，这正是成熟的巅峰。</wbr></wbr></wbr>\r\n\r\n葡萄酒的寿命还与葡萄酒的存放相关，如木塞一定要同酒接触，防止酒塞干了酒瓶里进了空气使酒氧化，存放的温度要保持<strong>在13~16 ℃度之间才能使酒正常成长。\r\n</strong>\r\n\r\n&nbsp;\r\n\r\n<strong>二、如何防止自酿葡萄酒发霉</strong>\r\n\r\n1、选择葡萄原料时要尽量去除烂果、霉变果、裂果。\r\n2、用清水清洗葡萄后，<strong>一定要“风干”</strong>葡萄,不能有水份。\r\n3、发酵时温度最好是<strong>26到28度</strong>之间,<strong>发酵需要快速启动。\r\n4、一次发酵7到10天后,及时过滤杂物（葡萄皮、籽、酒泥等）。\r\n5、二次发酵1个月后,及时过滤酒泥并将存放酒的罐子一定要装满（防止氧化）\r\n6、以后定期3到5个月倒罐一次,清除酒泥并将存放酒的罐子装满。\r\n7、非专用酿酒葡萄酿造的葡萄酒,最好能在二次发酵完成4个月后至1年内喝完。\r\n8、一次发酵过程中,一旦感觉发酵停止,可以再加一点点糖进去，看是否酵母菌分解完成,尽量使葡萄中的酵母发酵完，这样酒的酒精度会高一些（最好可以达到12度）,便于日后长时间储存。</strong>\r\n\r\n<strong> <wbr></wbr></strong>\r\n\r\n三、怎样使葡萄酒不变酸？\r\n\r\n1、采用巴氏灭菌法：\r\n只要加热在55～60℃时，便可以杀死使酒酸败的微生物，从而延长酒的储存期，。\r\n\r\n<wbr> <wbr> <wbr> 巴斯德杀菌就是不破坏物质而所采取的低温杀菌。大多都是用80度隔水加热杀菌30分钟，因为酵母发酵本身是厌氧反应，发酵大至上7~10天。过程中不要打开来，不过要泄气，因为反应中也会产生二氧化碳，而发酵完后要冷藏起来，使酵母死亡，而打开后也要放冷藏。因为酒精在有氧的环境会与醋酸菌反应成醋酸，市上的水果醋就是如此来的。</wbr></wbr></wbr>\r\n\r\n2、酿酒过程中尽量减少与空气的接触\r\n\r\n<wbr> <wbr> <wbr> 葡萄酵母在适当的温度下，自发进行发酵把葡萄汁中的糖分转化成酒，随着发酵的进行，酒精不断增多，葡萄汁中的糖分不断减少，到发酵终止。这样葡萄汁就变成了葡萄酒。在后期存放过程中，还会发生一些复杂的物理化学变化，比如酒精和葡萄汁中的果酸转变成有机酯类，使酒具有香味。糖发酵变成酒的化学反应是厌氧反应，即不需要氧气参与的反应。</wbr></wbr></wbr>\r\n\r\n3、醋酸菌的存在；酒精一般条件下是不会自发转变成醋的，但是在有醋酸菌的条件下酒精变成醋就很自然了。\r\n\r\n4、有氧气参与反应；由于醋酸菌天然栖息于植物体表面，只要存在含糖物质，就能发现与酵母菌一起生长的醋酸细菌。我们在酿酒过程中除了严格消毒，注意清洁，已减少醋酸菌的污染以外，很难从根本上杜绝醋酸菌的存在。但是我们只要隔绝空气，醋酸菌就无法兴风作浪，酒精也不会变醋了。而隔绝空气对糖变酒的发酵过程没有任何不良影响。\r\n\r\n<wbr>\r\n四、还有很多种原因也可使葡萄酒变酸：</wbr>\r\n\r\n1、葡萄洗后表皮的<strong>水没晾干</strong>污染了；\r\n2、做酒的<strong>工具没洗干净，晾干；\r\n3、发酵过度（温度过高、时间过长）；\r\n</strong>4、最常见的是<strong>酿好酒后没有及时滤渣，酒渣继续发酵成醋。\r\n5、在取用时不加小心污染了。\r\n<wbr> <wbr>\r\n</wbr></wbr></strong>已经酸了怎么办？ <wbr> <wbr>\r\n1、先把渣滤去，发酵的速度会减缓。\r\n2、滤后把酒液蒸一蒸，高温杀灭发酵菌群终止发酵，蒸的时候可以加点冰糖调甜它，按自己口味加。注意蒸的时候不宜搅动，搅过头会让酒香散失。蒸过的酒浓度更高。放凉后再喝，酒体更醇厚，酒香变化微妙，如果糖与酸调得合适，家酿酒真就很象冰酒，只是没冰酒爽口。\r\n3、如果真的已经成了醋（没酒香只有酸气，成了葡萄果醋），那也不用蒸了，那些花青素啊葡萄籽素什么的抗氧化成分不流失，滤完冰起来，喝时调甜：推荐蜂蜜水或冰糖玫瑰花茶，自制醋饮料时尚养容啊还不怕醉。葡萄醋用来做菜也很好，炖肉易酥烂，做凉拌则有果味清香，不要糟蹋了。</wbr></wbr>\r\n\r\n&nbsp;\r\n\r\n五、葡萄醋对人也是有好处的\r\n\r\n1、心脑血管病人经常饮用，能软化血管，不容易造成血栓与心肌梗塞．\r\n2、能够减少肠内不良细菌数量，帮助有益细菌繁殖，\r\n3、消除皮肤色斑。此外，葡萄醋内的多糖、钾离子能降低体内酸性，从内缓解疲劳，增强体力。\r\n\r\n可以用来搭配特级初榨橄榄油烹饪、做色拉、凉拌、蘸椒盐牛排、白肉、鸡等来享用，用量仅是普通醋的十分之一。', '葡萄酒', '', 'publish', 'open', 'open', '', '%e8%91%a1%e8%90%84%e9%85%92', '', '', '2014-04-27 16:35:36', '2014-04-27 08:35:36', '', 0, 'http://afeier.sinaapp.com/?p=88', 0, 'post', '', 0),
(84, 1, '2014-04-26 17:46:26', '2014-04-26 09:46:26', '<table>\n<tbody>\n<tr>\n<td>$("#old_password").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"密码应该为6-20位之间",oncorrect:"旧密码输入正确"}).inputValidator({min:6,max:20,onerror:"密码应该为6-20位之间"}).ajaxValidator({</td>\n</tr>\n<tr>\n<td></td>\n<td>type : "get",</td>\n</tr>\n<tr>\n<td></td>\n<td>url : "",</td>\n</tr>\n<tr>\n<td></td>\n<td>data :"m=admin&amp;c=admin_manage&amp;a=public_password_ajx",</td>\n</tr>\n<tr>\n<td></td>\n<td>datatype : "html",</td>\n</tr>\n<tr>\n<td></td>\n<td>async:''false'',</td>\n</tr>\n<tr>\n<td></td>\n<td>success : function(data){</td>\n</tr>\n<tr>\n<td></td>\n<td>if( data == "1" )</td>\n</tr>\n<tr>\n<td></td>\n<td>{</td>\n</tr>\n<tr>\n<td></td>\n<td>return true;</td>\n</tr>\n<tr>\n<td></td>\n<td>}</td>\n</tr>\n<tr>\n<td></td>\n<td>else</td>\n</tr>\n<tr>\n<td></td>\n<td>{</td>\n</tr>\n<tr>\n<td></td>\n<td>return false;</td>\n</tr>\n<tr>\n<td></td>\n<td>}</td>\n</tr>\n<tr>\n<td></td>\n<td>},</td>\n</tr>\n<tr>\n<td></td>\n<td>buttons: $("#dosubmit"),</td>\n</tr>\n<tr>\n<td></td>\n<td>onerror : "旧密码输入错误",</td>\n</tr>\n<tr>\n<td></td>\n<td>onwait : "请稍候..."</td>\n</tr>\n<tr>\n<td></td>\n<td>});</td>\n</tr>\n<tr>\n<td></td>\n<td>$("#new_password").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"密码应该为6-20位之间"}).inputValidator({min:6,max:20,onerror:"密码应该为6-20位之间"});</td>\n</tr>\n<tr>\n<td></td>\n<td>$("#new_pwdconfirm").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"请输入两次密码不同。",oncorrect:"密码输入一致"}).compareValidator({desid:"new_password",operateor:"=",onerror:"请输入两次密码不同。"});</td>\n</tr>\n</tbody>\n</table>', 'formvalidator规则', '', 'inherit', 'open', 'open', '', '82-autosave', '', '', '2014-04-26 17:46:26', '2014-04-26 09:46:26', '', 82, 'http://afeier.sinaapp.com/?p=84', 0, 'revision', '', 0),
(85, 1, '2014-04-27 15:32:22', '2014-04-27 07:32:22', '经常看到很多人，在争论linux/bsd下面有那么多的防火墙，我们选择谁呢，其实咱们经常碰到的开源防火墙（那些由BSD基础定制开发的商业防火墙ciso,jump,华为等）不在此列）有：iptables,ipfilter,pf,ipfw(panabit7层)，看起来很多其实我们完全没有必要恐慌，如果您有钱完全可以去买ciso,华为等品牌防火墙出了事可以找个背黑锅的，反正不是花咱们自己的钱，还能拿到他们的回扣。。。，这样的话你就不用往下面看了，因为你不用为选择什么防火墙烦恼了呵呵。\r\n<div>   其实对于一般的中小企业，总出口带宽不超过千兆的话，完全不需要卖那些价格高高在上，性能低低在下的东东，编程时门学问，核心库算法都是百年不变的东西（基础都是数学，过时很难），有很多商家很聪明，会借用开源bsd,linux自己改改再加上一个定制的1Ｕ，半U机箱装上一个赛扬或者更低能的嵌入式cpu就说是完全自主开发，线性千兆性能了（就不告诉你倒是多大的包的性能测试，你问他64位小包性能，他就要哭了）。当然网络过滤性能是软件与硬件的共同结果，如果您企业的带宽超过了千兆，那就没办法省钱了，还是去买ciso,jump等大企业的mips多核心+专门网络加速模块防火墙吧，我想最少也要百来万把，不过您的实力肯定是小意思了。</div>\r\n<div>  好了废话不说了，最近由于项目原因，研究了下防火墙，我们网站的第一道防线，浅谈下个人对iptables,ipfilter,pf,ipfw的个人看法吧，仅供参考，请谨慎部署，出问题与本人无关！</div>\r\n<div>   1,iptables,linux自带的防火墙，对于这个防火墙本人不看好，首先我是不会拿linux来做防火墙的，为什么呢，很简单linux核心开发者太多，无组织，无纪律，隔山查尔的更新kernel,最新版的kernel都到3.6了，而我们的debian,centos才可怜的2.6.32可悲啊，不过我欣赏debian,centos发行版，为了稳定，还是不要冒进，linux核心都不稳定，选择iptables就是一个玩具了！动不动冒一个linux溢出漏洞，所有设置都是枉然，建议还是老老实实，用linux当后端的web，数据库用吧，当然如果你非要用，我那么我还是建议你使用linux的专门的防火墙发行版-IPCop ，毕竟如果安全要求不高话，还是可以用用的，毕竟linux的性能，iptables-nat转发性能大家都知道很高的，而且还有一个ly7项目，可以把iptables扩展到应用层去，不过你可千万不要还用ly7官网的特征码了，那个太老了，以至于panabit都在笑了，其实大家完全可以学习ly7的7层特征码正则表达式（不难就是用正则表达式过滤匹配分析数据包），自己通过，科莱分析软件，tcpdump等包分析软件书写自己的特诊吗，当然了这需要长时间的测试磨合了。</div>\r\n<div>   2，下面就来说说我们可爱的freebsd上的几款防火墙其中最让我纠结就是ipfilter,ipfw了，这两个家伙，一个是普通过滤性能强悍-ipfw,一个是nat转发性能强悍-ipfilter（由于版权协议，已经被openbsd抛弃了，这也就诞生了pf),ipfw是freebsd的亲生防火墙，在以前很老的版本中nat模式还不是核心模式，所以转发性能很低下，当然现在已经是核心模式了，而且配置简单明了，而且有强人写了linux-iptables中的ly7山寨bsd7层过滤模块-ipfw-classly借用了linux-ly7的正则特征码,说白了就是linux-ly7的的bsd实现，只用我们常用到的pfsense,7层过滤功能就是调用了bsd-ly7模块，当然也是落后的7层过滤特征码，需要自己写新的，还有那个笑使用linux-ly7的panabit,其实他也是在使用ipfw-classly只是人家把所有的软件名字全部改掉了，不叫ipfw也不叫ipfw-classly了，（全完自主开发嘛），但是他们还是做了一点事情的就是设计了一个很漂亮的web前台，和自己经常性的编写最新的ly7特征码，以跟上腾讯QQ，迅雷的脚步，可惜啊，那些都是加密的，本人是没有办法破解了，但是加密了怎么能开源呢！对于ipfw我的看法是如果你不需要防护墙来实现 F5一样的集群负载均衡的话，可以使用，因为他缺乏pf的地址池轮训功能，只能说是一个功能和linux-iptables差不多的防火墙吧，我给他打70分吧。。。</div>\r\n<div>  至于ipfilter除了nat转发性能蛮好外，没有其他特别的功能，甚至还没有人开发7层过滤模块，当然如果您的防火墙后面保护的是网吧游戏电脑，可以有效的降低ping延迟，对于网吧来说是不不错的选择，不需要什么负载均衡啊，地址池，7层过滤等功能，是不不错的选择，建议选择基于freebsd的m0n0wall防火墙系统。。。打个60分吧。</div>\r\n<div>  下面我们来研究下我们的pf防火墙吧，这个东东原来是openbsd中用来替代ipfilter的防火墙，和openbsd配合简直是完美的集合，加上openbsd的relayd可以实现和F5(听说要几十万把）的防火墙负载均衡功能，pf有着很多很使用的功能，ip地址池的强大配置，syn代理握手，方便的包整流，流控，状态表控制，网关认证等等除了不支持7层过滤外，其他防火墙有的他都有，其他防火墙没有的他也有，全完能满足咱们的各种变态的要求，但是唯一的不好就是openbsd虽然安全但是，硬件支持不好，其中导致的最让我崩溃的就是没有不支持intel网卡的polling功能，遇到64小包，syn攻击等流量攻击直接挂住，定死！好在freebsd是一个研究，学者性的操作系统，他在偷学linux的同时，还在偷学其他的BSD,他很好的把pf从openbsd中移植了过来，而且功能语法知道freebsd9.0基本没发上变化，（freebsd是移植openbsd4.5-pf，openbsd此前经行了性能最大调整版本)，当我们遇到非常大的syn小包攻击，导致 cpu中断崩溃时我们可以马上开启网卡的polling模式，虽然性能下降了点，不过好歹不怕syn攻击了，我的最后选择就是freebsd+pf作为我们的前端防火墙，把freebsd的swap关闭，所有系统加载到内存中区运行，精简内核，删除所有无用的程序，把freebsd运行等级提高到2，保护内核，及防火墙规则组件，如果你不是很熟悉pf规则编写，或者喜欢图形化，可以选择pfsense2.01-freebsd8.1+pf的防火墙系统。我给pf打80分吧，毕竟性能不算最高的，建议部署在千兆带宽以内，500台机器左右的机房。</div>\r\n<div>   好了，防火墙选择好了，随便谈谈diy防火墙的硬件选择及要求:</div>\r\n<div>1,cpu,我们要选择多核心最少2个核心，最关键的还有频率，由于x86cpu是通用处理器，完成一个数据包的过滤需要很大的中断开销，已经非常多的指令执行（大概完整的处理一个数据包需要大约14000条指令)，导致了其处理64位小包的能里低下，没办法我大概的算了一下，要使用x86处理器达到小包线速处理千兆带宽流量，需要处理器频率达到7G左右，但是除非你超频，否则我建议最少不要小于3.2G频率吧，而且最好选择intel-cpu支持能配合intel-网卡，更好的支持发送，接受列队功能，miix中断等专门的网络优化技术。\r\n<div>  2，网卡不用多说了，唯一的选择intel网卡。而且要处理千兆的话最好是两块intrel网卡绑定聚合mode=0,这个我就不说了，linux配置大家都会吧，接口一定是pci-e接口，芯片组嘛5257系列了吧，最好支持队列，支持miix2代中断。把所有的外部网卡中断都cpuset 到第一个cpu上，可有效的防止ddos中断是的cpu切换开销，当然了你要知道那块网卡是外部的，通过vmstat -i查看中断号，你懂得。</div>\r\n<div>  3，不要硬盘，随便整一个dom盘，就可以了，反正只是作为启动用，一旦freebsd启动所有的东东都会加入到 内存中运行！关闭swap.</div>\r\n<div>  4,内存这个东东，越大越好罗。最少2G-4G吧， 如果你图稳定就选择32位的freebsd,内存嘛 有个2G就好了，一般来说一个连接占用1K左右内存，10M内存处理1万个连接吧。处理百万并发肯定要2G罗呵呵</div>\r\n<div>  5，其他的就没什么要求了，想耗电少点还是选择一块迷你小板吧，把所有东东塞进一个火柴盒子里面，就算是专业的千兆硬件防火墙了（开个十万八万的越高越有人买，越便宜越没人要）。</div>\r\n<div>   好了，大概的说了说。大家有时间多看看openbsd-pf手册，pfsense手册，研究研究，一定会有收获的。最后希望netbsd6.0赶紧出release,想用用他的新型防火墙 npf官方介绍对多核心有优化期待中。。。。。</div>\r\n</div>', 'linux/bsd四大防火墙我们选择谁', '', 'publish', 'open', 'open', '', 'linuxbsd%e5%9b%9b%e5%a4%a7%e9%98%b2%e7%81%ab%e5%a2%99%e6%88%91%e4%bb%ac%e9%80%89%e6%8b%a9%e8%b0%81', '', '', '2014-04-27 15:32:22', '2014-04-27 07:32:22', '', 0, 'http://afeier.sinaapp.com/?p=85', 0, 'post', '', 0),
(86, 1, '2014-04-27 15:31:49', '2014-04-27 07:31:49', '经常看到很多人，在争论linux/bsd下面有那么多的防火墙，我们选择谁呢，其实咱们经常碰到的开源防火墙（那些由BSD基础定制开发的商业防火墙ciso,jump,华为等）不在此列）有：iptables,ipfilter,pf,ipfw(panabit7层)，看起来很多其实我们完全没有必要恐慌，如果您有钱完全可以去买ciso,华为等品牌防火墙出了事可以找个背黑锅的，反正不是花咱们自己的钱，还能拿到他们的回扣。。。，这样的话你就不用往下面看了，因为你不用为选择什么防火墙烦恼了呵呵。\n<div>   其实对于一般的中小企业，总出口带宽不超过千兆的话，完全不需要卖那些价格高高在上，性能低低在下的东东，编程时门学问，核心库算法都是百年不变的东西（基础都是数学，过时很难），有很多商家很聪明，会借用开源bsd,linux自己改改再加上一个定制的1Ｕ，半U机箱装上一个赛扬或者更低能的嵌入式cpu就说是完全自主开发，线性千兆性能了（就不告诉你倒是多大的包的性能测试，你问他64位小包性能，他就要哭了）。当然网络过滤性能是软件与硬件的共同结果，如果您企业的带宽超过了千兆，那就没办法省钱了，还是去买ciso,jump等大企业的mips多核心+专门网络加速模块防火墙吧，我想最少也要百来万把，不过您的实力肯定是小意思了。</div>\n<div>  好了废话不说了，最近由于项目原因，研究了下防火墙，我们网站的第一道防线，浅谈下个人对iptables,ipfilter,pf,ipfw的个人看法吧，仅供参考，请谨慎部署，出问题与本人无关！</div>\n<div>   1,iptables,linux自带的防火墙，对于这个防火墙本人不看好，首先我是不会拿linux来做防火墙的，为什么呢，很简单linux核心开发者太多，无组织，无纪律，隔山查尔的更新kernel,最新版的kernel都到3.6了，而我们的debian,centos才可怜的2.6.32可悲啊，不过我欣赏debian,centos发行版，为了稳定，还是不要冒进，linux核心都不稳定，选择iptables就是一个玩具了！动不动冒一个linux溢出漏洞，所有设置都是枉然，建议还是老老实实，用linux当后端的web，数据库用吧，当然如果你非要用，我那么我还是建议你使用linux的专门的防火墙发行版-IPCop ，毕竟如果安全要求不高话，还是可以用用的，毕竟linux的性能，iptables-nat转发性能大家都知道很高的，而且还有一个ly7项目，可以把iptables扩展到应用层去，不过你可千万不要还用ly7官网的特征码了，那个太老了，以至于panabit都在笑了，其实大家完全可以学习ly7的7层特征码正则表达式（不难就是用正则表达式过滤匹配分析数据包），自己通过，科莱分析软件，tcpdump等包分析软件书写自己的特诊吗，当然了这需要长时间的测试磨合了。</div>\n<div>   2，下面就来说说我们可爱的freebsd上的几款防火墙其中最让我纠结就是ipfilter,ipfw了，这两个家伙，一个是普通过滤性能强悍-ipfw,一个是nat转发性能强悍-ipfilter（由于版权协议，已经被openbsd抛弃了，这也就诞生了pf),ipfw是freebsd的亲生防火墙，在以前很老的版本中nat模式还不是核心模式，所以转发性能很低下，当然现在已经是核心模式了，而且配置简单明了，而且有强人写了linux-iptables中的ly7山寨bsd7层过滤模块-ipfw-classly借用了linux-ly7的正则特征码,说白了就是linux-ly7的的bsd实现，只用我们常用到的pfsense,7层过滤功能就是调用了bsd-ly7模块，当然也是落后的7层过滤特征码，需要自己写新的，还有那个笑使用linux-ly7的panabit,其实他也是在使用ipfw-classly只是人家把所有的软件名字全部改掉了，不叫ipfw也不叫ipfw-classly了，（全完自主开发嘛），但是他们还是做了一点事情的就是设计了一个很漂亮的web前台，和自己经常性的编写最新的ly7特征码，以跟上腾讯QQ，迅雷的脚步，可惜啊，那些都是加密的，本人是没有办法破解了，但是加密了怎么能开源呢！对于ipfw我的看法是如果你不需要防护墙来实现 F5一样的集群负载均衡的话，可以使用，因为他缺乏pf的地址池轮训功能，只能说是一个功能和linux-iptables差不多的防火墙吧，我给他打70分吧。。。</div>\n<div>  至于ipfilter除了nat转发性能蛮好外，没有其他特别的功能，甚至还没有人开发7层过滤模块，当然如果您的防火墙后面保护的是网吧游戏电脑，可以有效的降低ping延迟，对于网吧来说是不不错的选择，不需要什么负载均衡啊，地址池，7层过滤等功能，是不不错的选择，建议选择基于freebsd的m0n0wall防火墙系统。。。打个60分吧。</div>\n<div>  下面我们来研究下我们的pf防火墙吧，这个东东原来是openbsd中用来替代ipfilter的防火墙，和openbsd配合简直是完美的集合，加上openbsd的relayd可以实现和F5(听说要几十万把）的防火墙负载均衡功能，pf有着很多很使用的功能，ip地址池的强大配置，syn代理握手，方便的包整流，流控，状态表控制，网关认证等等除了不支持7层过滤外，其他防火墙有的他都有，其他防火墙没有的他也有，全完能满足咱们的各种变态的要求，但是唯一的不好就是openbsd虽然安全但是，硬件支持不好，其中导致的最让我崩溃的就是没有不支持intel网卡的polling功能，遇到64小包，syn攻击等流量攻击直接挂住，定死！好在freebsd是一个研究，学者性的操作系统，他在偷学linux的同时，还在偷学其他的BSD,他很好的把pf从openbsd中移植了过来，而且功能语法知道freebsd9.0基本没发上变化，（freebsd是移植openbsd4.5-pf，openbsd此前经行了性能最大调整版本)，当我们遇到非常大的syn小包攻击，导致 cpu中断崩溃时我们可以马上开启网卡的polling模式，虽然性能下降了点，不过好歹不怕syn攻击了，我的最后选择就是freebsd+pf作为我们的前端防火墙，把freebsd的swap关闭，所有系统加载到内存中区运行，精简内核，删除所有无用的程序，把freebsd运行等级提高到2，保护内核，及防火墙规则组件，如果你不是很熟悉pf规则编写，或者喜欢图形化，可以选择pfsense2.01-freebsd8.1+pf的防火墙系统。我给pf打80分吧，毕竟性能不算最高的，建议部署在千兆带宽以内，500台机器左右的机房。</div>\n<div>   好了，防火墙选择好了，随便谈谈diy防火墙的硬件选择及要求:</div>\n<div>1,cpu,我们要选择多核心最少2个核心，最关键的还有频率，由于x86cpu是通用处理器，完成一个数据包的过滤需要很大的中断开销，已经非常多的指令执行（大概完整的处理一个数据包需要大约14000条指令)，导致了其处理64位小包的能里低下，没办法我大概的算了一下，要使用x86处理器达到小包线速处理千兆带宽流量，需要处理器频率达到7G左右，但是除非你超频，否则我建议最少不要小于3.2G频率吧，而且最好选择intel-cpu支持能配合intel-网卡，更好的支持发送，接受列队功能，miix中断等专门的网络优化技术。\n<div>  2，网卡不用多说了，唯一的选择intel网卡。而且要处理千兆的话最好是两块intrel网卡绑定聚合mode=0,这个我就不说了，linux配置大家都会吧，接口一定是pci-e接口，芯片组嘛5257系列了吧，最好支持队列，支持miix2代中断。把所有的外部网卡中断都cpuset 到第一个cpu上，可有效的防止<a href="http://www.myhack58.com/Article/60/sort096/Article_096_1.htm" target="_blank">ddos</a>中断是的cpu切换开销，当然了你要知道那块网卡是外部的，通过vmstat -i查看中断号，你懂得。</div>\n<div>  3，不要硬盘，随便整一个dom盘，就可以了，反正只是作为启动用，一旦freebsd启动所有的东东都会加入到 内存中运行！关闭swap.</div>\n<div>  4,内存这个东东，越大越好罗。最少2G-4G吧， 如果你图稳定就选择32位的freebsd,内存嘛 有个2G就好了，一般来说一个连接占用1K左右内存，10M内存处理1万个连接吧。处理百万并发肯定要2G罗呵呵</div>\n<div>  5，其他的就没什么要求了，想耗电少点还是选择一块迷你小板吧，把所有东东塞进一个火柴盒子里面，就算是专业的千兆硬件防火墙了（开个十万八万的越高越有人买，越便宜越没人要）。</div>\n<div>   好了，大概的说了说。大家有时间多看看openbsd-pf手册，pfsense手册，研究研究，一定会有收获的。最后希望netbsd6.0赶紧出release,想用用他的新型防火墙 npf官方介绍对多核心有优化期待中。。。。。</div>\n</div>', '', '', 'inherit', 'open', 'open', '', '85-revision', '', '', '2014-04-27 15:31:49', '2014-04-27 07:31:49', '', 85, 'http://afeier.sinaapp.com/?p=86', 0, 'revision', '', 0),
(87, 1, '2014-04-26 17:45:02', '2014-04-26 09:45:02', '<table>\r\n<tbody>\r\n<tr>\r\n<td>$("#old_password").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"密码应该为6-20位之间",oncorrect:"旧密码输入正确"}).inputValidator({min:6,max:20,onerror:"密码应该为6-20位之间"}).ajaxValidator({</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>type : "get",</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>url : "",</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>data :"m=admin&amp;c=admin_manage&amp;a=public_password_ajx",</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>datatype : "html",</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>async:''false'',</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>success : function(data){</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>if( data == "1" )</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>{</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>return true;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>}</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>else</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>{</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>return false;</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>}</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>},</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>buttons: $("#dosubmit"),</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>onerror : "旧密码输入错误",</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>onwait : "请稍候..."</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>});</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>$("#new_password").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"密码应该为6-20位之间"}).inputValidator({min:6,max:20,onerror:"密码应该为6-20位之间"});</td>\r\n</tr>\r\n<tr>\r\n<td></td>\r\n<td>$("#new_pwdconfirm").formValidator({empty:true,onshow:"不修改密码请留空。",onfocus:"请输入两次密码不同。",oncorrect:"密码输入一致"}).compareValidator({desid:"new_password",operateor:"=",onerror:"请输入两次密码不同。"});</td>\r\n</tr>\r\n</tbody>\r\n</table>', 'formvalidator规则', '', 'inherit', 'open', 'open', '', '82-revision-2', '', '', '2014-04-26 17:45:02', '2014-04-26 09:45:02', '', 82, 'http://afeier.sinaapp.com/?p=87', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(89, 1, '2014-04-27 16:27:56', '2014-04-27 08:27:56', '<strong>一、葡萄酒的年龄</strong>\n\n<strong> <wbr> <wbr> <wbr></wbr></wbr></wbr></strong> 葡萄酒是有生命的，所以做酒的葡萄越新鲜越好。\n\n<wbr> <wbr> <wbr> 普通葡萄酒的<strong>生命周期都在2~3年</strong>。素质好的葡萄酿成的酒寿命要长。</wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> 葡萄酒的生命期限跟人一样要经历出生、幼年、青年、中年、老年和死亡的必然过程，果实成熟就启动了葡萄酒的生命旅程。只不过每种葡萄酒的生命周期都是不同的，短的到半年，长的则有数十年以上，上好的甚至能到百年。</wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> <strong><span style="color: #690120;">红葡萄酒年轻的时候会呈现出紫色或者深紫色</span></strong>，<strong><span style="color: #a61312;">到樱桃红和宝石红说明酒已经开始成熟，</span><span style="color: #a61312;">一般的葡萄酒这时喝最好。</span><span style="color: #a51312;"><span style="color: #790e0d;">如果到了棕红、砖红色，普通的红酒就已经老了</span>，</span></strong>不过好素质的红酒也是相当不错的<strong>。<span style="color: #9c5a3c;">茶色的普通酒基本已经死了</span>，</strong>除了好酒庄特殊的红酒。 <wbr></wbr></wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> 白葡萄酒的色泽也充分表现了葡萄酒的年龄。<span style="color: #e5d102;">白葡萄酒在18~27岁之间就会呈现淡黄色带绿光和淡稻草黄，</span><span style="color: #ffc20e;">28~35岁会出现稻草黄、金色，如果是普通的干白就应该喝掉了</span><span style="color: #d4a10b;">。琥珀色和土黄色的白葡萄酒就已经走到生命的终点，不好喝了；（我酿的白葡萄酒不光是这个颜色，且已经变醋了）</span>如果是甜性白酒就不一样了，这正是成熟的巅峰。</wbr></wbr></wbr>\n\n葡萄酒的寿命还与葡萄酒的存放相关，如木塞一定要同酒接触，防止酒塞干了酒瓶里进了空气使酒氧化，存放的温度要保持<strong>在13~16 ℃度之间才能使酒正常成长。\n</strong>\n\n<wbr></wbr>\n\n<strong>二、如何防止自酿葡萄酒发霉</strong>\n\n1、选择葡萄原料时要尽量去除烂果、霉变果、裂果。\n2、用清水清洗葡萄后，<strong>一定要“风干”</strong>葡萄,不能有水份。\n3、发酵时温度最好是<strong>26到28度</strong>之间,<strong>发酵需要快速启动。\n4、一次发酵7到10天后,及时过滤杂物（葡萄皮、籽、酒泥等）。\n5、二次发酵1个月后,及时过滤酒泥并将存放酒的罐子一定要装满（防止氧化）\n6、以后定期3到5个月倒罐一次,清除酒泥并将存放酒的罐子装满。\n7、非专用酿酒葡萄酿造的葡萄酒,最好能在二次发酵完成4个月后至1年内喝完。\n8、一次发酵过程中,一旦感觉发酵停止,可以再加一点点糖进去，看是否酵母菌分解完成,尽量使葡萄中的酵母发酵完，这样酒的酒精度会高一些（最好可以达到12度）,便于日后长时间储存。</strong>\n\n<strong> <wbr></wbr></strong>\n\n三、怎样使葡萄酒不变酸？\n\n1、采用巴氏灭菌法：\n只要加热在55～60℃时，便可以杀死使酒酸败的微生物，从而延长酒的储存期，。\n\n<wbr> <wbr> <wbr> 巴斯德杀菌就是不破坏物质而所采取的低温杀菌。大多都是用80度隔水加热杀菌30分钟，因为酵母发酵本身是厌氧反应，发酵大至上7~10天。过程中不要打开来，不过要泄气，因为反应中也会产生二氧化碳，而发酵完后要冷藏起来，使酵母死亡，而打开后也要放冷藏。因为酒精在有氧的环境会与醋酸菌反应成醋酸，市上的水果醋就是如此来的。</wbr></wbr></wbr>\n\n2、酿酒过程中尽量减少与空气的接触\n\n<wbr> <wbr> <wbr> 葡萄酵母在适当的温度下，自发进行发酵把葡萄汁中的糖分转化成酒，随着发酵的进行，酒精不断增多，葡萄汁中的糖分不断减少，到发酵终止。这样葡萄汁就变成了葡萄酒。在后期存放过程中，还会发生一些复杂的物理化学变化，比如酒精和葡萄汁中的果酸转变成有机酯类，使酒具有香味。糖发酵变成酒的化学反应是厌氧反应，即不需要氧气参与的反应。</wbr></wbr></wbr>\n\n3、醋酸菌的存在；酒精一般条件下是不会自发转变成醋的，但是在有醋酸菌的条件下酒精变成醋就很自然了。\n\n4、有氧气参与反应；由于醋酸菌天然栖息于植物体表面，只要存在含糖物质，就能发现与酵母菌一起生长的醋酸细菌。我们在酿酒过程中除了严格消毒，注意清洁，已减少醋酸菌的污染以外，很难从根本上杜绝醋酸菌的存在。但是我们只要隔绝空气，醋酸菌就无法兴风作浪，酒精也不会变醋了。而隔绝空气对糖变酒的发酵过程没有任何不良影响。\n\n<wbr>\n四、还有很多种原因也可使葡萄酒变酸：</wbr>\n\n1、葡萄洗后表皮的<strong>水没晾干</strong>污染了；\n2、做酒的<strong>工具没洗干净，晾干；\n3、发酵过度（温度过高、时间过长）；\n</strong>4、最常见的是<strong>酿好酒后没有及时滤渣，酒渣继续发酵成醋。\n5、在取用时不加小心污染了。\n<wbr> <wbr>\n</wbr></wbr></strong>已经酸了怎么办？ <wbr> <wbr>\n1、先把渣滤去，发酵的速度会减缓。\n2、滤后把酒液蒸一蒸，高温杀灭发酵菌群终止发酵，蒸的时候可以加点冰糖调甜它，按自己口味加。注意蒸的时候不宜搅动，搅过头会让酒香散失。蒸过的酒浓度更高。放凉后再喝，酒体更醇厚，酒香变化微妙，如果糖与酸调得合适，家酿酒真就很象冰酒，只是没冰酒爽口。\n3、如果真的已经成了醋（没酒香只有酸气，成了葡萄果醋），那也不用蒸了，那些花青素啊葡萄籽素什么的抗氧化成分不流失，滤完冰起来，喝时调甜：推荐蜂蜜水或冰糖玫瑰花茶，自制醋饮料时尚养容啊还不怕醉。葡萄醋用来做菜也很好，炖肉易酥烂，做凉拌则有果味清香，不要糟蹋了。</wbr></wbr>\n\n<wbr></wbr>\n\n五、葡萄醋对人也是有好处的\n\n1、心脑血管病人经常饮用，能软化血管，不容易造成血栓与心肌梗塞．\n2、能够减少肠内不良细菌数量，帮助有益细菌繁殖，\n3、消除皮肤色斑。此外，葡萄醋内的多糖、钾离子能降低体内酸性，从内缓解疲劳，增强体力。\n\n可以用来搭配特级初榨橄榄油烹饪、做色拉、凉拌、蘸椒盐牛排、白肉、鸡等来享用，用量仅是普通醋的十分之一。', '葡萄酒', '', 'inherit', 'open', 'open', '', '88-revision', '', '', '2014-04-27 16:27:56', '2014-04-27 08:27:56', '', 88, 'http://afeier.sinaapp.com/?p=89', 0, 'revision', '', 0),
(90, 1, '2014-04-27 16:36:41', '2014-04-27 08:36:41', '正确酿制普通酒\n\n葡萄酒酿制方法的正确步骤是，首先选择没有病害的葡萄原料，一颗颗进行认真清洗晾干后，再把葡萄弄碎装瓶盖好。葡萄酒里的酒精是靠其中的糖分在酵母菌作用下产生的，放在温暖的地方等待葡萄首次自然发酵，再隔6至18天，换罐或换瓶，进行二次发酵。大家最好使用玻璃材质的广口瓶，二次发酵时间大约为一个星期，经过静置澄清后的葡萄酒，最好把它装进小瓶储藏饮用。需要提醒大家的是，葡萄酒在酿制的过程中，不能加水或加酒。\n<div>\n<div>\n<div>\n<div>几年前我在一个熟人那里尝到了她自己酿制的葡萄酒，觉得比在超市买的葡萄酒味道好得多；回家马上买了葡萄就如法炮制。\n家庭酿制的红葡萄酒味道纯正，价格便宜，不加任何添加剂和防腐剂，干净没有毒性，喝起来特别放心。这几年，我每到葡萄大量上市的时候，都会酿制红葡萄酒。在我的带动下，我们院子里几乎家家都酿制红葡萄酒，我的同学，朋友也纷纷加入到酿酒队伍之中。今天我又买了十二斤葡萄，酿制葡萄酒。\n下面我把酿制红葡萄酒的方法和注意事项介绍一下，有兴趣的朋友不妨一试。</div>\n</div>\n</div>\n</div>\n<div>\n<h2>食材</h2>\n<div>\n<ul>\n	<li>\n<div>一定要在<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a>大量上市的夏天买自然成熟的<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a></div></li>\n	<li>\n<div>剪刀一把</div></li>\n	<li>\n<div>大容量盛方<a href="http://jingyan.baidu.com/meishi/food_370" target="_blank">葡萄</a>容器（盆）</div></li>\n	<li>\n<div>高容量瓶子</div></li>\n	<li>\n<div>盘子</div></li>\n	<li>\n<div>勺子或网筛、漏瓢更好</div></li>\n	<li>\n<div>水瓶</div></li>\n</ul>\n</div>\n</div>\n<div>\n<h2><a name="section-3"></a>步骤/方法</h2>\n<div>\n<ol>\n	<li>\n<div>1</div>\n<div>一定要在葡萄大量上市的夏天买自然成熟的葡萄，不要买反季节的大棚里栽种的葡萄。要买紫红色的成熟了的葡萄（尝尝味道，很甜的一般是成熟了的）；看看果蒂处，如果是青的，而且味道酸，就可能是打了“催红素”的，这样的葡萄最好不要买。\n（站长经验：如果不是集中大量制作的话，买葡萄有个技巧。每天晚上10点左右，到卖葡萄的店铺购买散的葡萄珠，通常很便宜的一般是正常价格低一半左右。我们买来是为了做酒，不是送礼。实际上，葡萄珠更适合我们。）</div>\n<div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=1" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=aedffba776c6a7efb926a826cdfbafe9/a71ea8d3fd1f4134dec45b06251f95cad0c85ed2.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n</div></li>\n	<li>\n<div>2</div>\n<div>用剪刀贴近果蒂处把葡萄一个个地剪下来，可以留一点果蒂，以免伤了果皮；不要用手去揪葡萄，揪下葡萄就可能伤到了果皮；凡是伤了果皮的葡萄放到一边去，留着吃，不用它做葡萄酒。\n（站长经验：写教程的人都这么说，其实大可不必。当你大批量购买的时候，你就知道有多少伤了果皮的葡萄了。吃是吃不完的。何况本站推荐购买葡萄珠，破皮的更多。） 把葡萄从贴近果蒂的地方剪下来，注意不要伤到果皮</div>\n<div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=2" target="_self"><img src="http://h.hiphotos.baidu.com/exp/w=500/sign=853c453b8bd4b31cf03c94bbb7d7276f/42166d224f4a20a489f262bf90529822730ed0de.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n</div></li>\n	<li>\n<div>3</div>\n<div>把剪好的葡萄冲洗干净后用淡盐水浸泡十分钟左右，这是为了去掉葡萄皮上的农药和其他有害物质（前面说到葡萄伤了皮的不要用来酿制葡萄酒，就是害怕浸泡时盐水浸到果肉里面去了，影响葡萄酒的质量）。然后再用清水冲洗一遍，再把水沥干。\n（站长经验：不推荐这一步骤，理由是，葡萄皮表面有一层薄薄的白霜，里面含有天然的酵母菌。酵母发酵过程就是制作葡萄酒的过程。破毁了葡萄表皮酵母菌的含量，必定要添加人造酵母。否则发酵不充分，容易引起葡萄酒的变质。） 用盐水浸泡葡萄，约十分钟。将葡萄的水沥干</div>\n<div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=3" target="_self"><img src="http://h.hiphotos.baidu.com/exp/w=500/sign=2afcad14103853438ccf8721a312b01f/8435e5dde71190ef6910cca7ce1b9d16fcfa60da.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=4" target="_self"><img src="http://f.hiphotos.baidu.com/exp/w=500/sign=a5c751612df5e0feee1889016c6134e5/6609c93d70cf3bc7cae59394d100baa1cc112ae4.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n</div></li>\n	<li>\n<div>4</div>\n<div>把葡萄倒在盆里，用手把它们一个个捏碎，葡萄皮，葡萄籽和果肉全都留在盆里，然后按照六斤葡萄一斤白糖的比例（喜欢甜一点的可以适当多放一点），搅拌均匀，等白糖完全融化以后装在洗干净的瓶子里。注意，瓶子不要装得太满，要留出三分之一的空间，因为葡萄在发酵的过程中会膨胀，会产生大量的气体，如果装的太满，葡萄酒会溢出来。另外，为了不让外面的空气进去，在瓶盖上最好用塑料袋缠紧。\n（站长经验：放糖是为了增加葡萄酒的酒精含量，而不是增加甜度。放糖量要看葡萄的甜度。成熟过度和甜度大的葡萄，放糖量要适量减少，否则增加。过度放糖，拾得其反。也容易引起制作过程中葡萄酒变质、变坏。通常的比例掌握在15%---25%之间。） 这是捏碎了的葡萄。十二斤葡萄我放了两斤半白糖，我喜欢甜一点。这个瓶子是二十斤的容量，可以装十八斤葡萄浆。我今年只做了十二斤葡萄。</div>\n<div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=5" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=68f9b61c564e9258a63486eeac83d1d1/c9fcc3cec3fdfc03f39fbdc0d43f8794a5c226e6.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=6" target="_self"><img src="http://f.hiphotos.baidu.com/exp/w=500/sign=bbd5002bf6246b607b0eb274dbf91a35/ac345982b2b7d0a209285ae5cbef76094a369ae0.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n</div></li>\n	<li>\n<div>5</div>\n<div>夏天气温高，过二十一天葡萄酒就酿好了；如果气温低（低于三十度）可以多酿几天。要注意的是，酿的时间越长酒味越浓；葡萄酒酿好以后，放的时间越长，酒味越浓。我不喜欢太浓的葡萄酒，所以即使气温不高，我最多二十六七天就开瓶滤渣。 就用这两件工具过滤葡萄渣。</div>\n<div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=7" target="_self"><img src="http://b.hiphotos.baidu.com/exp/w=500/sign=34f3bf622834349b74066e85f9eb1521/7dd98d1001e9390130e1d3467bec54e737d196e2.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n<div><a href="http://jingyan.baidu.com/album/ab69b270e997642ca7189f09.html?picindex=8" target="_self"><img src="http://c.hiphotos.baidu.com/exp/w=500/sign=61c2ec49a18b87d65042ab1f37092860/21a4462309f790524afc19460cf3d7ca7acbd5e3.jpg" alt="怎样在家里自酿葡萄酒" /></a></div>\n</div></li>\n	<li>\n<div>6</div>\n<div>葡萄酒酿好以后，要把葡萄籽，葡萄皮，还有发了酵的果肉都滤掉，这就要滤渣。滤渣的工具我买的漏瓢（见图）；有的人用纱布过滤也可以；反正因陋就简，家里有什么可以用来去掉渣滓的，就土法上马，物尽其用，留下葡萄酒就行了。要注意的是，滤渣的工具一定要严格消毒，不要把细菌带到酒里面去了哦。</div></li>\n	<li>\n<div>7</div>\n<div>最后，作为过来人的制作经验，滤好的葡萄酒，可以先品尝一下，如果感觉酒味清淡，那说明度数不够，可以再次适量添加糖。进行二次发酵。</div>\n<div></div></li>\n</ol>\n</div>\n</div>\n<strong>一、葡萄酒的年龄</strong>\n\n<strong> <wbr> <wbr> <wbr></wbr></wbr></wbr></strong> 葡萄酒是有生命的，所以做酒的葡萄越新鲜越好。\n\n<wbr> <wbr> <wbr> 普通葡萄酒的<strong>生命周期都在2~3年</strong>。素质好的葡萄酿成的酒寿命要长。</wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> 葡萄酒的生命期限跟人一样要经历出生、幼年、青年、中年、老年和死亡的必然过程，果实成熟就启动了葡萄酒的生命旅程。只不过每种葡萄酒的生命周期都是不同的，短的到半年，长的则有数十年以上，上好的甚至能到百年。</wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> <strong><span style="color: #690120;">红葡萄酒年轻的时候会呈现出紫色或者深紫色</span></strong>，<strong><span style="color: #a61312;">到樱桃红和宝石红说明酒已经开始成熟，</span><span style="color: #a61312;">一般的葡萄酒这时喝最好。</span><span style="color: #a51312;"><span style="color: #790e0d;">如果到了棕红、砖红色，普通的红酒就已经老了</span>，</span></strong>不过好素质的红酒也是相当不错的<strong>。<span style="color: #9c5a3c;">茶色的普通酒基本已经死了</span>，</strong>除了好酒庄特殊的红酒。 <wbr></wbr></wbr></wbr></wbr>\n\n<wbr> <wbr> <wbr> 白葡萄酒的色泽也充分表现了葡萄酒的年龄。<span style="color: #e5d102;">白葡萄酒在18~27岁之间就会呈现淡黄色带绿光和淡稻草黄，</span><span style="color: #ffc20e;">28~35岁会出现稻草黄、金色，如果是普通的干白就应该喝掉了</span><span style="color: #d4a10b;">。琥珀色和土黄色的白葡萄酒就已经走到生命的终点，不好喝了；（我酿的白葡萄酒不光是这个颜色，且已经变醋了）</span>如果是甜性白酒就不一样了，这正是成熟的巅峰。</wbr></wbr></wbr>\n\n葡萄酒的寿命还与葡萄酒的存放相关，如木塞一定要同酒接触，防止酒塞干了酒瓶里进了空气使酒氧化，存放的温度要保持<strong>在13~16 ℃度之间才能使酒正常成长。\n</strong>\n\n&nbsp;\n\n<strong>二、如何防止自酿葡萄酒发霉</strong>\n\n1、选择葡萄原料时要尽量去除烂果、霉变果、裂果。\n2、用清水清洗葡萄后，<strong>一定要“风干”</strong>葡萄,不能有水份。\n3、发酵时温度最好是<strong>26到28度</strong>之间,<strong>发酵需要快速启动。\n4、一次发酵7到10天后,及时过滤杂物（葡萄皮、籽、酒泥等）。\n5、二次发酵1个月后,及时过滤酒泥并将存放酒的罐子一定要装满（防止氧化）\n6、以后定期3到5个月倒罐一次,清除酒泥并将存放酒的罐子装满。\n7、非专用酿酒葡萄酿造的葡萄酒,最好能在二次发酵完成4个月后至1年内喝完。\n8、一次发酵过程中,一旦感觉发酵停止,可以再加一点点糖进去，看是否酵母菌分解完成,尽量使葡萄中的酵母发酵完，这样酒的酒精度会高一些（最好可以达到12度）,便于日后长时间储存。</strong>\n\n<strong> <wbr></wbr></strong>\n\n三、怎样使葡萄酒不变酸？\n\n1、采用巴氏灭菌法：\n只要加热在55～60℃时，便可以杀死使酒酸败的微生物，从而延长酒的储存期，。\n\n<wbr> <wbr> <wbr> 巴斯德杀菌就是不破坏物质而所采取的低温杀菌。大多都是用80度隔水加热杀菌30分钟，因为酵母发酵本身是厌氧反应，发酵大至上7~10天。过程中不要打开来，不过要泄气，因为反应中也会产生二氧化碳，而发酵完后要冷藏起来，使酵母死亡，而打开后也要放冷藏。因为酒精在有氧的环境会与醋酸菌反应成醋酸，市上的水果醋就是如此来的。</wbr></wbr></wbr>\n\n2、酿酒过程中尽量减少与空气的接触\n\n<wbr> <wbr> <wbr> 葡萄酵母在适当的温度下，自发进行发酵把葡萄汁中的糖分转化成酒，随着发酵的进行，酒精不断增多，葡萄汁中的糖分不断减少，到发酵终止。这样葡萄汁就变成了葡萄酒。在后期存放过程中，还会发生一些复杂的物理化学变化，比如酒精和葡萄汁中的果酸转变成有机酯类，使酒具有香味。糖发酵变成酒的化学反应是厌氧反应，即不需要氧气参与的反应。</wbr></wbr></wbr>\n\n3、醋酸菌的存在；酒精一般条件下是不会自发转变成醋的，但是在有醋酸菌的条件下酒精变成醋就很自然了。\n\n4、有氧气参与反应；由于醋酸菌天然栖息于植物体表面，只要存在含糖物质，就能发现与酵母菌一起生长的醋酸细菌。我们在酿酒过程中除了严格消毒，注意清洁，已减少醋酸菌的污染以外，很难从根本上杜绝醋酸菌的存在。但是我们只要隔绝空气，醋酸菌就无法兴风作浪，酒精也不会变醋了。而隔绝空气对糖变酒的发酵过程没有任何不良影响。\n\n<wbr>\n四、还有很多种原因也可使葡萄酒变酸：</wbr>\n\n1、葡萄洗后表皮的<strong>水没晾干</strong>污染了；\n2、做酒的<strong>工具没洗干净，晾干；\n3、发酵过度（温度过高、时间过长）；\n</strong>4、最常见的是<strong>酿好酒后没有及时滤渣，酒渣继续发酵成醋。\n5、在取用时不加小心污染了。\n<wbr> <wbr>\n</wbr></wbr></strong>已经酸了怎么办？ <wbr> <wbr>\n1、先把渣滤去，发酵的速度会减缓。\n2、滤后把酒液蒸一蒸，高温杀灭发酵菌群终止发酵，蒸的时候可以加点冰糖调甜它，按自己口味加。注意蒸的时候不宜搅动，搅过头会让酒香散失。蒸过的酒浓度更高。放凉后再喝，酒体更醇厚，酒香变化微妙，如果糖与酸调得合适，家酿酒真就很象冰酒，只是没冰酒爽口。\n3、如果真的已经成了醋（没酒香只有酸气，成了葡萄果醋），那也不用蒸了，那些花青素啊葡萄籽素什么的抗氧化成分不流失，滤完冰起来，喝时调甜：推荐蜂蜜水或冰糖玫瑰花茶，自制醋饮料时尚养容啊还不怕醉。葡萄醋用来做菜也很好，炖肉易酥烂，做凉拌则有果味清香，不要糟蹋了。</wbr></wbr>\n\n&nbsp;\n\n五、葡萄醋对人也是有好处的\n\n1、心脑血管病人经常饮用，能软化血管，不容易造成血栓与心肌梗塞．\n2、能够减少肠内不良细菌数量，帮助有益细菌繁殖，\n3、消除皮肤色斑。此外，葡萄醋内的多糖、钾离子能降低体内酸性，从内缓解疲劳，增强体力。\n\n可以用来搭配特级初榨橄榄油烹饪、做色拉、凉拌、蘸椒盐牛排、白肉、鸡等来享用，用量仅是普通醋的十分之一。', '葡萄酒', '', 'inherit', 'open', 'open', '', '88-autosave', '', '', '2014-04-27 16:36:41', '2014-04-27 08:36:41', '', 88, 'http://afeier.sinaapp.com/?p=90', 0, 'revision', '', 0),
(91, 1, '2014-04-27 16:28:04', '2014-04-27 08:28:04', '<strong>一、葡萄酒的年龄</strong>\r\n\r\n<strong> <wbr> <wbr> <wbr></wbr></wbr></wbr></strong> 葡萄酒是有生命的，所以做酒的葡萄越新鲜越好。\r\n\r\n<wbr> <wbr> <wbr> 普通葡萄酒的<strong>生命周期都在2~3年</strong>。素质好的葡萄酿成的酒寿命要长。</wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> 葡萄酒的生命期限跟人一样要经历出生、幼年、青年、中年、老年和死亡的必然过程，果实成熟就启动了葡萄酒的生命旅程。只不过每种葡萄酒的生命周期都是不同的，短的到半年，长的则有数十年以上，上好的甚至能到百年。</wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> <strong><span style="color: #690120;">红葡萄酒年轻的时候会呈现出紫色或者深紫色</span></strong>，<strong><span style="color: #a61312;">到樱桃红和宝石红说明酒已经开始成熟，</span><span style="color: #a61312;">一般的葡萄酒这时喝最好。</span><span style="color: #a51312;"><span style="color: #790e0d;">如果到了棕红、砖红色，普通的红酒就已经老了</span>，</span></strong>不过好素质的红酒也是相当不错的<strong>。<span style="color: #9c5a3c;">茶色的普通酒基本已经死了</span>，</strong>除了好酒庄特殊的红酒。 <wbr></wbr></wbr></wbr></wbr>\r\n\r\n<wbr> <wbr> <wbr> 白葡萄酒的色泽也充分表现了葡萄酒的年龄。<span style="color: #e5d102;">白葡萄酒在18~27岁之间就会呈现淡黄色带绿光和淡稻草黄，</span><span style="color: #ffc20e;">28~35岁会出现稻草黄、金色，如果是普通的干白就应该喝掉了</span><span style="color: #d4a10b;">。琥珀色和土黄色的白葡萄酒就已经走到生命的终点，不好喝了；（我酿的白葡萄酒不光是这个颜色，且已经变醋了）</span>如果是甜性白酒就不一样了，这正是成熟的巅峰。</wbr></wbr></wbr>\r\n\r\n葡萄酒的寿命还与葡萄酒的存放相关，如木塞一定要同酒接触，防止酒塞干了酒瓶里进了空气使酒氧化，存放的温度要保持<strong>在13~16 ℃度之间才能使酒正常成长。\r\n</strong>\r\n\r\n<wbr></wbr>\r\n\r\n<strong>二、如何防止自酿葡萄酒发霉</strong>\r\n\r\n1、选择葡萄原料时要尽量去除烂果、霉变果、裂果。\r\n2、用清水清洗葡萄后，<strong>一定要“风干”</strong>葡萄,不能有水份。\r\n3、发酵时温度最好是<strong>26到28度</strong>之间,<strong>发酵需要快速启动。\r\n4、一次发酵7到10天后,及时过滤杂物（葡萄皮、籽、酒泥等）。\r\n5、二次发酵1个月后,及时过滤酒泥并将存放酒的罐子一定要装满（防止氧化）\r\n6、以后定期3到5个月倒罐一次,清除酒泥并将存放酒的罐子装满。\r\n7、非专用酿酒葡萄酿造的葡萄酒,最好能在二次发酵完成4个月后至1年内喝完。\r\n8、一次发酵过程中,一旦感觉发酵停止,可以再加一点点糖进去，看是否酵母菌分解完成,尽量使葡萄中的酵母发酵完，这样酒的酒精度会高一些（最好可以达到12度）,便于日后长时间储存。</strong>\r\n\r\n<strong> <wbr></wbr></strong>\r\n\r\n三、怎样使葡萄酒不变酸？\r\n\r\n1、采用巴氏灭菌法：\r\n只要加热在55～60℃时，便可以杀死使酒酸败的微生物，从而延长酒的储存期，。\r\n\r\n<wbr> <wbr> <wbr> 巴斯德杀菌就是不破坏物质而所采取的低温杀菌。大多都是用80度隔水加热杀菌30分钟，因为酵母发酵本身是厌氧反应，发酵大至上7~10天。过程中不要打开来，不过要泄气，因为反应中也会产生二氧化碳，而发酵完后要冷藏起来，使酵母死亡，而打开后也要放冷藏。因为酒精在有氧的环境会与醋酸菌反应成醋酸，市上的水果醋就是如此来的。</wbr></wbr></wbr>\r\n\r\n2、酿酒过程中尽量减少与空气的接触\r\n\r\n<wbr> <wbr> <wbr> 葡萄酵母在适当的温度下，自发进行发酵把葡萄汁中的糖分转化成酒，随着发酵的进行，酒精不断增多，葡萄汁中的糖分不断减少，到发酵终止。这样葡萄汁就变成了葡萄酒。在后期存放过程中，还会发生一些复杂的物理化学变化，比如酒精和葡萄汁中的果酸转变成有机酯类，使酒具有香味。糖发酵变成酒的化学反应是厌氧反应，即不需要氧气参与的反应。</wbr></wbr></wbr>\r\n\r\n3、醋酸菌的存在；酒精一般条件下是不会自发转变成醋的，但是在有醋酸菌的条件下酒精变成醋就很自然了。\r\n\r\n4、有氧气参与反应；由于醋酸菌天然栖息于植物体表面，只要存在含糖物质，就能发现与酵母菌一起生长的醋酸细菌。我们在酿酒过程中除了严格消毒，注意清洁，已减少醋酸菌的污染以外，很难从根本上杜绝醋酸菌的存在。但是我们只要隔绝空气，醋酸菌就无法兴风作浪，酒精也不会变醋了。而隔绝空气对糖变酒的发酵过程没有任何不良影响。\r\n\r\n<wbr>\r\n四、还有很多种原因也可使葡萄酒变酸：</wbr>\r\n\r\n1、葡萄洗后表皮的<strong>水没晾干</strong>污染了；\r\n2、做酒的<strong>工具没洗干净，晾干；\r\n3、发酵过度（温度过高、时间过长）；\r\n</strong>4、最常见的是<strong>酿好酒后没有及时滤渣，酒渣继续发酵成醋。\r\n5、在取用时不加小心污染了。\r\n<wbr> <wbr>\r\n</wbr></wbr></strong>已经酸了怎么办？ <wbr> <wbr>\r\n1、先把渣滤去，发酵的速度会减缓。\r\n2、滤后把酒液蒸一蒸，高温杀灭发酵菌群终止发酵，蒸的时候可以加点冰糖调甜它，按自己口味加。注意蒸的时候不宜搅动，搅过头会让酒香散失。蒸过的酒浓度更高。放凉后再喝，酒体更醇厚，酒香变化微妙，如果糖与酸调得合适，家酿酒真就很象冰酒，只是没冰酒爽口。\r\n3、如果真的已经成了醋（没酒香只有酸气，成了葡萄果醋），那也不用蒸了，那些花青素啊葡萄籽素什么的抗氧化成分不流失，滤完冰起来，喝时调甜：推荐蜂蜜水或冰糖玫瑰花茶，自制醋饮料时尚养容啊还不怕醉。葡萄醋用来做菜也很好，炖肉易酥烂，做凉拌则有果味清香，不要糟蹋了。</wbr></wbr>\r\n\r\n<wbr></wbr>\r\n\r\n五、葡萄醋对人也是有好处的\r\n\r\n1、心脑血管病人经常饮用，能软化血管，不容易造成血栓与心肌梗塞．\r\n2、能够减少肠内不良细菌数量，帮助有益细菌繁殖，\r\n3、消除皮肤色斑。此外，葡萄醋内的多糖、钾离子能降低体内酸性，从内缓解疲劳，增强体力。\r\n\r\n可以用来搭配特级初榨橄榄油烹饪、做色拉、凉拌、蘸椒盐牛排、白肉、鸡等来享用，用量仅是普通醋的十分之一。', '葡萄酒', '', 'inherit', 'open', 'open', '', '88-revision-2', '', '', '2014-04-27 16:28:04', '2014-04-27 08:28:04', '', 88, 'http://afeier.sinaapp.com/?p=91', 0, 'revision', '', 0),
(93, 1, '2014-05-10 19:59:23', '2014-05-10 11:59:23', '<h1 id="configuring-nginx-with-php-fpm">Configuring Nginx with PHP-FPM</h1>\r\nFor those of you that like using <a href="http://nginx.org/">Nginx</a>, we have good news, you can run PyroCMS just fine.\r\n<h2 id="setting-up-your-virtual-host"></h2>\r\nWe are going to use try_files instead of the Rewrite Module. You can find out more about try_files <a href="http://wiki.nginx.org/HttpCoreModule#try_files">here</a>.\r\n<div>\r\n<div id="highlighter_915120">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div>\r\n<div>18</div>\r\n<div>19</div>\r\n<div>20</div>\r\n<div>21</div>\r\n<div>22</div>\r\n<div>23</div>\r\n<div>24</div>\r\n<div>25</div>\r\n<div>26</div>\r\n<div>27</div>\r\n<div>28</div>\r\n<div>29</div>\r\n<div>30</div>\r\n<div>31</div>\r\n<div>32</div>\r\n<div>33</div>\r\n<div>34</div>\r\n<div>35</div>\r\n<div>36</div>\r\n<div>37</div>\r\n<div>38</div>\r\n<div>39</div>\r\n<div>40</div>\r\n<div>41</div>\r\n<div>42</div>\r\n<div>43</div>\r\n<div>44</div>\r\n<div>45</div>\r\n<div>46</div>\r\n<div>47</div>\r\n<div>48</div>\r\n<div>49</div>\r\n<div>50</div></td>\r\n<td>\r\n<div>\r\n<div><code>server {</code></div>\r\n<div><code>        </code><code>listen 80;</code></div>\r\n<div><code>        </code><code>server_name domain.com;</code></div>\r\n<div><code>        </code><code>root /path/to/webroot;</code></div>\r\n<div><code>        </code><code>index index.php;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>access_log  /path/to/logs/access.log  main;</code></div>\r\n<div><code>        </code><code>error_log</code>  <code>/path/to/logs/error.log;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>client_max_body_size 200M;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>gzip  on;</code></div>\r\n<div><code>        </code><code>gzip_static on;</code></div>\r\n<div><code>        </code><code>gzip_http_version 1.0;</code></div>\r\n<div><code>        </code><code>gzip_disable </code><code>"MSIE [1-6]."</code><code>;</code></div>\r\n<div><code>        </code><code>gzip_vary on;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>gzip_comp_level 9;</code></div>\r\n<div><code>        </code><code>gzip_proxied any;</code></div>\r\n<div><code>        </code><code>gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>fastcgi_buffers 8 16k;</code></div>\r\n<div><code>        </code><code>fastcgi_buffer_size 32k;</code></div>\r\n<div><code>        </code><code>fastcgi_read_timeout 180;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location / {</code></div>\r\n<div><code>                </code><code>try_files $uri $uri/ /index.php;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>         </code><code>location /installer {</code></div>\r\n<div><code>                </code><code>try_files $uri $uri/ /installer/index.php;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>fastcgi_intercept_errors off;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location ~* \\.(?:ico|gif|jpe?g|png)$ {</code></div>\r\n<div><code>                </code><code>expires max;</code></div>\r\n<div><code>                </code><code>add_header Pragma </code><code>public</code><code>;</code></div>\r\n<div><code>                </code><code>add_header Cache-Control </code><code>"public, must-revalidate, proxy-revalidate"</code><code>;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location ~ \\.php {</code></div>\r\n<div><code>                </code><code>fastcgi_pass   </code><code>unix:</code><code>/tmp/domain.sock;</code></div>\r\n<div><code>                </code><code>fastcgi_split_path_info ^(.+.php)(.*)$;</code></div>\r\n<div><code>                </code><code>fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</code></div>\r\n<div><code>                </code><code>include</code>        <code>fastcgi_params;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>include</code> <code>drop.conf;</code></div>\r\n<div><code>}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThis configuration will work out of the box when PyroCMS is first uploaded to the web root. One recommendation I have is to make the following changes to the <strong>/installer/config/config.php</strong> and<strong>/system/cms/config/config.php</strong>.\r\n<div>\r\n<div id="highlighter_175381">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div></td>\r\n<td>\r\n<div>\r\n<div><code>$config[</code><code>''index_page''</code><code>] = </code><code>""</code><code>;</code></div>\r\n<div><code>$config[</code><code>''uri_protocol''</code><code>] = </code><code>"REQUEST_URI"</code><code>;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="fast-cgi-params">Fast CGI Params</h2>\r\nBelow are the included fastcgi_params that users have reported have worked:\r\n<div>\r\n<div id="highlighter_777697">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div>\r\n<div>18</div>\r\n<div>19</div>\r\n<div>20</div>\r\n<div>21</div>\r\n<div>22</div>\r\n<div>23</div>\r\n<div>24</div>\r\n<div>25</div>\r\n<div>26</div>\r\n<div>27</div>\r\n<div>28</div>\r\n<div>29</div>\r\n<div>30</div>\r\n<div>31</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param  QUERY_STRING       $query_string;</code></div>\r\n<div><code>fastcgi_param  REQUEST_METHOD     $request_method;</code></div>\r\n<div><code>fastcgi_param  CONTENT_TYPE       $content_type;</code></div>\r\n<div><code>fastcgi_param  CONTENT_LENGTH     $content_length;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;</code></div>\r\n<div><code>fastcgi_param  REQUEST_URI        $request_uri;</code></div>\r\n<div><code>fastcgi_param  DOCUMENT_URI       $document_uri;</code></div>\r\n<div><code>fastcgi_param  DOCUMENT_ROOT      $document_root;</code></div>\r\n<div><code>fastcgi_param  SERVER_PROTOCOL    $server_protocol;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</code></div>\r\n<div><code>fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  REMOTE_ADDR        $remote_addr;</code></div>\r\n<div><code>fastcgi_param  REMOTE_PORT        $remote_port;</code></div>\r\n<div><code>fastcgi_param  SERVER_ADDR        $server_addr;</code></div>\r\n<div><code>fastcgi_param  SERVER_PORT        $server_port;</code></div>\r\n<div><code>fastcgi_param  SERVER_NAME        $server_name;</code></div>\r\n<div></div>\r\n<div><code># PHP only, required </code><code>if</code> <code>PHP was built with --enable-force-cgi-redirect</code></div>\r\n<div><code>fastcgi_param  REDIRECT_STATUS    200;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_connect_timeout 60;</code></div>\r\n<div><code>fastcgi_send_timeout 180;</code></div>\r\n<div><code>fastcgi_read_timeout 180;</code></div>\r\n<div><code>fastcgi_buffer_size 128k;</code></div>\r\n<div><code>fastcgi_buffers 4 256k;</code></div>\r\n<div><code>fastcgi_busy_buffers_size 256k;</code></div>\r\n<div><code>fastcgi_temp_file_write_size 256k;</code></div>\r\n<div><code>fastcgi_intercept_errors off;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="drop_conf-include">Drop.conf Include</h2>\r\nThe first two lines stops the robot and favicon 404 from logging. The third line stops hidden files from being served. The fourth line prevents temporary files being served such as those created when editing files with vim.\r\n<div>\r\n<div id="highlighter_864190">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div></td>\r\n<td>\r\n<div>\r\n<div><code>location = /robots.txt  { access_log off; log_not_found off; }</code></div>\r\n<div><code>location = /favicon.ico { access_log off; log_not_found off; }</code></div>\r\n<div><code>location ~ /\\.          { access_log off; log_not_found off; deny all; }</code></div>\r\n<div><code>location ~ ~$           { access_log off; log_not_found off; deny all; }</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="setting-up-the-php-fpm-pool">Setting up the PHP-FPM Pool</h2>\r\nThe pool is setup using Unix sockets to reduce the TCP overhead. I find this method to increase performance on small VPS environments. For more information about the PHP-FPM config file click <a href="http://php-fpm.org/wiki/Configuration_File">here</a>.\r\n<div>\r\n<div id="highlighter_405722">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div></td>\r\n<td>\r\n<div>\r\n<div><code>[domain]</code></div>\r\n<div><code>listen = /tmp/domain.sock</code></div>\r\n<div><code>listen.allowed_clients = 127.0.0.1</code></div>\r\n<div></div>\r\n<div><code>user = someuser</code></div>\r\n<div><code>group = someuser</code></div>\r\n<div></div>\r\n<div><code>pm = dynamic</code></div>\r\n<div></div>\r\n<div><code>pm.max_children = 25</code></div>\r\n<div><code>pm.start_servers = 2</code></div>\r\n<div><code>pm.min_spare_servers = 2</code></div>\r\n<div><code>pm.max_spare_servers = 25</code></div>\r\n<div></div>\r\n<div><code>php_admin_value[</code><code>error_log</code><code>] = /</code><code>var</code><code>/log/php-fpm/domain-error.log</code></div>\r\n<div><code>php_admin_flag[log_errors] = on</code></div>\r\n<div><code>php_admin_value[session.save_path] = /tmp/ </code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="configuring-fast-cgi-params-for-multi-site">Configuring Fast CGI Params for Multi-Site</h2>\r\nOutlined <a href="http://hetaojl.com/blog/?p=15">here</a> Nginx uses what <strong>$_SERVER[''server_name'']</strong> as the first server listed in the virtual server config. This causes login problems when trying to login a site where the URL doesn''t match the first server_name. One way to get around this is to setup the FastCGI params to use host instead of server_name.\r\n\r\nUpdate the fastcgi_param from:\r\n<div>\r\n<div id="highlighter_888379">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param SERVER_NAME $server_name;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nto:\r\n<div>\r\n<div id="highlighter_237818">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param SERVER_NAME $host;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKeep in mind this is just a work around and if you do not fully understand the implications do not make this change.', 'pyrocms nginx 服务器配置', '', 'publish', 'open', 'open', '', 'pyrocms-nginx-%e6%9c%8d%e5%8a%a1%e5%99%a8%e9%85%8d%e7%bd%ae', '', '', '2014-05-10 19:59:23', '2014-05-10 11:59:23', '', 0, 'http://afeier.sinaapp.com/?p=93', 0, 'post', '', 0),
(94, 1, '2014-05-10 19:58:49', '2014-05-10 11:58:49', '', '自动草稿', '', 'inherit', 'open', 'open', '', '93-revision', '', '', '2014-05-10 19:58:49', '2014-05-10 11:58:49', '', 93, 'http://afeier.sinaapp.com/?p=94', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(95, 1, '2014-05-10 19:59:30', '2014-05-10 11:59:30', '<h1 id="configuring-nginx-with-php-fpm">Configuring Nginx with PHP-FPM</h1>\r\nFor those of you that like using <a href="http://nginx.org/">Nginx</a>, we have good news, you can run PyroCMS just fine.\r\n<h2 id="setting-up-your-virtual-host"></h2>\r\nWe are going to use try_files instead of the Rewrite Module. You can find out more about try_files <a href="http://wiki.nginx.org/HttpCoreModule#try_files">here</a>.\r\n<div>\r\n<div id="highlighter_915120">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div>\r\n<div>18</div>\r\n<div>19</div>\r\n<div>20</div>\r\n<div>21</div>\r\n<div>22</div>\r\n<div>23</div>\r\n<div>24</div>\r\n<div>25</div>\r\n<div>26</div>\r\n<div>27</div>\r\n<div>28</div>\r\n<div>29</div>\r\n<div>30</div>\r\n<div>31</div>\r\n<div>32</div>\r\n<div>33</div>\r\n<div>34</div>\r\n<div>35</div>\r\n<div>36</div>\r\n<div>37</div>\r\n<div>38</div>\r\n<div>39</div>\r\n<div>40</div>\r\n<div>41</div>\r\n<div>42</div>\r\n<div>43</div>\r\n<div>44</div>\r\n<div>45</div>\r\n<div>46</div>\r\n<div>47</div>\r\n<div>48</div>\r\n<div>49</div>\r\n<div>50</div></td>\r\n<td>\r\n<div>\r\n<div><code>server {</code></div>\r\n<div><code>        </code><code>listen 80;</code></div>\r\n<div><code>        </code><code>server_name domain.com;</code></div>\r\n<div><code>        </code><code>root /path/to/webroot;</code></div>\r\n<div><code>        </code><code>index index.php;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>access_log  /path/to/logs/access.log  main;</code></div>\r\n<div><code>        </code><code>error_log</code>  <code>/path/to/logs/error.log;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>client_max_body_size 200M;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>gzip  on;</code></div>\r\n<div><code>        </code><code>gzip_static on;</code></div>\r\n<div><code>        </code><code>gzip_http_version 1.0;</code></div>\r\n<div><code>        </code><code>gzip_disable </code><code>"MSIE [1-6]."</code><code>;</code></div>\r\n<div><code>        </code><code>gzip_vary on;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>gzip_comp_level 9;</code></div>\r\n<div><code>        </code><code>gzip_proxied any;</code></div>\r\n<div><code>        </code><code>gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>fastcgi_buffers 8 16k;</code></div>\r\n<div><code>        </code><code>fastcgi_buffer_size 32k;</code></div>\r\n<div><code>        </code><code>fastcgi_read_timeout 180;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location / {</code></div>\r\n<div><code>                </code><code>try_files $uri $uri/ /index.php;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>         </code><code>location /installer {</code></div>\r\n<div><code>                </code><code>try_files $uri $uri/ /installer/index.php;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>fastcgi_intercept_errors off;</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location ~* \\.(?:ico|gif|jpe?g|png)$ {</code></div>\r\n<div><code>                </code><code>expires max;</code></div>\r\n<div><code>                </code><code>add_header Pragma </code><code>public</code><code>;</code></div>\r\n<div><code>                </code><code>add_header Cache-Control </code><code>"public, must-revalidate, proxy-revalidate"</code><code>;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>location ~ \\.php {</code></div>\r\n<div><code>                </code><code>fastcgi_pass   </code><code>unix:</code><code>/tmp/domain.sock;</code></div>\r\n<div><code>                </code><code>fastcgi_split_path_info ^(.+.php)(.*)$;</code></div>\r\n<div><code>                </code><code>fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</code></div>\r\n<div><code>                </code><code>include</code>        <code>fastcgi_params;</code></div>\r\n<div><code>        </code><code>}</code></div>\r\n<div></div>\r\n<div><code>        </code><code>include</code> <code>drop.conf;</code></div>\r\n<div><code>}</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nThis configuration will work out of the box when PyroCMS is first uploaded to the web root. One recommendation I have is to make the following changes to the <strong>/installer/config/config.php</strong> and<strong>/system/cms/config/config.php</strong>.\r\n<div>\r\n<div id="highlighter_175381">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div></td>\r\n<td>\r\n<div>\r\n<div><code>$config[</code><code>''index_page''</code><code>] = </code><code>""</code><code>;</code></div>\r\n<div><code>$config[</code><code>''uri_protocol''</code><code>] = </code><code>"REQUEST_URI"</code><code>;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="fast-cgi-params">Fast CGI Params</h2>\r\nBelow are the included fastcgi_params that users have reported have worked:\r\n<div>\r\n<div id="highlighter_777697">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div>\r\n<div>18</div>\r\n<div>19</div>\r\n<div>20</div>\r\n<div>21</div>\r\n<div>22</div>\r\n<div>23</div>\r\n<div>24</div>\r\n<div>25</div>\r\n<div>26</div>\r\n<div>27</div>\r\n<div>28</div>\r\n<div>29</div>\r\n<div>30</div>\r\n<div>31</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param  QUERY_STRING       $query_string;</code></div>\r\n<div><code>fastcgi_param  REQUEST_METHOD     $request_method;</code></div>\r\n<div><code>fastcgi_param  CONTENT_TYPE       $content_type;</code></div>\r\n<div><code>fastcgi_param  CONTENT_LENGTH     $content_length;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;</code></div>\r\n<div><code>fastcgi_param  REQUEST_URI        $request_uri;</code></div>\r\n<div><code>fastcgi_param  DOCUMENT_URI       $document_uri;</code></div>\r\n<div><code>fastcgi_param  DOCUMENT_ROOT      $document_root;</code></div>\r\n<div><code>fastcgi_param  SERVER_PROTOCOL    $server_protocol;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;</code></div>\r\n<div><code>fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_param  REMOTE_ADDR        $remote_addr;</code></div>\r\n<div><code>fastcgi_param  REMOTE_PORT        $remote_port;</code></div>\r\n<div><code>fastcgi_param  SERVER_ADDR        $server_addr;</code></div>\r\n<div><code>fastcgi_param  SERVER_PORT        $server_port;</code></div>\r\n<div><code>fastcgi_param  SERVER_NAME        $server_name;</code></div>\r\n<div></div>\r\n<div><code># PHP only, required </code><code>if</code> <code>PHP was built with --enable-force-cgi-redirect</code></div>\r\n<div><code>fastcgi_param  REDIRECT_STATUS    200;</code></div>\r\n<div></div>\r\n<div><code>fastcgi_connect_timeout 60;</code></div>\r\n<div><code>fastcgi_send_timeout 180;</code></div>\r\n<div><code>fastcgi_read_timeout 180;</code></div>\r\n<div><code>fastcgi_buffer_size 128k;</code></div>\r\n<div><code>fastcgi_buffers 4 256k;</code></div>\r\n<div><code>fastcgi_busy_buffers_size 256k;</code></div>\r\n<div><code>fastcgi_temp_file_write_size 256k;</code></div>\r\n<div><code>fastcgi_intercept_errors off;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="drop_conf-include">Drop.conf Include</h2>\r\nThe first two lines stops the robot and favicon 404 from logging. The third line stops hidden files from being served. The fourth line prevents temporary files being served such as those created when editing files with vim.\r\n<div>\r\n<div id="highlighter_864190">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div></td>\r\n<td>\r\n<div>\r\n<div><code>location = /robots.txt  { access_log off; log_not_found off; }</code></div>\r\n<div><code>location = /favicon.ico { access_log off; log_not_found off; }</code></div>\r\n<div><code>location ~ /\\.          { access_log off; log_not_found off; deny all; }</code></div>\r\n<div><code>location ~ ~$           { access_log off; log_not_found off; deny all; }</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="setting-up-the-php-fpm-pool">Setting up the PHP-FPM Pool</h2>\r\nThe pool is setup using Unix sockets to reduce the TCP overhead. I find this method to increase performance on small VPS environments. For more information about the PHP-FPM config file click <a href="http://php-fpm.org/wiki/Configuration_File">here</a>.\r\n<div>\r\n<div id="highlighter_405722">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div>\r\n<div>2</div>\r\n<div>3</div>\r\n<div>4</div>\r\n<div>5</div>\r\n<div>6</div>\r\n<div>7</div>\r\n<div>8</div>\r\n<div>9</div>\r\n<div>10</div>\r\n<div>11</div>\r\n<div>12</div>\r\n<div>13</div>\r\n<div>14</div>\r\n<div>15</div>\r\n<div>16</div>\r\n<div>17</div></td>\r\n<td>\r\n<div>\r\n<div><code>[domain]</code></div>\r\n<div><code>listen = /tmp/domain.sock</code></div>\r\n<div><code>listen.allowed_clients = 127.0.0.1</code></div>\r\n<div></div>\r\n<div><code>user = someuser</code></div>\r\n<div><code>group = someuser</code></div>\r\n<div></div>\r\n<div><code>pm = dynamic</code></div>\r\n<div></div>\r\n<div><code>pm.max_children = 25</code></div>\r\n<div><code>pm.start_servers = 2</code></div>\r\n<div><code>pm.min_spare_servers = 2</code></div>\r\n<div><code>pm.max_spare_servers = 25</code></div>\r\n<div></div>\r\n<div><code>php_admin_value[</code><code>error_log</code><code>] = /</code><code>var</code><code>/log/php-fpm/domain-error.log</code></div>\r\n<div><code>php_admin_flag[log_errors] = on</code></div>\r\n<div><code>php_admin_value[session.save_path] = /tmp/ </code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n<h2 id="configuring-fast-cgi-params-for-multi-site">Configuring Fast CGI Params for Multi-Site</h2>\r\nOutlined <a href="http://hetaojl.com/blog/?p=15">here</a> Nginx uses what <strong>$_SERVER[''server_name'']</strong> as the first server listed in the virtual server config. This causes login problems when trying to login a site where the URL doesn''t match the first server_name. One way to get around this is to setup the FastCGI params to use host instead of server_name.\r\n\r\nUpdate the fastcgi_param from:\r\n<div>\r\n<div id="highlighter_888379">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param SERVER_NAME $server_name;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nto:\r\n<div>\r\n<div id="highlighter_237818">\r\n<div><a href="http://docs.pyrocms.com/2.1/manual/#">?</a></div>\r\n<table border="0" cellspacing="0" cellpadding="0">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<div>1</div></td>\r\n<td>\r\n<div>\r\n<div><code>fastcgi_param SERVER_NAME $host;</code></div>\r\n</div></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</div>\r\n</div>\r\nKeep in mind this is just a work around and if you do not fully understand the implications do not make this change.', 'pyrocms nginx 服务器配置', '', 'inherit', 'open', 'open', '', '93-autosave', '', '', '2014-05-10 19:59:30', '2014-05-10 11:59:30', '', 93, 'http://afeier.sinaapp.com/?p=95', 0, 'revision', '', 0),
(97, 1, '2014-05-19 00:24:49', '2014-05-18 16:24:49', '<pre>var dCounter, dSecs;\r\nvar osWindows, osMac, osUbuntu, osCentos;\r\nvar selectWindows, selectMac, selectUbuntu, selectCentos;\r\n\r\nfunction setInstructions(osType)\r\n{\r\n	// Deselect all Radio Options\r\n	selectWindows.removeAttr(''checked'');\r\n	selectMac.removeAttr(''checked'');\r\n	selectUbuntu.removeAttr(''checked'');\r\n	selectCentos.removeAttr(''checked'');\r\n\r\n	switch(osType)\r\n	{\r\n	case ''windows'':\r\n		selectWindows.attr(''checked'', true);\r\n		selectWindows[0].checked = true;\r\n		osWindows.removeClass(''hidden'');\r\n		break;\r\n	case ''mac'':\r\n		selectMac.attr(''checked'', true);\r\n		selectMac[0].checked = true;\r\n		osMac.removeClass(''hidden'');\r\n		break;\r\n	case ''ubuntu'':\r\n		selectUbuntu.attr(''checked'', true);\r\n		selectUbuntu[0].checked = true;\r\n		osUbuntu.removeClass(''hidden'');\r\n		break;\r\n	case ''centos'':\r\n		selectCentos.attr(''checked'', true);\r\n		selectCentos[0].checked = true;\r\n		osCentos.removeClass(''hidden'');\r\n		break;\r\n	default:\r\n		selectWindows.attr(''checked'', true);\r\n		selectWindows[0].checked = true;\r\n		osWindows.removeClass(''hidden'');\r\n		break;\r\n	}\r\n}\r\n\r\nfunction returnSystemType()\r\n{\r\n	var os = navigator.userAgent;\r\n	os = os.toLowerCase();\r\n\r\n	if(os.indexOf(''windows'') != -1)\r\n	{\r\n		return ''windows'';\r\n	}\r\n	else if(os.indexOf(''mac'') != -1)\r\n	{\r\n		return ''mac'';\r\n	}\r\n	else if(os.indexOf(''ubuntu'') != -1)\r\n	{\r\n		return ''ubuntu'';\r\n	}\r\n	else if(os.indexOf(''linux'') != -1)\r\n	{\r\n		return ''centos'';\r\n	}\r\n	else\r\n	{\r\n		return ''windows'';\r\n	}\r\n\r\n}\r\n\r\nfunction hideAllInstructions()\r\n{\r\n	osWindows.addClass(''hidden'');\r\n	osMac.addClass(''hidden'');\r\n	osUbuntu.addClass(''hidden'');\r\n	osCentos.addClass(''hidden'');\r\n}\r\n\r\nfunction setOptionsOnclick()\r\n{\r\n	selectWindows.click(function(){\r\n		hideAllInstructions();\r\n		osWindows.removeClass(''hidden'');\r\n	});\r\n\r\n	selectMac.click(function(){\r\n		hideAllInstructions();\r\n		osMac.removeClass(''hidden'');\r\n	});\r\n\r\n	selectUbuntu.click(function(){\r\n		hideAllInstructions();\r\n		osUbuntu.removeClass(''hidden'');\r\n	});\r\n\r\n	selectCentos.click(function(){\r\n		hideAllInstructions();\r\n		osCentos.removeClass(''hidden'');\r\n	});\r\n}\r\n\r\nfunction dloadCounter()\r\n{\r\n	dSecs = parseInt(dSecs);\r\n	dCounter.html(''''+ dSecs +'''');\r\n\r\n	if(dSecs === 0)\r\n	{\r\n		// Stop timeout counter\r\n		window.location.assign(''http://easyrtc.com/files/easyrtc_server_example.zip'');\r\n	}\r\n	else\r\n	{\r\n		console.log(dSecs);\r\n		setTimeout(function(){dloadCounter()}, 1000);\r\n	}\r\n\r\n	dSecs--;\r\n}\r\n\r\n$(document).ready(function()\r\n{\r\n	dCounter = $(''#dCounter'');\r\n	dSecs = 5;\r\n\r\n	// Set Radio button objects\r\n	selectWindows = $(''#select_windows'');\r\n	selectMac = $(''#select_mac'')\r\n	selectUbuntu = $(''#select_ubuntu'')\r\n	selectCentos = $(''#select_centos'');\r\n\r\n	// Set Operating System Instruction objects\r\n	osWindows = $(''#windows'');\r\n	osMac = $(''#mac'');\r\n	osUbuntu = $(''#ubuntu'');\r\n	osCentos = $(''#centos'');\r\n\r\n	setInstructions(returnSystemType());\r\n\r\n	setOptionsOnclick();\r\n\r\n	// Start Download Countdown\r\n	dloadCounter();\r\n});</pre>', '自动下载JS', '', 'publish', 'open', 'open', '', '%e8%87%aa%e5%8a%a8%e4%b8%8b%e8%bd%bdjs', '', '', '2014-05-19 00:24:49', '2014-05-18 16:24:49', '', 0, 'http://afeier.sinaapp.com/?p=97', 0, 'post', '', 0),
(98, 1, '2014-05-19 00:24:45', '2014-05-18 16:24:45', '<pre>var dCounter, dSecs;\nvar osWindows, osMac, osUbuntu, osCentos;\nvar selectWindows, selectMac, selectUbuntu, selectCentos;\n\nfunction setInstructions(osType)\n{\n	// Deselect all Radio Options\n	selectWindows.removeAttr(''checked'');\n	selectMac.removeAttr(''checked'');\n	selectUbuntu.removeAttr(''checked'');\n	selectCentos.removeAttr(''checked'');\n\n	switch(osType)\n	{\n	case ''windows'':\n		selectWindows.attr(''checked'', true);\n		selectWindows[0].checked = true;\n		osWindows.removeClass(''hidden'');\n		break;\n	case ''mac'':\n		selectMac.attr(''checked'', true);\n		selectMac[0].checked = true;\n		osMac.removeClass(''hidden'');\n		break;\n	case ''ubuntu'':\n		selectUbuntu.attr(''checked'', true);\n		selectUbuntu[0].checked = true;\n		osUbuntu.removeClass(''hidden'');\n		break;\n	case ''centos'':\n		selectCentos.attr(''checked'', true);\n		selectCentos[0].checked = true;\n		osCentos.removeClass(''hidden'');\n		break;\n	default:\n		selectWindows.attr(''checked'', true);\n		selectWindows[0].checked = true;\n		osWindows.removeClass(''hidden'');\n		break;\n	}\n}\n\nfunction returnSystemType()\n{\n	var os = navigator.userAgent;\n	os = os.toLowerCase();\n\n	if(os.indexOf(''windows'') != -1)\n	{\n		return ''windows'';\n	}\n	else if(os.indexOf(''mac'') != -1)\n	{\n		return ''mac'';\n	}\n	else if(os.indexOf(''ubuntu'') != -1)\n	{\n		return ''ubuntu'';\n	}\n	else if(os.indexOf(''linux'') != -1)\n	{\n		return ''centos'';\n	}\n	else\n	{\n		return ''windows'';\n	}\n\n}\n\nfunction hideAllInstructions()\n{\n	osWindows.addClass(''hidden'');\n	osMac.addClass(''hidden'');\n	osUbuntu.addClass(''hidden'');\n	osCentos.addClass(''hidden'');\n}\n\nfunction setOptionsOnclick()\n{\n	selectWindows.click(function(){\n		hideAllInstructions();\n		osWindows.removeClass(''hidden'');\n	});\n\n	selectMac.click(function(){\n		hideAllInstructions();\n		osMac.removeClass(''hidden'');\n	});\n\n	selectUbuntu.click(function(){\n		hideAllInstructions();\n		osUbuntu.removeClass(''hidden'');\n	});\n\n	selectCentos.click(function(){\n		hideAllInstructions();\n		osCentos.removeClass(''hidden'');\n	});\n}\n\nfunction dloadCounter()\n{\n	dSecs = parseInt(dSecs);\n	dCounter.html(''''+ dSecs +'''');\n\n	if(dSecs === 0)\n	{\n		// Stop timeout counter\n		window.location.assign(''http://easyrtc.com/files/easyrtc_server_example.zip'');\n	}\n	else\n	{\n		console.log(dSecs);\n		setTimeout(function(){dloadCounter()}, 1000);\n	}\n\n	dSecs--;\n}\n\n$(document).ready(function()\n{\n	dCounter = $(''#dCounter'');\n	dSecs = 5;\n\n	// Set Radio button objects\n	selectWindows = $(''#select_windows'');\n	selectMac = $(''#select_mac'')\n	selectUbuntu = $(''#select_ubuntu'')\n	selectCentos = $(''#select_centos'');\n\n	// Set Operating System Instruction objects\n	osWindows = $(''#windows'');\n	osMac = $(''#mac'');\n	osUbuntu = $(''#ubuntu'');\n	osCentos = $(''#centos'');\n\n	setInstructions(returnSystemType());\n\n	setOptionsOnclick();\n\n	// Start Download Countdown\n	dloadCounter();\n});</pre>', '自动下载JS', '', 'inherit', 'open', 'open', '', '97-revision', '', '', '2014-05-19 00:24:45', '2014-05-18 16:24:45', '', 97, 'http://afeier.sinaapp.com/?p=98', 0, 'revision', '', 0),
(99, 1, '2014-05-19 00:25:54', '2014-05-18 16:25:54', '<pre>var dCounter, dSecs;\nvar osWindows, osMac, osUbuntu, osCentos;\nvar selectWindows, selectMac, selectUbuntu, selectCentos;\n\nfunction setInstructions(osType)\n{\n	// Deselect all Radio Options\n	selectWindows.removeAttr(''checked'');\n	selectMac.removeAttr(''checked'');\n	selectUbuntu.removeAttr(''checked'');\n	selectCentos.removeAttr(''checked'');\n\n	switch(osType)\n	{\n	case ''windows'':\n		selectWindows.attr(''checked'', true);\n		selectWindows[0].checked = true;\n		osWindows.removeClass(''hidden'');\n		break;\n	case ''mac'':\n		selectMac.attr(''checked'', true);\n		selectMac[0].checked = true;\n		osMac.removeClass(''hidden'');\n		break;\n	case ''ubuntu'':\n		selectUbuntu.attr(''checked'', true);\n		selectUbuntu[0].checked = true;\n		osUbuntu.removeClass(''hidden'');\n		break;\n	case ''centos'':\n		selectCentos.attr(''checked'', true);\n		selectCentos[0].checked = true;\n		osCentos.removeClass(''hidden'');\n		break;\n	default:\n		selectWindows.attr(''checked'', true);\n		selectWindows[0].checked = true;\n		osWindows.removeClass(''hidden'');\n		break;\n	}\n}\n\nfunction returnSystemType()\n{\n	var os = navigator.userAgent;\n	os = os.toLowerCase();\n\n	if(os.indexOf(''windows'') != -1)\n	{\n		return ''windows'';\n	}\n	else if(os.indexOf(''mac'') != -1)\n	{\n		return ''mac'';\n	}\n	else if(os.indexOf(''ubuntu'') != -1)\n	{\n		return ''ubuntu'';\n	}\n	else if(os.indexOf(''linux'') != -1)\n	{\n		return ''centos'';\n	}\n	else\n	{\n		return ''windows'';\n	}\n\n}\n\nfunction hideAllInstructions()\n{\n	osWindows.addClass(''hidden'');\n	osMac.addClass(''hidden'');\n	osUbuntu.addClass(''hidden'');\n	osCentos.addClass(''hidden'');\n}\n\nfunction setOptionsOnclick()\n{\n	selectWindows.click(function(){\n		hideAllInstructions();\n		osWindows.removeClass(''hidden'');\n	});\n\n	selectMac.click(function(){\n		hideAllInstructions();\n		osMac.removeClass(''hidden'');\n	});\n\n	selectUbuntu.click(function(){\n		hideAllInstructions();\n		osUbuntu.removeClass(''hidden'');\n	});\n\n	selectCentos.click(function(){\n		hideAllInstructions();\n		osCentos.removeClass(''hidden'');\n	});\n}\n\nfunction dloadCounter()\n{\n	dSecs = parseInt(dSecs);\n	dCounter.html(''''+ dSecs +'''');\n\n	if(dSecs === 0)\n	{\n		// Stop timeout counter\n		window.location.assign(''http://easyrtc.com/files/easyrtc_server_example.zip'');\n	}\n	else\n	{\n		console.log(dSecs);\n		setTimeout(function(){dloadCounter()}, 1000);\n	}\n\n	dSecs--;\n}\n\n$(document).ready(function()\n{\n	dCounter = $(''#dCounter'');\n	dSecs = 5;\n\n	// Set Radio button objects\n	selectWindows = $(''#select_windows'');\n	selectMac = $(''#select_mac'')\n	selectUbuntu = $(''#select_ubuntu'')\n	selectCentos = $(''#select_centos'');\n\n	// Set Operating System Instruction objects\n	osWindows = $(''#windows'');\n	osMac = $(''#mac'');\n	osUbuntu = $(''#ubuntu'');\n	osCentos = $(''#centos'');\n\n	setInstructions(returnSystemType());\n\n	setOptionsOnclick();\n\n	// Start Download Countdown\n	dloadCounter();\n});</pre>', '自动下载JS', '', 'inherit', 'open', 'open', '', '97-autosave', '', '', '2014-05-19 00:25:54', '2014-05-18 16:25:54', '', 97, 'http://afeier.sinaapp.com/?p=99', 0, 'revision', '', 0),
(100, 1, '2014-05-25 10:02:04', '2014-05-25 02:02:04', 'apt-get install package=version\r\n安装包\r\napt-get install package - - reinstall\r\n重新安装包\r\napt-get -f install\r\n强制安装?#"-f = --fix-missing"当是修复安装吧...\r\napt-get remove package\r\n删除包\r\napt-get remove package - - purge\r\n删除包，包括删除配置文件等\r\napt-get update\r\n更新源\r\napt-get upgrade\r\n更新已安装的包\r\napt-get dist-upgrade\r\n升级系统\r\napt-get dselect-upgrade\r\n使用 dselect 升级\r\napt-get build-dep package\r\n安装相关的编译环境\r\napt-get source package\r\n下载该包的源代码\r\napt-get clean &amp;&amp; sudo apt-get autoclean\r\n清理下载文件的存档 &amp;&amp; 只清理无用的包\r\napt-get check\r\n检查是否有损坏的依赖\r\n\r\napt-cache是一个apt软件包管理工具，它可查询apt的二进制软件包缓存文件。\r\n通过它我们可查询软件包的状态信息。\r\n\r\napt-cache show package\r\n获取包的相关信息，如说明、大小、版本等\r\napt-cache show package\r\n显示软件的信息，包括版本号，安装状态和包依赖关系等。\r\napt-cache search package\r\n搜索软件包，可用正则表达式。\r\napt-cache showpkg package_name\r\n显示软件包的依赖关系信息。\r\napt-cache policy package_name\r\n显示软件包的安装状态和版本信息。\r\napt-cache depends package_name\r\n显示指定软件包所依赖的软件包。\r\napt-cache rdepends package_name\r\n显示软件包的反向依赖关系，即有什么软件包需依赖你所指定的软件包。', 'apt相关命令', '', 'publish', 'open', 'open', '', 'apt%e7%9b%b8%e5%85%b3%e5%91%bd%e4%bb%a4', '', '', '2014-06-02 10:58:35', '2014-06-02 02:58:35', '', 0, 'http://afeier.sinaapp.com/?p=100', 0, 'post', '', 0),
(101, 1, '2014-05-25 10:02:02', '2014-05-25 02:02:02', 'apt-get install package\n安装包\napt-get install package - - reinstall\n重新安装包\napt-get -f install\n强制安装?#"-f = --fix-missing"当是修复安装吧...\napt-get remove package\n删除包\napt-get remove package - - purge\n删除包，包括删除配置文件等\napt-get update\n更新源\napt-get upgrade\n更新已安装的包\napt-get dist-upgrade\n升级系统\napt-get dselect-upgrade\n使用 dselect 升级\napt-get build-dep package\n安装相关的编译环境\napt-get source package\n下载该包的源代码\napt-get clean &amp;&amp; sudo apt-get autoclean\n清理下载文件的存档 &amp;&amp; 只清理无用的包\napt-get check\n检查是否有损坏的依赖\n\napt-cache是一个apt软件包管理工具，它可查询apt的二进制软件包缓存文件。\n通过它我们可查询软件包的状态信息。\n\n\napt-cache show package\n获取包的相关信息，如说明、大小、版本等\napt-cache show package\n显示软件的信息，包括版本号，安装状态和包依赖关系等。\napt-cache search package\n搜索软件包，可用正则表达式。\napt-cache showpkg package_name\n显示软件包的依赖关系信息。\napt-cache policy package_name\n显示软件包的安装状态和版本信息。\napt-cache depends package_name\n显示指定软件包所依赖的软件包。\napt-cache rdepends package_name\n显示软件包的反向依赖关系，即有什么软件包需依赖你所指定的软件包。', 'apt相关命令', '', 'inherit', 'open', 'open', '', '100-revision', '', '', '2014-05-25 10:02:02', '2014-05-25 02:02:02', '', 100, 'http://afeier.sinaapp.com/?p=101', 0, 'revision', '', 0),
(102, 1, '2014-06-02 10:59:38', '2014-06-02 02:59:38', 'apt-get install package=version\n安装包\napt-get install package - - reinstall\n重新安装包\napt-get -f install\n强制安装?#"-f = --fix-missing"当是修复安装吧...\napt-get remove package\n删除包\napt-get remove package - - purge\n删除包，包括删除配置文件等\napt-get update\n更新源\napt-get upgrade\n更新已安装的包\napt-get dist-upgrade\n升级系统\napt-get dselect-upgrade\n使用 dselect 升级\napt-get build-dep package\n安装相关的编译环境\napt-get source package\n下载该包的源代码\napt-get clean &amp;&amp; sudo apt-get autoclean\n清理下载文件的存档 &amp;&amp; 只清理无用的包\napt-get check\n检查是否有损坏的依赖\n\napt-cache是一个apt软件包管理工具，它可查询apt的二进制软件包缓存文件。\n通过它我们可查询软件包的状态信息。\n\napt-cache show package\n获取包的相关信息，如说明、大小、版本等\napt-cache show package\n显示软件的信息，包括版本号，安装状态和包依赖关系等。\napt-cache search package\n搜索软件包，可用正则表达式。\napt-cache showpkg package_name\n显示软件包的依赖关系信息。\napt-cache policy package_name\n显示软件包的安装状态和版本信息。\napt-cache depends package_name\n显示指定软件包所依赖的软件包。\napt-cache rdepends package_name\n显示软件包的反向依赖关系，即有什么软件包需依赖你所指定的软件包。', 'apt相关命令', '', 'inherit', 'open', 'open', '', '100-autosave', '', '', '2014-06-02 10:59:38', '2014-06-02 02:59:38', '', 100, 'http://afeier.sinaapp.com/?p=102', 0, 'revision', '', 0),
(104, 1, '2014-05-25 10:02:04', '2014-05-25 02:02:04', 'apt-get install package\r\n安装包\r\napt-get install package - - reinstall\r\n重新安装包\r\napt-get -f install\r\n强制安装?#"-f = --fix-missing"当是修复安装吧...\r\napt-get remove package\r\n删除包\r\napt-get remove package - - purge\r\n删除包，包括删除配置文件等\r\napt-get update\r\n更新源\r\napt-get upgrade\r\n更新已安装的包\r\napt-get dist-upgrade\r\n升级系统\r\napt-get dselect-upgrade\r\n使用 dselect 升级\r\napt-get build-dep package\r\n安装相关的编译环境\r\napt-get source package\r\n下载该包的源代码\r\napt-get clean &amp;&amp; sudo apt-get autoclean\r\n清理下载文件的存档 &amp;&amp; 只清理无用的包\r\napt-get check\r\n检查是否有损坏的依赖\r\n\r\napt-cache是一个apt软件包管理工具，它可查询apt的二进制软件包缓存文件。\r\n通过它我们可查询软件包的状态信息。\r\n\r\n\r\napt-cache show package\r\n获取包的相关信息，如说明、大小、版本等\r\napt-cache show package\r\n显示软件的信息，包括版本号，安装状态和包依赖关系等。\r\napt-cache search package\r\n搜索软件包，可用正则表达式。\r\napt-cache showpkg package_name\r\n显示软件包的依赖关系信息。\r\napt-cache policy package_name\r\n显示软件包的安装状态和版本信息。\r\napt-cache depends package_name\r\n显示指定软件包所依赖的软件包。\r\napt-cache rdepends package_name\r\n显示软件包的反向依赖关系，即有什么软件包需依赖你所指定的软件包。', 'apt相关命令', '', 'inherit', 'open', 'open', '', '100-revision-2', '', '', '2014-05-25 10:02:04', '2014-05-25 02:02:04', '', 100, 'http://afeier.sinaapp.com/?p=104', 0, 'revision', '', 0),
(301, 1, '2014-06-16 17:19:00', '2014-06-16 09:19:00', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n//×××××××\r\n\r\n开发环境安装这个东东，正式环境不装\r\n\r\nhttp://www.laruence.com/2012/02/14/2544.html\r\n\r\n/××××××××\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n开启过滤\r\n\r\nfilter.default = full_special_chars\r\nfilter.default_flags = 0\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n3、把交换分区也关闭掉，修改/etc/rc.local\r\n\r\n加入：swapoff -a\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-7', '', '', '2014-06-16 17:19:00', '2014-06-16 09:19:00', '', 12, 'http://afeier.sinaapp.com/?p=301', 0, 'revision', '', 0),
(106, 1, '2014-02-28 14:53:54', '2014-02-28 06:53:54', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n&nbsp;\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-3', '', '', '2014-02-28 14:53:54', '2014-02-28 06:53:54', '', 12, 'http://afeier.sinaapp.com/?p=106', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(108, 1, '2014-06-14 17:45:52', '2014-06-14 09:45:52', '<div></div>\r\n<div id="cnblogs_post_body">这里说明，<strong>Ubuntu</strong> 中系统没有了<strong>RH</strong>系统中的<em> chkconfig </em>命令 ！可用一些小工具来管理<strong> Ubuntu</strong> 的启动选项：\r\n<em>小工具</em> <strong>rcconf</strong>：\r\n<strong>#sudo apt-get rcconf</strong>\r\n<strong>#sudo apt-get install rcconf</strong>\r\nroot 下运行: <strong>#sudo rcconf</strong>\r\n<em><strong>功能更全的工具</strong></em>：<strong>sysv-rc-conf</strong>\r\n<strong>#sudo apt-get update</strong>\r\n<strong>#sudo apt-get install sysv-rc-conf</strong>\r\n运行：<strong>#sudo sysv-rc-conf</strong>\r\n也可以直接加入启动程序，例如把 /etc/init.d/red5 加入到系统自动启动列表中：\r\n<strong><code>#sudo sysv-rc-conf red5 on</code></strong>\r\n其他使用方法见: google::Ubuntu::sysv-rc-conf 命令用法\r\n\r\n也可以直接修改\r\n直接改 /etc/rc0.d ~ /etc/rc6.d 和 /etc/rcS.d 下的东西，<strong>S</strong>开头的表示启动，<strong>K</strong>开头的表示不启动，\r\n例如：想关闭 Red5 的开机自动启动，只需 #sudo mv /etc/rc2.d/S20red5 /etc/rc2.d/K20red5 就可以了。\r\n\r\n<strong>Ubuntu自动启动程序</strong>\r\n\r\n首 先，linux随机启动的服务程序都在/etc/init.d这个文件夹里，里面的文件全部都是脚本文件（脚本程序简单的说就是把要运行的程序写 到一个 文件里让系统能够按顺序执行，类似windows下的autorun.dat文件），另外在/etc这个文件夹里还有诸如名为rc1.d, rc2.d一直到rc6.d的文件夹，这些都是linux不同的runlevel，我们一般进入的X windows多用户的运行级别是第5级，也就是rc5.d，在这个文件夹下的脚本文件就是运行第5级时要随机启动的服务程序。需要注意的是，在每个rc (1-6).d文件夹下的文件其实都是/etc/init.d文件夹下的文件的一个软连接（类似windows中的快捷方式），也就是说，在 /etc/init.d文件夹下是全部的服务程序，而每个rc(1-6).d只链接它自己启动需要的相应的服务程序！\r\n\r\n要 启动scim (某一程序)，我们首先要知道scim程序在哪里，用locate命令可以找到，scim在/usr/bin/scim这里，其中usr表 示是 属于用户的，bin在linux里表示可以执行的程序。这样，我就可以编写一个脚本程序，把它放到/etc/init.d里，然后在rc5.d里做一个相 应的软链接就可以了。\r\n\r\n这个脚本其实很简单，就两行：\r\n\r\n#!/bin/bash\r\n\r\n/usr/bin/scim\r\n\r\n第一行是声明用什么终端运行这个脚本，第二行就是要运行的命令。\r\n\r\n还 需要注意的一点是，在rc5.d里，每个链接的名字都是以S或者K开头的，S开头的表示是系统启动是要随机启动的，K开头的是不随机启动的。这 样，你就可以知道，如果我要哪个服务随机启动，就把它名字第一个字母K改成S就可以了，当然，把S改成K后，这个服务就不能随机启动了。因此，我这个链接 还要起名为SXXX，这样系统才能让它随机启动。\r\n<pre>在RH下，rc.local是默认启动的最后一个脚本文件，所以，</pre>\r\n<pre>如果你想要随机启动，还有一种方法就是在rc.local的尾部加入/usr/bin/scim，这样就可以了。</pre>\r\n<strong>Linux 自动启动程序</strong>\r\n\r\n<strong>1．开机启动时自动运行程序</strong>\r\n\r\nLinux 加载后, 它将初始化硬件和设备驱动, 然后运行第一个进程init。init根据配置文件继续引导过程，启动其它进程。通常情况下，修改放置在 /etc/rc或 /etc/rc.d 或 /etc/rc?.d 目录下的脚本文件，可以使init自动启动其它程序。例如：编辑 /etc/rc.d/rc.local 文件(该文件通常是系统最后启动的脚本)，在文件最末加上一行“xinit”或“startx”，可以在开机启动后直接进入X－Window。\r\n\r\n<strong>2．登录时自动运行程序</strong>\r\n\r\n用 户登录时，bash首先自动执行系统管理员建立的全局登录script ：/ect/profile。然后bash在用户起始目录下按顺序查找三个特殊文件中的一个：/.bash_profile、/.bash_login、 /.profile，但只执行最先找到的一个。\r\n因此，只需根据实际需要在上述文件中加入命令就可以实现用户登录时自动运行某些程序（类似于DOS下的Autoexec.bat）。\r\n\r\n<strong>3．退出登录时自动运行程序</strong>\r\n\r\n退出登录时，bash自动执行个人的退出登录脚本/.bash_logout。例如，在/.bash_logout中加入命令“tar －cvzf c.source.tgz ＊.c”，则在每次退出登录时自动执行 “tar” 命令备份 ＊.c 文件。\r\n\r\n<strong>4．定期自动运行程序</strong>\r\n\r\nLinux有一个称为crond的守护程序，主要功能是周期性地检查 /var/spool/cron目录下的一组命令文件的内容，并在设定的时间执行这些文件中的命令。用户可以通过crontab 命令来建立、修改、删除这些命令文件。\r\n\r\n例如，建立文件crondFile，内容为“00 9 23 Jan ＊ HappyBirthday”，运行“crontab cronFile”命令后，每当元月23日上午9:00系统自动执行“HappyBirthday”的程序（“＊”表示不管当天是星期几）。\r\n\r\n<strong>5．定时自动运行程序一次</strong>\r\n\r\n定时执行命令at 与crond 类似（但它只执行一次）：命令在给定的时间执行，但不自动重复。at命令的一般格式为：at [ －f file ] time ，在指定的时间执行file文件中所给出的所有命令。也可直接从键盘输入命令：\r\n\r\n＄ at 12:00\r\nat&gt;mailto Roger －s ″Have a lunch″ &lt; plan.txt\r\nat&gt;Ctr－D\r\nJob 1 at 2000－11－09 12:00\r\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。?9 12:00\r\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。er。ger。er。\r\n\r\n<strong>Ubuntu 开机自动挂载windows分区</strong>\r\n\r\n要挂载NTFS格式分区，需要NTFS-3g这个软件。它短小精悍，而且功能强大。\r\nNTFS-3g是一个开源软件，它支持在Windows下面读写NTFS格式的分区。它非常的快速，同时也很安全。它支持Windows 2000、XP和2003，并且支持所有的符合POSIX标准的磁盘操作。\r\n\r\n<strong>首先要编辑sources.list</strong>\r\n<strong>#sudo gedit /etc/apt/sources.list</strong>\r\n\r\n<strong>Ubuntu Drapper添加：</strong>\r\ndeb http://givre.cabspace.com/ubuntu/ dapper main main-all\r\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ dapper main main-all\r\ndeb http://flomertens.keo.in/ubuntu/ dapper main main-all\r\n\r\n<strong>Ubuntu Edgy添加：</strong>\r\ndeb http://givre.cabspace.com/ubuntu/ edgy main\r\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ edgy main\r\ndeb http://flomertens.keo.in/ubuntu/ edgy main\r\n\r\n<strong>同时必须导入GPG-Key，可以这样：</strong>\r\n<strong>#wget http://flomertens.keo.in/ubuntu/givre_key.asc -O- | sudo apt-key add -\r\n#wget http://givre.cabspace.com/ubuntu/givre_key.asc -O- | sudo apt-key add -\r\n</strong>\r\n<strong>现在更新一下源：</strong>\r\n<strong>#sudo aptitude update</strong>\r\n\r\n<strong>正式安装</strong>\r\n\r\n在“终端”下面运行：\r\n<strong>#sudo apt-get install ntfs-3g</strong>\r\n\r\n<strong>配置NTFS-3g</strong>\r\n\r\n首先看一些硬盘分区的分区类型\r\n<strong>#sudo fdisk -l</strong>\r\n\r\n现在就可以修改 /etc/fstab，来让Ubuntu启动的时候自动挂载NTFS分区了。但是首先请备份一下这个文件：\r\n<strong>#sudo cp /etc/fstab /etc/fstab.bak</strong>\r\n\r\n建立挂载点，譬如挂载在 /media/windows 下面\r\n<strong>#sudo mkdir /media/windows</strong>\r\n\r\n现在可以在 /etc/fstab 的后面添加\r\n/dev/hda1 /media/ ntfs-3g defaults,locale=zh_CN.utf8 0 0\r\n根据自己的情况进行修改。\r\n\r\n<strong>一些示例</strong>\r\n\r\n挂载 /dev/hda3\r\n添加 /dev/hda3 /media/windows ntfs-3g ro,locale=zh_CN.utf8,uid=1000 0 0\r\n\r\n<strong>关于自己的locale</strong>\r\n\r\n可以用下面的命令查看所有的locale\r\n<strong>#locale -a</strong>\r\n\r\n如果不想重新启动，就可以\r\n<strong>#sudo umount -a\r\n#sudo mount -a\r\n</strong>\r\n<strong>最后一个挂载FAT分区的命令</strong>\r\n<strong>#sudo mount /dev/hda3 /media/windows/ -t vfat -o iocharset=utf8,umask=000</strong>\r\n\r\n<strong>当然可以在/etc/fstab里面添加</strong>\r\n/dev/hda3 /media/windows vfat iocharset=utf8,umask=000 0 0\r\n\r\n<strong>Openfire随着Ubuntu自动启动</strong>\r\n\r\nopenfire缺省情况下，是不随机启动的。为了解决每次都要手工启动的麻烦，我编写了一个脚本，放在/etc/init.d目录里面\r\n<strong>#sudo vim /etc/init.d/openfire</strong>\r\n内容如下：\r\n\r\n#!/bin/sh\r\n\r\nopenfire_start(){\r\n/etc/openfire/bin/openfire start\r\n}\r\n\r\nopenfire_stop(){\r\n/etc/openfire/bin/openfire stop\r\n}\r\n\r\ncase $1 in\r\nstart)\r\nopenfire_start\r\n;;\r\nstop)\r\nopenfrie_stop\r\n;;\r\n*)\r\necho ‘Usage:openfire start|stop’\r\n;;\r\nesac\r\n\r\n</div>', 'ubuntu下设置开机自启动项', '', 'publish', 'open', 'open', '', 'ubuntu%e4%b8%8b%e8%ae%be%e7%bd%ae%e5%bc%80%e6%9c%ba%e8%87%aa%e5%90%af%e5%8a%a8%e9%a1%b9', '', '', '2014-06-14 17:45:52', '2014-06-14 09:45:52', '', 0, 'http://afeier.sinaapp.com/?p=108', 0, 'post', '', 0),
(109, 1, '2014-06-14 17:45:47', '2014-06-14 09:45:47', '<div></div>\n<div id="cnblogs_post_body">这里说明，<strong>Ubuntu</strong> 中系统没有了<strong>RH</strong>系统中的<em> chkconfig </em>命令 ！可用一些小工具来管理<strong> Ubuntu</strong> 的启动选项：\n<em>小工具</em> <strong>rcconf</strong>：\n<strong>#sudo apt-get rcconf</strong>\n<strong>#sudo apt-get install rcconf</strong>\nroot 下运行: <strong>#sudo rcconf</strong>\n<em><strong>功能更全的工具</strong></em>：<strong>sysv-rc-conf</strong>\n<strong>#sudo apt-get update</strong>\n<strong>#sudo apt-get install sysv-rc-conf</strong>\n运行：<strong>#sudo sysv-rc-conf</strong>\n也可以直接加入启动程序，例如把 /etc/init.d/red5 加入到系统自动启动列表中：\n<strong><code>#sudo sysv-rc-conf red5 on</code></strong>\n其他使用方法见: google::Ubuntu::sysv-rc-conf 命令用法\n\n也可以直接修改\n直接改 /etc/rc0.d ~ /etc/rc6.d 和 /etc/rcS.d 下的东西，<strong>S</strong>开头的表示启动，<strong>K</strong>开头的表示不启动，\n例如：想关闭 Red5 的开机自动启动，只需 #sudo mv /etc/rc2.d/S20red5 /etc/rc2.d/K20red5 就可以了。\n\n<strong>Ubuntu自动启动程序</strong>\n\n首 先，linux随机启动的服务程序都在/etc/init.d这个文件夹里，里面的文件全部都是脚本文件（脚本程序简单的说就是把要运行的程序写 到一个 文件里让系统能够按顺序执行，类似windows下的autorun.dat文件），另外在/etc这个文件夹里还有诸如名为rc1.d, rc2.d一直到rc6.d的文件夹，这些都是linux不同的runlevel，我们一般进入的X windows多用户的运行级别是第5级，也就是rc5.d，在这个文件夹下的脚本文件就是运行第5级时要随机启动的服务程序。需要注意的是，在每个rc (1-6).d文件夹下的文件其实都是/etc/init.d文件夹下的文件的一个软连接（类似windows中的快捷方式），也就是说，在 /etc/init.d文件夹下是全部的服务程序，而每个rc(1-6).d只链接它自己启动需要的相应的服务程序！\n\n要 启动scim (某一程序)，我们首先要知道scim程序在哪里，用locate命令可以找到，scim在/usr/bin/scim这里，其中usr表 示是 属于用户的，bin在linux里表示可以执行的程序。这样，我就可以编写一个脚本程序，把它放到/etc/init.d里，然后在rc5.d里做一个相 应的软链接就可以了。\n\n这个脚本其实很简单，就两行：\n\n#!/bin/bash\n\n/usr/bin/scim\n\n第一行是声明用什么终端运行这个脚本，第二行就是要运行的命令。\n\n还 需要注意的一点是，在rc5.d里，每个链接的名字都是以S或者K开头的，S开头的表示是系统启动是要随机启动的，K开头的是不随机启动的。这 样，你就可以知道，如果我要哪个服务随机启动，就把它名字第一个字母K改成S就可以了，当然，把S改成K后，这个服务就不能随机启动了。因此，我这个链接 还要起名为SXXX，这样系统才能让它随机启动。\n<pre>在RH下，rc.local是默认启动的最后一个脚本文件，所以，</pre>\n<pre>如果你想要随机启动，还有一种方法就是在rc.local的尾部加入/usr/bin/scim，这样就可以了。</pre>\n<strong>Linux 自动启动程序</strong>\n\n<strong>1．开机启动时自动运行程序</strong>\n\nLinux 加载后, 它将初始化硬件和设备驱动, 然后运行第一个进程init。init根据配置文件继续引导过程，启动其它进程。通常情况下，修改放置在 /etc/rc或 /etc/rc.d 或 /etc/rc?.d 目录下的脚本文件，可以使init自动启动其它程序。例如：编辑 /etc/rc.d/rc.local 文件(该文件通常是系统最后启动的脚本)，在文件最末加上一行“xinit”或“startx”，可以在开机启动后直接进入X－Window。\n\n<strong>2．登录时自动运行程序</strong>\n\n用 户登录时，bash首先自动执行系统管理员建立的全局登录script ：/ect/profile。然后bash在用户起始目录下按顺序查找三个特殊文件中的一个：/.bash_profile、/.bash_login、 /.profile，但只执行最先找到的一个。\n因此，只需根据实际需要在上述文件中加入命令就可以实现用户登录时自动运行某些程序（类似于DOS下的Autoexec.bat）。\n\n<strong>3．退出登录时自动运行程序</strong>\n\n退出登录时，bash自动执行个人的退出登录脚本/.bash_logout。例如，在/.bash_logout中加入命令“tar －cvzf c.source.tgz ＊.c”，则在每次退出登录时自动执行 “tar” 命令备份 ＊.c 文件。\n\n<strong>4．定期自动运行程序</strong>\n\nLinux有一个称为crond的守护程序，主要功能是周期性地检查 /var/spool/cron目录下的一组命令文件的内容，并在设定的时间执行这些文件中的命令。用户可以通过crontab 命令来建立、修改、删除这些命令文件。\n\n例如，建立文件crondFile，内容为“00 9 23 Jan ＊ HappyBirthday”，运行“crontab cronFile”命令后，每当元月23日上午9:00系统自动执行“HappyBirthday”的程序（“＊”表示不管当天是星期几）。\n\n<strong>5．定时自动运行程序一次</strong>\n\n定时执行命令at 与crond 类似（但它只执行一次）：命令在给定的时间执行，但不自动重复。at命令的一般格式为：at [ －f file ] time ，在指定的时间执行file文件中所给出的所有命令。也可直接从键盘输入命令：\n\n＄ at 12:00\nat&gt;mailto Roger －s ″Have a lunch″ &lt; plan.txt\nat&gt;Ctr－D\nJob 1 at 2000－11－09 12:00\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。?9 12:00\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。er。ger。er。\n\n<strong>Ubuntu 开机自动挂载windows分区</strong>\n\n要挂载NTFS格式分区，需要NTFS-3g这个软件。它短小精悍，而且功能强大。\nNTFS-3g是一个开源软件，它支持在Windows下面读写NTFS格式的分区。它非常的快速，同时也很安全。它支持Windows 2000、XP和2003，并且支持所有的符合POSIX标准的磁盘操作。\n\n<strong>首先要编辑sources.list</strong>\n<strong>#sudo gedit /etc/apt/sources.list</strong>\n\n<strong>Ubuntu Drapper添加：</strong>\ndeb http://givre.cabspace.com/ubuntu/ dapper main main-all\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ dapper main main-all\ndeb http://flomertens.keo.in/ubuntu/ dapper main main-all\n\n<strong>Ubuntu Edgy添加：</strong>\ndeb http://givre.cabspace.com/ubuntu/ edgy main\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ edgy main\ndeb http://flomertens.keo.in/ubuntu/ edgy main\n\n<strong>同时必须导入GPG-Key，可以这样：</strong>\n<strong>#wget http://flomertens.keo.in/ubuntu/givre_key.asc -O- | sudo apt-key add -\n#wget http://givre.cabspace.com/ubuntu/givre_key.asc -O- | sudo apt-key add -\n</strong>\n<strong>现在更新一下源：</strong>\n<strong>#sudo aptitude update</strong>\n\n<strong>正式安装</strong>\n\n在“终端”下面运行：\n<strong>#sudo apt-get install ntfs-3g</strong>\n\n<strong>配置NTFS-3g</strong>\n\n首先看一些硬盘分区的分区类型\n<strong>#sudo fdisk -l</strong>\n\n现在就可以修改 /etc/fstab，来让Ubuntu启动的时候自动挂载NTFS分区了。但是首先请备份一下这个文件：\n<strong>#sudo cp /etc/fstab /etc/fstab.bak</strong>\n\n建立挂载点，譬如挂载在 /media/windows 下面\n<strong>#sudo mkdir /media/windows</strong>\n\n现在可以在 /etc/fstab 的后面添加\n/dev/hda1 /media/ ntfs-3g defaults,locale=zh_CN.utf8 0 0\n根据自己的情况进行修改。\n\n<strong>一些示例</strong>\n\n挂载 /dev/hda3\n添加 /dev/hda3 /media/windows ntfs-3g ro,locale=zh_CN.utf8,uid=1000 0 0\n\n<strong>关于自己的locale</strong>\n\n可以用下面的命令查看所有的locale\n<strong>#locale -a</strong>\n\n如果不想重新启动，就可以\n<strong>#sudo umount -a\n#sudo mount -a\n</strong>\n<strong>最后一个挂载FAT分区的命令</strong>\n<strong>#sudo mount /dev/hda3 /media/windows/ -t vfat -o iocharset=utf8,umask=000</strong>\n\n<strong>当然可以在/etc/fstab里面添加</strong>\n/dev/hda3 /media/windows vfat iocharset=utf8,umask=000 0 0\n\n<strong>Openfire随着Ubuntu自动启动</strong>\n\nopenfire缺省情况下，是不随机启动的。为了解决每次都要手工启动的麻烦，我编写了一个脚本，放在/etc/init.d目录里面\n<strong>#sudo vim /etc/init.d/openfire</strong>\n内容如下：\n\n#!/bin/sh\n\nopenfire_start(){\n/etc/openfire/bin/openfire start\n}\n\nopenfire_stop(){\n/etc/openfire/bin/openfire stop\n}\n\ncase $1 in\nstart)\nopenfire_start\n;;\nstop)\nopenfrie_stop\n;;\n*)\necho ‘Usage:openfire start|stop’\n;;\nesac\n\n</div>', 'ubuntu下设置开机自启动项', '', 'inherit', 'open', 'open', '', '108-revision', '', '', '2014-06-14 17:45:47', '2014-06-14 09:45:47', '', 108, 'http://afeier.sinaapp.com/?p=109', 0, 'revision', '', 0),
(110, 1, '2014-06-14 17:46:55', '2014-06-14 09:46:55', '<div></div>\n<div id="cnblogs_post_body">这里说明，<strong>Ubuntu</strong> 中系统没有了<strong>RH</strong>系统中的<em> chkconfig </em>命令 ！可用一些小工具来管理<strong> Ubuntu</strong> 的启动选项：\n<em>小工具</em> <strong>rcconf</strong>：\n<strong>#sudo apt-get rcconf</strong>\n<strong>#sudo apt-get install rcconf</strong>\nroot 下运行: <strong>#sudo rcconf</strong>\n<em><strong>功能更全的工具</strong></em>：<strong>sysv-rc-conf</strong>\n<strong>#sudo apt-get update</strong>\n<strong>#sudo apt-get install sysv-rc-conf</strong>\n运行：<strong>#sudo sysv-rc-conf</strong>\n也可以直接加入启动程序，例如把 /etc/init.d/red5 加入到系统自动启动列表中：\n<strong><code>#sudo sysv-rc-conf red5 on</code></strong>\n其他使用方法见: google::Ubuntu::sysv-rc-conf 命令用法也可以直接修改\n直接改 /etc/rc0.d ~ /etc/rc6.d 和 /etc/rcS.d 下的东西，<strong>S</strong>开头的表示启动，<strong>K</strong>开头的表示不启动，\n例如：想关闭 Red5 的开机自动启动，只需 #sudo mv /etc/rc2.d/S20red5 /etc/rc2.d/K20red5 就可以了。\n\n<strong>Ubuntu自动启动程序</strong>\n\n首 先，linux随机启动的服务程序都在/etc/init.d这个文件夹里，里面的文件全部都是脚本文件（脚本程序简单的说就是把要运行的程序写 到一个 文件里让系统能够按顺序执行，类似windows下的autorun.dat文件），另外在/etc这个文件夹里还有诸如名为rc1.d, rc2.d一直到rc6.d的文件夹，这些都是linux不同的runlevel，我们一般进入的X windows多用户的运行级别是第5级，也就是rc5.d，在这个文件夹下的脚本文件就是运行第5级时要随机启动的服务程序。需要注意的是，在每个rc (1-6).d文件夹下的文件其实都是/etc/init.d文件夹下的文件的一个软连接（类似windows中的快捷方式），也就是说，在 /etc/init.d文件夹下是全部的服务程序，而每个rc(1-6).d只链接它自己启动需要的相应的服务程序！\n\n要 启动scim (某一程序)，我们首先要知道scim程序在哪里，用locate命令可以找到，scim在/usr/bin/scim这里，其中usr表 示是 属于用户的，bin在linux里表示可以执行的程序。这样，我就可以编写一个脚本程序，把它放到/etc/init.d里，然后在rc5.d里做一个相 应的软链接就可以了。\n\n这个脚本其实很简单，就两行：\n\n#!/bin/bash\n\n/usr/bin/scim\n\n第一行是声明用什么终端运行这个脚本，第二行就是要运行的命令。\n\n还 需要注意的一点是，在rc5.d里，每个链接的名字都是以S或者K开头的，S开头的表示是系统启动是要随机启动的，K开头的是不随机启动的。这 样，你就可以知道，如果我要哪个服务随机启动，就把它名字第一个字母K改成S就可以了，当然，把S改成K后，这个服务就不能随机启动了。因此，我这个链接 还要起名为SXXX，这样系统才能让它随机启动。\n<pre>在RH下，rc.local是默认启动的最后一个脚本文件，所以，</pre>\n<pre>如果你想要随机启动，还有一种方法就是在rc.local的尾部加入/usr/bin/scim，这样就可以了。</pre>\n<strong>Linux 自动启动程序</strong>\n\n<strong>1．开机启动时自动运行程序</strong>\n\nLinux 加载后, 它将初始化硬件和设备驱动, 然后运行第一个进程init。init根据配置文件继续引导过程，启动其它进程。通常情况下，修改放置在 /etc/rc或 /etc/rc.d 或 /etc/rc?.d 目录下的脚本文件，可以使init自动启动其它程序。例如：编辑 /etc/rc.d/rc.local 文件(该文件通常是系统最后启动的脚本)，在文件最末加上一行“xinit”或“startx”，可以在开机启动后直接进入X－Window。\n\n<strong>2．登录时自动运行程序</strong>\n\n用 户登录时，bash首先自动执行系统管理员建立的全局登录script ：/ect/profile。然后bash在用户起始目录下按顺序查找三个特殊文件中的一个：/.bash_profile、/.bash_login、 /.profile，但只执行最先找到的一个。\n因此，只需根据实际需要在上述文件中加入命令就可以实现用户登录时自动运行某些程序（类似于DOS下的Autoexec.bat）。\n\n<strong>3．退出登录时自动运行程序</strong>\n\n退出登录时，bash自动执行个人的退出登录脚本/.bash_logout。例如，在/.bash_logout中加入命令“tar －cvzf c.source.tgz ＊.c”，则在每次退出登录时自动执行 “tar” 命令备份 ＊.c 文件。\n\n<strong>4．定期自动运行程序</strong>\n\nLinux有一个称为crond的守护程序，主要功能是周期性地检查 /var/spool/cron目录下的一组命令文件的内容，并在设定的时间执行这些文件中的命令。用户可以通过crontab 命令来建立、修改、删除这些命令文件。\n\n例如，建立文件crondFile，内容为“00 9 23 Jan ＊ HappyBirthday”，运行“crontab cronFile”命令后，每当元月23日上午9:00系统自动执行“HappyBirthday”的程序（“＊”表示不管当天是星期几）。\n\n<strong>5．定时自动运行程序一次</strong>\n\n定时执行命令at 与crond 类似（但它只执行一次）：命令在给定的时间执行，但不自动重复。at命令的一般格式为：at [ －f file ] time ，在指定的时间执行file文件中所给出的所有命令。也可直接从键盘输入命令：\n\n＄ at 12:00\nat&gt;mailto Roger －s ″Have a lunch″ &lt; plan.txt\nat&gt;Ctr－D\nJob 1 at 2000－11－09 12:00\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。?9 12:00\n2000－11－09 12:00时候自动发一标题为“Have a lunch”，内容为plan.txt文件内容的邮件给Roger。er。ger。er。\n\n<strong>Ubuntu 开机自动挂载windows分区</strong>\n\n要挂载NTFS格式分区，需要NTFS-3g这个软件。它短小精悍，而且功能强大。\nNTFS-3g是一个开源软件，它支持在Windows下面读写NTFS格式的分区。它非常的快速，同时也很安全。它支持Windows 2000、XP和2003，并且支持所有的符合POSIX标准的磁盘操作。\n\n<strong>首先要编辑sources.list</strong>\n<strong>#sudo gedit /etc/apt/sources.list</strong>\n\n<strong>Ubuntu Drapper添加：</strong>\ndeb http://givre.cabspace.com/ubuntu/ dapper main main-all\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ dapper main main-all\ndeb http://flomertens.keo.in/ubuntu/ dapper main main-all\n\n<strong>Ubuntu Edgy添加：</strong>\ndeb http://givre.cabspace.com/ubuntu/ edgy main\ndeb http://ntfs-3g.sitesweetsite.info/ubuntu/ edgy main\ndeb http://flomertens.keo.in/ubuntu/ edgy main\n\n<strong>同时必须导入GPG-Key，可以这样：</strong>\n<strong>#wget http://flomertens.keo.in/ubuntu/givre_key.asc -O- | sudo apt-key add -\n#wget http://givre.cabspace.com/ubuntu/givre_key.asc -O- | sudo apt-key add -\n</strong>\n<strong>现在更新一下源：</strong>\n<strong>#sudo aptitude update</strong>\n\n<strong>正式安装</strong>\n\n在“终端”下面运行：\n<strong>#sudo apt-get install ntfs-3g</strong>\n\n<strong>配置NTFS-3g</strong>\n\n首先看一些硬盘分区的分区类型\n<strong>#sudo fdisk -l</strong>\n\n现在就可以修改 /etc/fstab，来让Ubuntu启动的时候自动挂载NTFS分区了。但是首先请备份一下这个文件：\n<strong>#sudo cp /etc/fstab /etc/fstab.bak</strong>\n\n建立挂载点，譬如挂载在 /media/windows 下面\n<strong>#sudo mkdir /media/windows</strong>\n\n现在可以在 /etc/fstab 的后面添加\n/dev/hda1 /media/ ntfs-3g defaults,locale=zh_CN.utf8 0 0\n根据自己的情况进行修改。\n\n<strong>一些示例</strong>\n\n挂载 /dev/hda3\n添加 /dev/hda3 /media/windows ntfs-3g ro,locale=zh_CN.utf8,uid=1000 0 0\n\n<strong>关于自己的locale</strong>\n\n可以用下面的命令查看所有的locale\n<strong>#locale -a</strong>\n\n如果不想重新启动，就可以\n<strong>#sudo umount -a\n#sudo mount -a\n</strong>\n<strong>最后一个挂载FAT分区的命令</strong>\n<strong>#sudo mount /dev/hda3 /media/windows/ -t vfat -o iocharset=utf8,umask=000</strong>\n\n<strong>当然可以在/etc/fstab里面添加</strong>\n/dev/hda3 /media/windows vfat iocharset=utf8,umask=000 0 0\n\n<strong>Openfire随着Ubuntu自动启动</strong>\n\nopenfire缺省情况下，是不随机启动的。为了解决每次都要手工启动的麻烦，我编写了一个脚本，放在/etc/init.d目录里面\n<strong>#sudo vim /etc/init.d/openfire</strong>\n内容如下：\n\n#!/bin/sh\n\nopenfire_start(){\n/etc/openfire/bin/openfire start\n}\n\nopenfire_stop(){\n/etc/openfire/bin/openfire stop\n}\n\ncase $1 in\nstart)\nopenfire_start\n;;\nstop)\nopenfrie_stop\n;;\n*)\necho ‘Usage:openfire start|stop’\n;;\nesac\n\n</div>', 'ubuntu下设置开机自启动项', '', 'inherit', 'open', 'open', '', '108-autosave', '', '', '2014-06-14 17:46:55', '2014-06-14 09:46:55', '', 108, 'http://afeier.sinaapp.com/?p=110', 0, 'revision', '', 0),
(130, 1, '2014-06-23 15:26:59', '2014-06-23 07:26:59', '<h1></h1>\r\n<div></div>\r\n<div id="note_170186265_full">\r\n<div id="link-report">\r\n默认情况下，mysql的数据目录是/var/lib/mysql，因为如果你的数据库以后会越来越大，那么你就得考虑用一个空间足够大的分区来存放数据库文件，所以还是选择把它修改到其他位置，比如/usr/data/mysql_data。这个目录可以直接挂载一个大硬盘。\r\n\r\n具体修改方式如下（为了方便起见，你可以先用su命令将系统当前用户转到root，否则以下命令可能都需要加上sudo 前缀）：\r\n\r\n1、 /etc/init.d/mysql stop\r\n\r\n2、 chown mysql:mysql /usr/data/mysql_data\r\n\r\n3、vim /etc/mysql/my.cnf\r\n\r\n找到datadir=/var/lib/mysql\r\n\r\n将它改为datadir=/usr/data/mysql_data\r\n\r\n4、cp -a /var/lib/mysql/* /usr/data/mysql_data\r\n\r\n5、vim /etc/apparmor.d/usr.sbin.mysqld\r\n我们会看到此文件中有2行：\r\n\r\n/var/lib/mysql/ r,\r\n/var/lib/mysql/** rwk,\r\n以上是针对默认数据目录的权限配置，所以据此我们增加两行，指向新目录，设置同样的权限：\r\n/newdir/mysql/ r,\r\n/newdir/mysql/** rwk,\r\n\r\n6、/etc/init.d/apparmor restart\r\n\r\n7、 /etc/init.d/mysql start\r\n\r\nOK，到此就已经成功转移了mysql数据目录。\r\n\r\n\r\n\r\n为了测试，我们登入mysql，然后创建一个数据库newdb，再看一下/usr/data/mysql_data目录，发现多了一个newdb目录，说明数据目录已经成功转移到新目录下了。</div>\r\n</div>', '[ZT]ubuntu系统下更改mysql数据目录的方法', '', 'publish', 'open', 'open', '', 'ztubuntu%e7%b3%bb%e7%bb%9f%e4%b8%8b%e6%9b%b4%e6%94%b9mysql%e6%95%b0%e6%8d%ae%e7%9b%ae%e5%bd%95%e7%9a%84%e6%96%b9%e6%b3%95', '', '', '2014-06-23 15:26:59', '2014-06-23 07:26:59', '', 0, 'http://afeier.sinaapp.com/?p=130', 0, 'post', '', 0),
(112, 1, '2014-06-14 17:45:15', '2014-06-14 09:45:15', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n&nbsp;\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n&nbsp;\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-4', '', '', '2014-06-14 17:45:15', '2014-06-14 09:45:15', '', 12, 'http://afeier.sinaapp.com/?p=112', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(192, 1, '2014-08-15 12:14:59', '2014-08-15 04:14:59', '一、安装centos,/分区20G，其它给/datas。\r\n<pre>fdisk -S 56 /dev/xvdb          <span style="font-family: ''Courier 10 Pitch'', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">“</span><span style="font-family: ''Courier 10 Pitch'', Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;">n”,“p”,“1” //分区</span>\r\n/dev/xvdb1  /datas   ext3   defaults,nosuid,noexec,nodev 1 2  //挂载</pre>\r\n二、优化网络参数，修改/etc/sysctl.conf\r\n<pre># Kernel sysctl configuration file for Red Hat Linux\r\n#\r\n# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and\r\n# sysctl.conf(5) for more details.\r\n\r\n# Controls IP packet forwarding,dont act as a router\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.all.send_redirects = 0\r\nnet.ipv4.conf.default.send_redirects = 0\r\n\r\n# Controls source route verification\r\n\r\n# Do not accept source routing\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nnet.ipv4.conf.all.accept_source_route = 0\r\n\r\n# Controls the System Request debugging functionality of the kernel\r\nkernel.sysrq = 0\r\n\r\n# Controls whether core dumps will append the PID to the core filename.\r\n# Useful for debugging multi-threaded applications.\r\nkernel.core_uses_pid = 1\r\n\r\n# Controls the use of TCP syncookies\r\n\r\n# Disable netfilter on bridges.\r\nnet.bridge.bridge-nf-call-ip6tables = 0\r\nnet.bridge.bridge-nf-call-iptables = 0\r\nnet.bridge.bridge-nf-call-arptables = 0\r\n\r\n# Controls the default maxmimum size of a mesage queue\r\nkernel.msgmnb = 65536\r\n\r\n# Controls the maximum size of a message, in bytes\r\nkernel.msgmax = 65536\r\n\r\n# Controls the maximum shared segment size, in bytes\r\nkernel.shmmax = 68719476736\r\n\r\n# Controls the maximum number of shared memory segments, in pages\r\nkernel.shmall = 4294967296\r\n\r\nvm.swappiness = 0\r\nnet.ipv4.neigh.default.gc_stale_time=120\r\nnet.ipv4.conf.all.rp_filter=0\r\nnet.ipv4.conf.default.rp_filter=0\r\nnet.ipv4.conf.default.arp_announce = 2\r\nnet.ipv4.conf.all.arp_announce=2\r\nnet.ipv4.tcp_max_tw_buckets = 5000\r\nnet.ipv4.tcp_syncookies = 1\r\nnet.ipv4.tcp_max_syn_backlog = 1024\r\nnet.ipv4.tcp_synack_retries = 2\r\nnet.ipv4.conf.lo.arp_announce=2\r\n\r\n# Avoid a smurf attack\r\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\r\n\r\n# Turn on protection for bad icmp error messages\r\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\r\n\r\n# Turn on and log spoofed, source routed, and redirect packets\r\nnet.ipv4.conf.all.log_martians = 1\r\nnet.ipv4.conf.default.log_martians = 1\r\n\r\n# Make sure no one can alter the routing tables\r\nnet.ipv4.conf.all.accept_redirects = 0\r\nnet.ipv4.conf.default.accept_redirects = 0\r\nnet.ipv4.conf.all.secure_redirects = 0\r\nnet.ipv4.conf.default.secure_redirects = 0\r\n\r\n# Turn on execshild\r\nkernel.exec-shield = 1\r\nkernel.randomize_va_space = 1\r\n\r\n# Tuen IPv6\r\nnet.ipv6.conf.default.router_solicitations = 0\r\nnet.ipv6.conf.default.accept_ra_rtr_pref = 0\r\nnet.ipv6.conf.default.accept_ra_pinfo = 0\r\nnet.ipv6.conf.default.accept_ra_defrtr = 0\r\nnet.ipv6.conf.default.autoconf = 0\r\nnet.ipv6.conf.default.dad_transmits = 0\r\nnet.ipv6.conf.default.max_addresses = 1\r\n\r\n# Optimization for port usefor LBs\r\n# Increase system file descriptor limit\r\nfs.file-max = 65535\r\n\r\n# Allow for more PIDs (to reduce rollover problems); may break some programs 32768\r\nkernel.pid_max = 65536\r\n\r\n# Increase system IP port limits\r\nnet.ipv4.ip_local_port_range = 2000 65000\r\n\r\n# Increase TCP max buffer size setable using setsockopt()\r\nnet.ipv4.tcp_rmem = 4096 87380 8388608\r\nnet.ipv4.tcp_wmem = 4096 87380 8388608\r\n\r\n# Increase Linux auto tuning TCP buffer limits\r\n# min, default, and max number of bytes to use\r\n# set max to at least 4MB, or higher if you use very high BDP paths\r\n# Tcp Windows etc\r\nnet.core.rmem_max = 8388608\r\nnet.core.wmem_max = 8388608\r\nnet.core.netdev_max_backlog = 5000\r\nnet.ipv4.tcp_window_scaling = 1</pre>\r\n二、配置防火墙\r\n\r\n<pre>\r\n#/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT\r\n#/sbin/iptables -I INPUT -p tcp --dport 22 -j ACCEPT\r\niptables -A INPUT -j REJECT\r\niptables -A FORWARD -j REJECT\r\n然后保存：\r\n#/etc/rc.d/init.d/iptables save\r\n</pre>\r\n\r\n二、升级yum源\r\n\r\nyum install yum-fastestmirror //找最快的yum源\r\n\r\nyum clean all\r\n\r\nyum makecache\r\n\r\n三、开启sshd\r\n\r\n当然要先配置sshd,\r\n\r\n修改/etc/ssh/sshd_config 改打开的就打开\r\n\r\nchkconfig --list sshd //看3下是否打开\r\n\r\nchkconfig --level 3 sshd on //没打开就打开吧\r\n\r\n四、安装基本编译环境\r\n\r\n&nbsp;\r\n\r\nyum install gcc gcc-c++ libxml2 libxml2-devel autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel  zlib zlib-devel glibc glibc-devel glib2 glib2-devel openssl-devel bzip2-devel libcurl-devel t1lib-devel gmp-devel libc-client-devel openldap-devel unixODBC-devel expat-devel libxslt-devel libmcrypt libmcrypt-devel libedit\r\n\r\n上面这个版本测试通过\r\n\r\nyum install make apr* autoconf automake bzip2 bzip2-devel curl curl-devel gcc gcc-c++ gcc-g77 e2fsprogs e2fsprogs-devel zlib* zlib-devel openssl openssl-devel pcre-devel gd gd-devel kernel keyutils patch perl kernel-headers compat* mpfr cpp glibc libgomp libstdc++-devel ppl cloog-ppl keyutils-libs-devel libcom_err-devel libsepol-devel libselinux-devel krb5-devel zlib-devel libXpm* freetype freetype-devel libpng* libpng10 libpng10-devel libpng-devel  ncurses* ncurses-devel libtool* libtool-libs libxml2-devel patch glibc glibc-devel glib2 glib2-devel krb5 krb5-devel libevent libevent-devel libidn libidn-devel nss_ldap openldap openldap-clients openldap-devel openldap-servers openssl openssl-devel pspell-devel net-snmp* net-snmp-devel -y\r\n\r\n五、系统约定\r\n\r\n软件源代码包存放位置：/opt\r\n\r\n源码包编译安装位置：/usr/local/软件名字\r\n\r\n1、下载nginx（目前稳定版）\r\nhttp://nginx.org/download/nginx-1.4.5.tar.gz\r\n2、下载pcre （支持nginx伪静态）\r\nhttp://jaist.dl.sourceforge.net/project/pcre/pcre/8.34/pcre-8.34.tar.gz\r\n4、下载MySQL5.6.16\r\nhttp://mirrors.sohu.com/mysql/MySQL-5.6/mysql-5.6.16.tar.gz\r\n5、下载php-5.5.9（目前最新版）\r\nhttp://mirrors.sohu.com/php/php-5.5.9.tar.gz\r\n6、下载cmake（MySQL编译工具）\r\nhttp://www.cmake.org/files/v2.8/cmake-2.8.12.2.tar.gz\r\n7、下载libmcrypt（PHPlibmcrypt模块）\r\nhttp://nchc.dl.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz\r\n\r\n&nbsp;\r\n\r\n5、下载MYSQL YUM源\r\n\r\n下载地址：http://dev.mysql.com/downloads/repo/yum/\r\n\r\n然后运行之，即可通过命令 yum repolist all|grep mysql  查看当前可用版本\r\n\r\n如果安装默认版本，yum install mysql-server即可，\r\n\r\n否则修改<code>/etc/yum.repos.d/mysql-community.repo为你想要的版本。</code>\r\n\r\n6、安装nginx\r\n\r\n添加文件:/etc/yum.repos.d/nginx.repo\r\n\r\n[nginx]\r\nname=nginx repo\r\nbaseurl=http://nginx.org/packages/mainline/centos/6/$basearch/\r\ngpgcheck=0\r\nenabled=1\r\n\r\n然后\r\n\r\nyum install nginx\r\n\r\n&nbsp;\r\n\r\n7、安装PHP\r\n\r\n编译：\r\n\r\n./configure --enable-fpm --with-mysql --disable-ipv6 --with-libxml-dir --with-zlib --with-gd --with-curl --enable-ftp --enable-soap --enable-zip --enable-mbstring --with-iconv --with-pcre-dir --with-png-dir --with-jpeg-dir --with-zlib-dir  --with-freetype-dir\r\n\r\n配置php：\r\n\r\ncp php.ini-production /usr/local/php5/etc/php.ini #复制php配置文件到安装目录\r\nrm -rf /etc/php.ini #删除系统自带配置文件\r\nln -s /usr/local/php5/etc/php.ini /etc/php.ini #添加软链接\r\ncp /usr/local/php5/etc/php-fpm.conf.default /usr/local/php5/etc/php-fpm.conf #拷贝模板文件为php-fpm配置文件\r\nvi /usr/local/php5/etc/php-fpm.conf #编辑\r\nuser = www #设置php-fpm运行账号为www\r\ngroup = www #设置php-fpm运行组为www\r\npid = run/php-fpm.pid #取消前面的分号\r\n设置 php-fpm开机启动\r\n\r\ncp /opt/php-5.5.9/sapi/fpm/init.d.php-fpm /etc/rc.d/init.d/php-fpm #拷贝php-fpm到启动目录\r\nchmod +x /etc/rc.d/init.d/php-fpm #添加执行权限\r\nchkconfig php-fpm on #设置开机启动\r\nvi /usr/local/php5/etc/php.ini #编辑配置文件\r\n修改为：\r\ndisable_functions = passthru,exec,system,chroot,scandir,chgrp,chown,shell_exec,proc_open,proc_get_status,ini_alter,ini_alter,ini_restore,dl,openlog,syslog,readlink,symlink,popepassthru,stream_socket_server,escapeshellcmd,dll,popen,disk_free_space,checkdnsrr,checkdnsrr,getservbyname,getservbyport,disk_total_space,posix_ctermid,posix_get_last_error,posix_getcwd, posix_getegid,posix_geteuid,posix_getgid, posix_getgrgid,posix_getgrnam,posix_getgroups,posix_getlogin,posix_getpgid,posix_getpgrp,posix_getpid, posix_getppid,posix_getpwnam,posix_getpwuid, posix_getrlimit, posix_getsid,posix_getuid,posix_isatty, posix_kill,posix_mkfifo,posix_setegid,posix_seteuid,posix_setgid, posix_setpgid,posix_setsid,posix_setuid,posix_strerror,posix_times,posix_ttyname,posix_uname\r\n\r\n#列出PHP可以禁用的函数，如果某些程序需要用到这个函数，可以删除，取消禁用。\r\n找到：;date.timezone =\r\n修改为：date.timezone = PRC #设置时区\r\n找到：expose_php = On\r\n修改为：expose_php = OFF #禁止显示php版本的信息\r\n找到：short_open_tag = Off\r\n修改为：short_open_tag = ON #支持php短标签\r\n\r\n定位到 <em>cgi.fix_pathinfo=</em> 并将其修改为如下所示：\r\n<div id="install.unix.nginx.configure.pathinfo">\r\n<div>\r\n<div>\r\n<pre>cgi.fix_pathinfo=0</pre>\r\n</div>\r\n</div>\r\n</div>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n十、设置Selinux 参考《SELinux简明学习指南》。\r\n\r\n从主页（http://sourceforge.net/projects/selinuxnginx/）下载SELinux策略：\r\n\r\n# tar zxf se-ngix_1_0_10.tar.gz\r\n# cd se-ngix_1_0_10/nginx\r\n\r\n1、修改Makefile\r\n找到:\r\nTYPE ?= $(NAME)-$(NTYPE)\r\n改为:\r\nTYPE ?= $(NTYPE)\r\n\r\n2、请修改se-ngix_1_0_10/nginx/nginx.te\r\n找到:\r\ncorenet_non_ipsec_sendrecv(nginx_t)\r\n\r\n改为:\r\ncorenet_all_recvfrom_unlabeled(nginx_t)\r\n\r\n3、修改\r\n# make\r\n\r\n然后：\r\n\r\n<span style="color: #2f3699;"># <strong>/usr/sbin/semodule -i nginx.pp</strong></span>\r\n\r\n确认安装成功:\r\n<span style="color: #000000;">#</span> <span style="color: #2f3699;"><strong>semodule -l|grep nginx</strong></span>\r\n\r\n&nbsp;\r\n\r\n系统文件配置：\r\n\r\n[root@localhost ~]# echo "ulimit -SHn 102400"&gt;&gt; /etc/rc.local\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n修改/etc/rc.local\r\n添加以下内容：\r\nulimit -SHn 102400\r\n/data/scripts/rsync.sh &amp;\r\n\r\n&nbsp;\r\n\r\n数据盘单独挂载：\r\n挂载为：\r\nUUID=5fccd1db-41c3-419d-b12e-71198037fd58 /datas ext4 defaults,nosuid,noexec,nodev 1 2\r\n备注： nosuid不能提升权限，不能执行，\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf,加入以下内容\r\n\r\n# 避免放大攻击\r\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\r\n# 开启恶意icmp错误消息保护\r\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\r\n# 开启SYN洪水攻击保护\r\nnet.ipv4.tcp_syncookies = 1\r\n# 开启并记录欺骗，源路由和重定向包\r\nnet.ipv4.conf.all.log_martians = 1\r\nnet.ipv4.conf.default.log_martians = 1\r\n# 处理无源路由的包\r\nnet.ipv4.conf.all.accept_source_route = 0\r\nnet.ipv4.conf.default.accept_source_route = 0\r\n\r\n# 开启反向路径过滤\r\nnet.ipv4.conf.all.rp_filter = 1\r\nnet.ipv4.conf.default.rp_filter = 1\r\n\r\n# 确保无人能修改路由表\r\n\r\nnet.ipv4.conf.all.accept_redirects = 0\r\nnet.ipv4.conf.default.accept_redirects = 0\r\nnet.ipv4.conf.all.secure_redirects = 0\r\nnet.ipv4.conf.default.secure_redirects = 0\r\n\r\n# 不充当路由器\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.all.send_redirects = 0\r\nnet.ipv4.conf.default.send_redirects = 0\r\n\r\n# 开启execshild\r\n\r\nkernel.exec-shield = 1\r\nkernel.randomize_va_space = 1\r\n\r\n# IPv6设置\r\n\r\nnet.ipv6.conf.default.router_solicitations = 0\r\nnet.ipv6.conf.default.accept_ra_rtr_pref = 0\r\nnet.ipv6.conf.default.accept_ra_pinfo = 0\r\nnet.ipv6.conf.default.accept_ra_defrtr = 0\r\nnet.ipv6.conf.default.autoconf = 0\r\nnet.ipv6.conf.default.dad_transmits = 0\r\nnet.ipv6.conf.default.max_addresses = 1\r\n\r\n# 优化LB使用的端口\r\n\r\n# 增加系统文件描述符限制\r\n\r\nfs.file-max = 65535\r\n\r\n# 允许更多的PIDs (减少滚动翻转问题); may break some programs 32768\r\n\r\nkernel.pid_max = 65536\r\n\r\n# 增加系统IP端口限制\r\n\r\nnet.ipv4.ip_local_port_range = 2000 65000\r\n\r\n# 增加TCP最大缓冲区大小\r\n\r\nnet.ipv4.tcp_rmem = 4096 87380 8388608\r\nnet.ipv4.tcp_wmem = 4096 87380 8388608\r\n\r\n# 增加Linux自动调整TCP缓冲区限制\r\n# 最小，默认和最大可使用的字节数\r\n# 最大值不低于4MB，如果你使用非常高的BDP路径可以设置得更高\r\n# Tcp窗口等\r\n\r\nnet.core.rmem_max = 8388608\r\nnet.core.wmem_max = 8388608\r\nnet.core.netdev_max_backlog = 5000\r\nnet.ipv4.tcp_window_scaling = 1\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n/data/scripts/rsync.sh同步备份脚本；\r\n\r\n#!/bin/bash\r\nhost1=10.122.67.000\r\nsrc=/data/www/www.xxx.com/\r\ndest1=/datas/www/w.xxx.com/\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' --exclude "ROOT_PATH_WEBERROR" -e close_write,delete,move,create,attrib $src | while read file\r\ndo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p1780 '' $src rsync@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n定时任务脚本\r\n\r\n0 * * * * /usr/sbin/ntpdate cn.pool.ntp.org ; hwclock -w\r\n防火墙脚本\r\n#!/bin/bash\r\nIPT="/sbin/iptables"\r\n#### IPS ######\r\n# 获得服务器公共IP\r\nSERVER_IP=$(ifconfig eth0 | grep ''inet addr:'' | awk -F''inet addr:'' ''{ print $2}'' | awk ''{ print $1}'')\r\nLB1_IP="204.54.1.1"\r\nLB2_IP="204.54.1.2"\r\n# 实现某些智能逻辑，以便我们可以在LB2上使用damm脚本\r\nOTHER_LB=""\r\nSERVER_IP=""\r\n[[ "$SERVER_IP" == "$LB1_IP" ]] &amp;&amp; OTHER_LB="$LB2_IP" || OTHER_LB="$LB1_IP"\r\n[[ "$OTHER_LB" == "$LB2_IP" ]] &amp;&amp; OPP_LB="$LB1_IP" || OPP_LB="$LB2_IP"\r\n### IPs ###\r\nPUB_SSH_ONLY="122.xx.yy.zz/29" #### 文件 #####\r\nBLOCKED_IP_TDB=/root/.fw/blocked.ip.txt\r\n\r\nSPOOFIP="127.0.0.0/8 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 169.254.0.0/16 0.0.0.0/8 240.0.0.0/4 255.255.255.255/32 168.254.0.0/16 224.0.0.0/4 240.0.0.0/5 248.0.0.0/5 192.0.2.0/24"\r\n\r\nBADIPS=$( [[ -f ${BLOCKED_IP_TDB} ]] &amp;&amp; egrep -v "^#|^$" ${BLOCKED_IP_TDB})\r\n\r\n### 接口 ###\r\n\r\nPUB_IF="eth0" # public interface\r\n\r\nLO_IF="lo" # loopback\r\n\r\nVPN_IF="eth1" # vpn / private net\r\n\r\n### 启动防火墙 ###\r\n\r\necho "Setting LB1 $(hostname) Firewall..."\r\n\r\n# 删除和关闭一切\r\n\r\n$IPT -P INPUT DROP\r\n\r\n$IPT -P OUTPUT DROP\r\n\r\n$IPT -P FORWARD DROP\r\n\r\n# 不受限制的lo访问\r\n\r\n$IPT -A INPUT -i ${LO_IF} -j ACCEPT\r\n\r\n$IPT -A OUTPUT -o ${LO_IF} -j ACCEPT\r\n\r\n# 不受限制的vpn/pnet访问\r\n\r\n$IPT -A INPUT -i ${VPN_IF} -j ACCEPT\r\n\r\n$IPT -A OUTPUT -o ${VPN_IF} -j ACCEPT\r\n\r\n# 删除sync\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp ! --syn -m state --state NEW -j DROP\r\n\r\n# 删除碎片\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -f -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags ALL ALL -j DROP\r\n\r\n# 删除空包\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags ALL NONE -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix " NULL Packets "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags ALL NONE -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags SYN,RST SYN,RST -j DROP\r\n\r\n# 删除XMAS\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags SYN,FIN SYN,FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix " XMAS Packets "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP\r\n\r\n# 删除FIN包扫描\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags FIN,ACK FIN -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix " Fin Packets Scan "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags FIN,ACK FIN -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP\r\n\r\n# 记录并放弃广播/多播和无效数据包\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m pkttype --pkt-type broadcast -j LOG --log-prefix " Broadcast "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m pkttype --pkt-type broadcast -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m pkttype --pkt-type multicast -j LOG --log-prefix " Multicast "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m pkttype --pkt-type multicast -j DROP\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m state --state INVALID -j LOG --log-prefix " Invalid "\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -m state --state INVALID -j DROP\r\n\r\n# 记录和阻止欺骗IP\r\n\r\n$IPT -N spooflist\r\n\r\nfor ipblock in $SPOOFIP\r\n\r\ndo\r\n\r\n$IPT -A spooflist -i ${PUB_IF} -s $ipblock -j LOG --log-prefix " SPOOF List Block "\r\n\r\n$IPT -A spooflist -i ${PUB_IF} -s $ipblock -j DROP\r\n\r\ndone\r\n\r\n$IPT -I INPUT -j spooflist\r\n\r\n$IPT -I OUTPUT -j spooflist\r\n\r\n$IPT -I FORWARD -j spooflist\r\n\r\n# 只允许从选定的公共IP使用SSH\r\n\r\nfor ip in ${PUB_SSH_ONLY}\r\n\r\ndo $IPT -A INPUT -i ${PUB_IF} -s ${ip} -p tcp -d ${SERVER_IP} --destination-port 22 -j ACCEPT\r\n\r\n$IPT -A OUTPUT -o ${PUB_IF} -d ${ip} -p tcp -s ${SERVER_IP} --sport 22 -j ACCEPT\r\n\r\ndone\r\n\r\n# 允许入站ICMP ping\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p icmp --icmp-type 8 -s 0/0 -m state --state NEW,ESTABLISHED,RELATED -m limit --limit 30/sec -j ACCEPT\r\n\r\n$IPT -A OUTPUT -o ${PUB_IF} -p icmp --icmp-type 0 -d 0/0 -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n\r\n# 允许入站HTTP端口80\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp -s 0/0 --sport 1024:65535 --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT\r\n\r\n$IPT -A OUTPUT -o ${PUB_IF} -p tcp --sport 80 -d 0/0 --dport 1024:65535 -m state --state ESTABLISHED -j ACCEPT\r\n\r\n# 允许出站NTP\r\n\r\n$IPT -A OUTPUT -o ${PUB_IF} -p udp --dport 123 -m state --state NEW,ESTABLISHED -j ACCEPT\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p udp --sport 123 -m state --state ESTABLISHED -j ACCEPT\r\n\r\n# 允许出站SMTP\r\n\r\n$IPT -A OUTPUT -o ${PUB_IF} -p tcp --dport 25 -m state --state NEW,ESTABLISHED -j ACCEPT\r\n\r\n$IPT -A INPUT -i ${PUB_IF} -p tcp --sport 25 -m state --state ESTABLISHED -j ACCEPT\r\n\r\n### 在这里添加其他规则 ####\r\n\r\n#######################\r\n\r\n# 删除并记录其它数据包\r\n\r\n$IPT -A INPUT -m limit --limit 5/m --limit-burst 7 -j LOG --log-prefix " DEFAULT DROP "\r\n\r\n$IPT -A INPUT -j DROP\r\n\r\nexit 0', 'centos 6.5 配置nginx+php5-fpm+mysql生产环境', '', 'inherit', 'open', 'open', '', '162-revision-5', '', '', '2014-08-15 12:14:59', '2014-08-15 04:14:59', '', 162, 'http://afeier.sinaapp.com/?p=192', 0, 'revision', '', 0),
(114, 1, '2014-06-14 18:01:00', '2014-06-14 10:01:00', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n&nbsp;\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n3、把交换分区也关闭掉，修改/etc/rc.local\r\n\r\n加入：swapoff -a\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-5', '', '', '2014-06-14 18:01:00', '2014-06-14 10:01:00', '', 12, 'http://afeier.sinaapp.com/?p=114', 0, 'revision', '', 0),
(115, 1, '2014-06-16 17:11:54', '2014-06-16 09:11:54', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n2、编译安装modsecurity\r\nwget https://www.modsecurity.org/tarball/2.7.7/modsecurity-apache_2.7.7.tar.gz\r\n./autogen.sh\r\n./configure --enable-standalone-module\r\nmake &amp;&amp; make install\r\n\r\n3、编译安装gperftools\r\n\r\n./configure --enable-frame-pointers\r\n\r\nmake &amp;&amp; make install\r\nln -s /usr/local/lib/libprofiler.so.0 /lib/libprofiler.so.0\r\n\r\n4、编译安装jemalloc\r\n\r\n./configure\r\n\r\nmake &amp;&amp; make install\r\n\r\nln -s /usr/local/lib/libjemalloc.so.1 /lib/libjemalloc.so.1\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data  --with-google_perftools_module --add-module=../modsecurity-apache_2.7.7/nginx/modsecurity/\r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n开启过滤\r\n\r\nfilter.default = full_special_chars\r\nfilter.default_flags = 0\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n3、把交换分区也关闭掉，修改/etc/rc.local\r\n\r\n加入：swapoff -a\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-6', '', '', '2014-06-16 17:11:54', '2014-06-16 09:11:54', '', 12, 'http://afeier.sinaapp.com/?p=115', 0, 'revision', '', 0),
(302, 1, '2015-10-14 10:54:48', '2015-10-14 02:54:48', '安装部分：\r\n========================================================\r\n1、准备环境\r\n\r\napt-get install build-essential libxml2 libxml2-dev libxml2-utils libaprutil1 libaprutil1-dev libcurl4-gnutls-dev automake libtool liblua5.1-0-dev apache2-dev unzip\r\nwget https://gperftools.googlecode.com/files/gperftools-2.1.zip\r\nwget http://www.canonware.com/download/jemalloc/jemalloc-3.4.1.tar.bz2\r\nwget http://tengine.taobao.org/download/tengine-2.0.0.tar.gz\r\n\r\n\r\n4、解压jemalloc\r\n\r\n\r\n5、编译安装tengine | nginx\r\n\r\n./configure --prefix=/usr/local/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --with-jemalloc=/opt/jemalloc-3.4.1 --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data \r\nmake &amp;&amp; make install\r\n\r\n6、vi /etc/init.d/nginx   &amp;&amp; chmod /etc/init.d/nginx\r\n\r\n#!/bin/sh\r\n### BEGIN INIT INFO\r\n# Provides:          nginx\r\n# Required-Start:    $network $remote_fs $local_fs\r\n# Required-Stop:     $network $remote_fs $local_fs\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Stop/start nginx\r\n### END INIT INFO\r\n\r\n# Author: Sergey Budnevitch &lt;sb@nginx.com&gt;\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nDESC=nginx\r\nNAME=nginx\r\nCONFFILE=/etc/nginx/nginx.conf\r\nDAEMON=/usr/sbin/nginx\r\nPIDFILE=/var/run/$NAME.pid\r\nSCRIPTNAME=/etc/init.d/$NAME\r\n\r\n[ -x $DAEMON ] || exit 0\r\n\r\n[ -r /etc/default/$NAME ] &amp;&amp; . /etc/default/$NAME\r\n\r\nDAEMON_ARGS="-c $CONFFILE $DAEMON_ARGS"\r\n\r\n. /lib/init/vars.sh\r\n\r\n. /lib/lsb/init-functions\r\n\r\ndo_start()\r\n{\r\nstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\r\n$DAEMON_ARGS\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_stop()\r\n{\r\n# Return\r\n#   0 if daemon has been stopped\r\n#   1 if daemon was already stopped\r\n#   2 if daemon could not be stopped\r\n#   other if a failure occurred\r\nstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nrm -f $PIDFILE\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_reload() {\r\n#\r\nstart-stop-daemon --stop --signal HUP --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nreturn "$RETVAL"\r\n}\r\n\r\ndo_configtest() {\r\nif [ "$#" -ne 0 ]; then\r\ncase "$1" in\r\n-q)\r\nFLAG=$1\r\n;;\r\n*)\r\n;;\r\nesac\r\nshift\r\nfi\r\n$DAEMON -t $FLAG -c $CONFFILE\r\nRETVAL="$?"\r\nreturn $RETVAL\r\n}\r\n\r\ndo_upgrade() {\r\nOLDBINPIDFILE=$PIDFILE.oldbin\r\n\r\ndo_configtest -q || return 6\r\nstart-stop-daemon --stop --signal USR2 --quiet --pidfile $PIDFILE --name $NAME\r\nRETVAL="$?"\r\nsleep 1\r\nif [ -f $OLDBINPIDFILE -a -f $PIDFILE ]; then\r\nstart-stop-daemon --stop --signal QUIT --quiet --pidfile $OLDBINPIDFILE --name $NAME\r\nRETVAL="$?"\r\nelse\r\necho $"Upgrade failed!"\r\nRETVAL=1\r\nreturn $RETVAL\r\nfi\r\n}\r\n\r\ncase "$1" in\r\nstart)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Starting $DESC " "$NAME"\r\ndo_start\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstop)\r\n[ "$VERBOSE" != no ] &amp;&amp; log_daemon_msg "Stopping $DESC" "$NAME"\r\ndo_stop\r\ncase "$?" in\r\n0|1) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 0 ;;\r\n2) [ "$VERBOSE" != no ] &amp;&amp; log_end_msg 1 ;;\r\nesac\r\n;;\r\nstatus)\r\nstatus_of_proc "$DAEMON" "$NAME" &amp;&amp; exit 0 || exit $?\r\n;;\r\nconfigtest)\r\ndo_configtest\r\n;;\r\nupgrade)\r\ndo_upgrade\r\n;;\r\nreload|force-reload)\r\nlog_daemon_msg "Reloading $DESC" "$NAME"\r\ndo_reload\r\nlog_end_msg $?\r\n;;\r\nrestart|force-reload)\r\nlog_daemon_msg "Restarting $DESC" "$NAME"\r\ndo_configtest -q || exit $RETVAL\r\ndo_stop\r\ncase "$?" in\r\n0|1)\r\ndo_start\r\ncase "$?" in\r\n0) log_end_msg 0 ;;\r\n1) log_end_msg 1 ;; # Old process is still running\r\n*) log_end_msg 1 ;; # Failed to start\r\nesac\r\n;;\r\n*)\r\n# Failed to stop\r\nlog_end_msg 1\r\n;;\r\nesac\r\n;;\r\n*)\r\necho "Usage: $SCRIPTNAME {start|stop|status|restart|reload|force-reload|upgrade|configtest}" &gt;&amp;2\r\nexit 3\r\n;;\r\nesac\r\n\r\nexit $RETVAL\r\n\r\n7、自动启动\r\n\r\nln -s /etc/init.d/nginx /etc/rc2.d/S91nginx\r\n\r\nservice nginx start\r\n\r\n8、安装php\r\n\r\napt-get install memcached php5-fpm php5-mcrypt php5-mysql php5-gd php5-imagick php5-memcached php5-curl  php5-dev  php-apc mysql-client-core-5.5\r\n\r\n9、如有需要，安装mysql-server\r\n\r\napt-get install mysql-server\r\n\r\n至此，服务器安装基本搞定\r\n================================================================\r\n\r\n//×××××××\r\n\r\n开发环境安装这个东东，正式环境不装\r\n\r\nhttp://www.laruence.com/2012/02/14/2544.html\r\n\r\n/××××××××\r\n\r\n配置\r\n\r\n&nbsp;\r\n\r\n1、修改php.ini\r\n\r\n加入：\r\n\r\n&nbsp;\r\n\r\ndisable_functions = phpinfo,system,passthru,shell_exec,escapeshellarg,escapeshellcmd,proc_close,proc_open,dl,popen,show_source\r\n\r\n开启过滤\r\n\r\nfilter.default = full_special_chars\r\nfilter.default_flags = 0\r\n\r\n[HOST=w.xx.com]\r\n\r\n[PATH=/datas/www/w.xx.com]\r\n\r\nopen_basedir=/datas/www/w.xx.com/:/tmp/\r\n\r\n&nbsp;\r\n\r\n2、配置防火墙\r\n\r\n&nbsp;\r\n\r\nsudo ufw enable\r\n\r\n&nbsp;\r\n\r\nsudo ufw default deny\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 80\r\n\r\n&nbsp;\r\n\r\nsudo ufw allow 22\r\n\r\n&nbsp;\r\n\r\n3、配置nginx.conf\r\n\r\n&nbsp;\r\n\r\n4、配置服务器设置\r\n\r\n&nbsp;\r\n\r\n修改/etc/sysctl.conf\r\n\r\nnet.ipv4.ip_forward = 0\r\nnet.ipv4.conf.default.rp_filter = 1\r\nnet.ipv4.conf.default.accept_source_route = 0\r\nkernel.sysrq = 0\r\nkernel.core_uses_pid = 1\r\nnet.ipv4.tcp_syncookies = 1\r\nkernel.msgmnb = 65536\r\nkernel.msgmax = 65536\r\nkernel.shmmax = 68719476736\r\nkernel.shmall = 4294967296\r\nnet.ipv4.tcp_max_tw_buckets = 6000\r\nnet.ipv4.tcp_sack = 1\r\nnet.ipv4.tcp_window_scaling = 1\r\nnet.ipv4.tcp_rmem = 4096 87380 4194304\r\nnet.ipv4.tcp_wmem = 4096 16384 4194304\r\nnet.core.wmem_default = 8388608\r\nnet.core.rmem_default = 8388608\r\nnet.core.rmem_max = 16777216\r\nnet.core.wmem_max = 16777216\r\nnet.core.netdev_max_backlog = 262144\r\nnet.core.somaxconn = 262144\r\nnet.ipv4.tcp_max_orphans = 3276800\r\nnet.ipv4.tcp_max_syn_backlog = 262144\r\nnet.ipv4.tcp_timestamps = 0\r\nnet.ipv4.tcp_synack_retries = 1\r\nnet.ipv4.tcp_syn_retries = 1\r\nnet.ipv4.tcp_tw_recycle = 1\r\nnet.ipv4.tcp_tw_reuse = 1\r\nnet.ipv4.tcp_mem = 94500000 915000000 927000000\r\nnet.ipv4.tcp_fin_timeout = 1\r\nnet.ipv4.tcp_keepalive_time = 30\r\nnet.ipv4.ip_local_port_range = 1024 65000\r\n\r\n然后 sysctl -p\r\n\r\n修改文件打开数：\r\n\r\n如果我们要修改系统允许最大文件打开数，可以通过ulimit -SHn来做，例如要临时修改系统最大打开文件数为51201个，那么用如下命令：\r\nulimit -SHn 51201\r\n\r\n每次重启系统时，该值会被自动还原，可以将上述命令写入 /etc/rc.local 中。如果想永久更改，可以按照如下修改：\r\nvi /etc/security/limits.conf\r\n# add\r\n* soft nofile 51201\r\n* hard nofile 51201\r\n\r\n3、把交换分区也关闭掉，修改/etc/rc.local\r\n\r\n加入：swapoff -a\r\n\r\n&nbsp;', '创建一个牛X的ubuntu+nginx+php5-ftpm+mysql+waf的WEB服务器', '', 'inherit', 'open', 'open', '', '12-revision-8', '', '', '2015-10-14 10:54:48', '2015-10-14 02:54:48', '', 12, 'http://afeier.sinaapp.com/?p=302', 0, 'revision', '', 0),
(116, 1, '2014-06-19 06:46:08', '2014-06-18 22:46:08', '<div>1、建立主机间信任关系</div>\r\n<div>\r\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\r\n<pre>jsmith@local-host$ [Note: You are on local-host here]\r\n\r\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\r\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Pess enter key]\r\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\r\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\r\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\r\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\r\njsmith@remote-host''s password:\r\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\r\n\r\n.ssh/authorized_keys\r\n\r\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\r\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\r\n<h3>Step 3: Login to remote-host without entering the password</h3>\r\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\r\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\r\n[Note: SSH did not ask for password.]\r\n\r\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\r\n</div>\r\n<div>2、 apt-get install inotify-tools</div>\r\n<div></div>\r\n<div>3、生成脚本 rsync.sh</div>\r\n<div>#!/bin/bash\r\nhost1=8.8.8.8src=/datas/www/test/dest1=/datas/www/dest/\r\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,move,create,attrib $src | while read filedo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p22 '' $src xx@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone</div>\r\n<div><strong> inotifywait相关参数</strong></div>\r\n<div> -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。echo  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local</div>\r\n<div>--exclude "*.txt|*.log" 排除某些文件</div>', '通过rsync+inotify实现数据的实时备份', '', 'publish', 'open', 'open', '', '%e9%80%9a%e8%bf%87rsyncinotify%e5%ae%9e%e7%8e%b0%e6%95%b0%e6%8d%ae%e7%9a%84%e5%ae%9e%e6%97%b6%e5%a4%87%e4%bb%bd', '', '', '2014-06-19 18:54:59', '2014-06-19 10:54:59', '', 0, 'http://afeier.sinaapp.com/?p=116', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(122, 1, '2014-06-19 17:43:58', '2014-06-19 09:43:58', '<div>1、建立主机间信任关系</div>\r\n<div>\r\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\r\n<pre>jsmith@local-host$ [Note: You are on local-host here]\r\n\r\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\r\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Pess enter key]\r\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\r\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\r\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\r\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\r\njsmith@remote-host''s password:\r\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\r\n\r\n.ssh/authorized_keys\r\n\r\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\r\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\r\n<h3>Step 3: Login to remote-host without entering the password</h3>\r\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\r\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\r\n[Note: SSH did not ask for password.]\r\n\r\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\r\n</div>\r\n<div></div>\r\n<div>2、生成脚本 rsync.sh</div>\r\n<div>\r\n#!/bin/bash\r\nhost1=8.8.8.8\r\n\r\nsrc=/datas/www/test/\r\n\r\ndest1=/datas/www/dest/\r\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src | while read file\r\n\r\ndo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p1780 '' $src xx@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n\r\n</div>\r\n<div><strong> inotifywait相关参数</strong></div>\r\n<div>\r\n -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。\r\n\r\necho  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local\r\n\r\n</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-4', '', '', '2014-06-19 17:43:58', '2014-06-19 09:43:58', '', 116, 'http://afeier.sinaapp.com/?p=122', 0, 'revision', '', 0),
(123, 1, '2014-06-19 17:50:57', '2014-06-19 09:50:57', '<div>1、建立主机间信任关系</div>\r\n<div>\r\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\r\n<pre>jsmith@local-host$ [Note: You are on local-host here]\r\n\r\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\r\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Pess enter key]\r\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\r\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\r\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\r\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\r\njsmith@remote-host''s password:\r\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\r\n\r\n.ssh/authorized_keys\r\n\r\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\r\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\r\n<h3>Step 3: Login to remote-host without entering the password</h3>\r\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\r\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\r\n[Note: SSH did not ask for password.]\r\n\r\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\r\n</div>\r\n<div></div>\r\n<div>2、生成脚本 rsync.sh</div>\r\n<div>#!/bin/bash\r\nhost1=8.8.8.8src=/datas/www/test/\r\n\r\ndest1=/datas/www/dest/\r\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,move,create,attrib $src | while read file\r\n\r\ndo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p1780 '' $src xx@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n\r\n</div>\r\n<div><strong> inotifywait相关参数</strong></div>\r\n<div> -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。echo  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local\r\n\r\n</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-5', '', '', '2014-06-19 17:50:57', '2014-06-19 09:50:57', '', 116, 'http://afeier.sinaapp.com/?p=123', 0, 'revision', '', 0),
(124, 1, '2014-06-19 18:10:32', '2014-06-19 10:10:32', '<div>1、建立主机间信任关系</div>\r\n<div>\r\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\r\n<pre>jsmith@local-host$ [Note: You are on local-host here]\r\n\r\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\r\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Pess enter key]\r\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\r\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\r\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\r\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\r\njsmith@remote-host''s password:\r\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\r\n\r\n.ssh/authorized_keys\r\n\r\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\r\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\r\n<h3>Step 3: Login to remote-host without entering the password</h3>\r\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\r\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\r\n[Note: SSH did not ask for password.]\r\n\r\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\r\n</div>\r\n<div>2、 apt-get install inotify-tools</div>\r\n<div></div>\r\n<div>3、生成脚本 rsync.sh</div>\r\n<div>#!/bin/bash\r\nhost1=8.8.8.8src=/datas/www/test/dest1=/datas/www/dest/\r\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,move,create,attrib $src | while read file\r\n\r\ndo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p1780 '' $src xx@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n\r\n</div>\r\n<div><strong> inotifywait相关参数</strong></div>\r\n<div> -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。echo  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-6', '', '', '2014-06-19 18:10:32', '2014-06-19 10:10:32', '', 116, 'http://afeier.sinaapp.com/?p=124', 0, 'revision', '', 0),
(118, 1, '2014-06-19 06:46:08', '2014-06-18 22:46:08', '<div></div>\r\n<strong>      </strong>在前面的博文中，我讲到过利用rsync实现数据的镜像和备份，但是要实现数据的实时备份，单独靠rsync还不能实现，本文就讲述下如何实现数据的实时备份。\r\n<div>\r\n\r\n<strong>一、rsync的优点与不足\r\n</strong> 与传统的cp、tar备份方式相比，rsync具有安全性高、备份迅速、支持增量备份等优点，通过rsync可以解决对实时性要求不高的数据备份需求，例如定期的备份文件服务器数据到远端服务器，对本地磁盘定期做数据镜像等。\r\n随着应用系统规模的不断扩大，对数据的安全性和可靠性也提出的更好的要求，rsync在高端业务系统中也逐渐暴露出了很多不足，首先，rsync同步数据时，需要扫描所有文件后进行比对，进行差量传输。如果文件数量达到了百万甚至千万量级，扫描所有文件将是非常耗时的。而且正在发生变化的往往是其中很少的一部分，这是非常低效的方式。其次，rsync不能实时的去监测、同步数据，虽然它可以通过linux守护进程的方式进行触发同步，但是两次触发动作一定会有时间差，这样就导致了服务端和客户端数据可能出现不一致，无法在应用故障时完全的恢复数据。基于以上原因，rsync+inotify组合出现了！\r\n\r\n<strong>二、 初识inotify\r\n</strong> Inotify 是一种强大的、细粒度的、异步的文件系统事件监控机制，linux内核从2.6.13起，加入了Inotify支持，通过Inotify可以监控文件系统中添加、删除，修改、移动等各种细微事件，利用这个内核接口，第三方软件就可以监控文件系统下文件的各种变化情况，而inotify-tools就是这样的一个第三方软件。\r\n在上面章节中，我们讲到，rsync可以实现触发式的文件同步，但是通过crontab守护进程方式进行触发，同步的数据和实际数据会有差异，而inotify可以监控文件系统的各种变化，当文件有任何变动时，就触发rsync同步，这样刚好解决了同步数据的实时性问题。\r\n\r\n<strong>三、 安装inotify工具inotify-tools\r\n</strong> 由于inotify特性需要Linux内核的支持，在安装inotify-tools前要先确认Linux系统内核是否达到了2.6.13以上，如果Linux内核低于2.6.13版本，就需要重新编译内核加入inotify的支持，也可以用如下方法判断，内核是否支持inotify：\r\n[root@localhost webdata]# uname -r\r\n2.6.18-164.11.1.el5PAE\r\n[root@localhost webdata]# ll /proc/sys/fs/inotify\r\n总计 0\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_queued_events\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_instances\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_watches\r\n如果有上面三项输出，表示系统已经默认支持inotify，接着就可以开始安装inotify-tools了。\r\n可以到<a href="http://inotify-tools.sourceforge.net/">http://inotify-tools.sourceforge.net/</a>下载相应的inotify-tools版本，然后开始编译安装：\r\n[root@localhost  ~]# tar zxvf inotify-tools-3.14.tar.gz\r\n<a href="mailto:root@localhost">root@localhost</a>  ~]# cd inotify-tools-3.14\r\n[root@localhost inotify-tools-3.14]# ./configure\r\n[root@localhost inotify-tools-3.14]# make\r\n[root@localhost inotify-tools-3.14]# make install\r\n[root@localhost inotify-tools-3.14]# ll /usr/local/bin/inotifywa*\r\n-rwxr-xr-x 1 root root 37264 04-14 13:42 /usr/local/bin/inotifywait\r\n-rwxr-xr-x 1 root root 35438 04-14 13:42 /usr/local/bin/inotifywatch\r\ninotify-tools安装完成后，会生成inotifywait和inotifywatch两个指令，其中，inotifywait用于等待文件或文件集上的一个特定事件，它可以监控任何文件和目录设置，并且可以递归地监控整个目录树。\r\ninotifywatch用于收集被监控的文件系统统计数据，包括每个inotify事件发生多少次等信息。\r\n\r\n<strong>四、 inotify相关参数\r\n</strong>inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小。下面分别做简单介绍。\r\n/proc/sys/fs/inotify/max_queued_evnets\r\n表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。\r\n/proc/sys/fs/inotify/max_user_instances\r\n表示每一个real user ID可创建的inotify instatnces的数量上限。\r\n/proc/sys/fs/inotify/max_user_watches\r\n表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小，例如：\r\necho 30000000 &gt; /proc/sys/fs/inotify/max_user_watches\r\n\r\n<strong>五、 inotifywait相关参数\r\n</strong>Inotifywait是一个监控等待事件，可以配合shell脚本使用它，下面介绍一下常用的一些参数：\r\n -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。\r\n更详细的请参看man  inotifywait。\r\n\r\n<strong>六、 rsync+inotify企业应用案例\r\n</strong> 案例描述\r\n这是一个CMS内容发布系统，后端采用负载均衡集群部署方案，有一个负载调度节点和三个服务节点以及一个内容发布节点构成，内容发布节点负责将用户发布的数据生成静态页面，同时将静态网页传输到三台服务节点，而负载调度节点负责将用户请求根据负载算法调度到相应的服务节点，实现用户访问。用户要求在前端访问到的网页数据始终是最新的、一致的。\r\n解决方案\r\n为了保证用户访问到的数据一致性和实时性，必须保证三个服务节点与内容发布节点的数据始终是一致的，这就需要通过文件同步工具来实现，这里采用rsync，同时又要保证数据是实时的，这就需要inotify，即：使用inotify监视内容发布节点文件的变化，如果文件有变动，那么就启动rsync，将文件实时同步到三个服务节点。\r\n系统环境\r\n这里所有服务器均采用Linux操作系统，系统内核版本与节点信息如表1 所示：\r\n表1\r\n\r\n<a href="http://img1.51cto.com/attachment/201106/085306518.png" target="_blank"><img src="http://img1.51cto.com/attachment/201106/085306518.png" alt="" border="0" /></a>\r\n\r\n1 安装rsync与inotify-tools\r\ninotify-tools是用来监控文件系统变化的工具，因此必须安装在内容发布节点，服务节点无需安装inotify-tools，另外需要在web1、web2、web3、webserver节点上安装rsync，由于安装非常简单，这里不在讲述。\r\n在这个案例中，内容发布节点（即server）充当了rsync客户端的角色，而三个服务节点充当了rsync服务器端的角色，整个数据同步的过程，其实就是一个从客户端向服务端推送数据的过程。这点与上面我们讲述的案例刚好相反。\r\n\r\n2 在三个服务节点配置rsync\r\n这里给出三个服务节点的rsync配置文件，以供参考，读者可根据实际情况自行修改。\r\nWeb1节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web1]\r\npath = /web1/wwwroot/\r\ncomment = web1 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web1user\r\nsecrets file = /etc/web1.pass\r\nWeb2节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web2]\r\npath = /web2/wwwroot/\r\ncomment = web2 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web2user\r\nsecrets file = /etc/web2.pass\r\nWeb3节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web3]\r\npath = /web3/wwwroot/\r\ncomment = web3 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web3user\r\nsecrets file = /etc/web3.pass\r\n在三台服务节点rsyncd.conf文件配置完成后，依次启动rsync守护进程，接着将rsync服务加入到自启动文件中：\r\necho  “/usr/local/bin/rsync --daemon” &gt;&gt;/etc/rc.local\r\n到此为止，三个web服务节点已经配置完成。\r\n\r\n3 配置内容发布节点\r\n配置内容发布节点的主要工作是将生成的静态网页实时的同步到集群中三个服务节点，这个过程可以通过一个shell脚本来完成，脚本内容大致如下：\r\n#!/bin/bash\r\nhost1=192.168.12.131\r\nhost2=192.168.12.132\r\nhost3=192.168.12.133\r\n\r\nsrc=/web/wwwroot/\r\ndst1=web1\r\ndst2=web2\r\ndst3=web3\r\nuser1=web1user\r\nuser2=web3user\r\nuser3=web3user\r\n\r\n/usr/local/bin/inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e modify,delete,create,attrib  $src \\\r\n| while read files\r\ndo\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user1@$host1::$dst1">$user1@$host1::$dst1</a>\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user2@$host2::$dst2">$user2@$host2::$dst2</a>\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user3@$host3::$dst3">$user3@$host3::$dst3</a>\r\necho "${files} was rsynced" &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n脚本相关解释如下：\r\n--timefmt：指定时间的输出格式。\r\n--format：指定变化文件的详细信息。\r\n这两个参数一般配合使用，通过指定输出格式，输出类似与：\r\n15/04/10 00:29 /web/wwwroot/ixdba.shDELETE,ISDIR was rsynced\r\n15/04/10 00:30 /web/wwwroot/index.htmlMODIFY was rsynced\r\n15/04/10 00:31 /web/wwwroot/pcre-8.02.tar.gzCREATE was rsynced\r\n这个脚本的作用就是通过inotify监控文件目录的变化，进而触发rsync进行同步操作，由于这个过程是一种主动触发操作，通过系统内核完成的，所以，比起那些遍历整个目录的扫描方式，效率要高很多。\r\n有时会遇到这样的情况：向inotify监控的目录（这里是/web/wwwroot/）写入一个很大文件时，由于写入这个大文件需要一段时间，此时inotify就会持续不停的输出该文件被更新的信息， 这样就会持续不停的触发rsync去执行同步操作，占用了大量系统资源，那么针对这种情况，最理想的做法是等待文件写完后再去触发rsync同步。 在这种情况下，可以修改inotify的监控事件，即：“-e close_write,delete,create,attrib”。\r\n接着，将这个脚本命名为inotifyrsync.sh，放到/web/wwwroot目录下，然后给定可执行权限，放到后台运行：\r\nchmod 755 /web/wwwroot/inotifyrsync.sh\r\n/web/wwwroot/inotifyrsync.sh &amp;\r\n最后，将此脚本加入系统自启动文件：\r\necho  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local\r\n这样就完成了内容发布节点的所有配置工作。\r\n\r\n4 测试rsync+inotify实时同步功能\r\n所有配置完成后，可以在网页发布节点的/web/wwwroot目录下添加、删除或者修改某个文件，然后到三个服务节点对应的目录查看文件是否跟随网页发布节点的/web/wwwroot目录下文件发生变化，如果你看到三个服务节点对应的目录文件跟着内容发布节点目录文件同步变化，那么我们这个业务系统就配置成功了。\r\n\r\n</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-2', '', '', '2014-06-19 06:46:08', '2014-06-18 22:46:08', '', 116, 'http://afeier.sinaapp.com/?p=118', 0, 'revision', '', 0),
(117, 1, '2014-06-19 06:45:44', '2014-06-18 22:45:44', '<div></div>\n2011-06-03 08:50:08\n<div>标签：<a href="http://blog.51cto.com/tag-Linux.html" target="_blank">Linux</a> <a href="http://blog.51cto.com/tag-%E4%BC%91%E9%97%B2.html" target="_blank">休闲</a> <a href="http://blog.51cto.com/tag-rsync+inotify.html" target="_blank">rsync+inotify</a> <a href="http://blog.51cto.com/tag-%E8%81%8C%E5%9C%BA.html" target="_blank">职场</a> <a href="http://blog.51cto.com/tag-%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E5%A4%87%E4%BB%BD.html" target="_blank">数据实时备份</a></div>\n<div>原创作品，允许转载，转载时请务必以超链接形式标明文章 <a href="http://ixdba.blog.51cto.com/2895551/580280" target="_blank">原始出处</a> 、作者信息和本声明。否则将追究法律责任。<a href="http://ixdba.blog.51cto.com/2895551/580280">http://ixdba.blog.51cto.com/2895551/580280</a></div>\n<div>\n\n<strong>      </strong>在前面的博文中，我讲到过利用rsync实现数据的镜像和备份，但是要实现数据的实时备份，单独靠rsync还不能实现，本文就讲述下如何实现数据的实时备份。\n\n<strong>一、rsync的优点与不足\n</strong> 与传统的cp、tar备份方式相比，rsync具有安全性高、备份迅速、支持增量备份等优点，通过rsync可以解决对实时性要求不高的数据备份需求，例如定期的备份文件服务器数据到远端服务器，对本地磁盘定期做数据镜像等。\n随着应用系统规模的不断扩大，对数据的安全性和可靠性也提出的更好的要求，rsync在高端业务系统中也逐渐暴露出了很多不足，首先，rsync同步数据时，需要扫描所有文件后进行比对，进行差量传输。如果文件数量达到了百万甚至千万量级，扫描所有文件将是非常耗时的。而且正在发生变化的往往是其中很少的一部分，这是非常低效的方式。其次，rsync不能实时的去监测、同步数据，虽然它可以通过linux守护进程的方式进行触发同步，但是两次触发动作一定会有时间差，这样就导致了服务端和客户端数据可能出现不一致，无法在应用故障时完全的恢复数据。基于以上原因，rsync+inotify组合出现了！\n\n<strong>二、 初识inotify\n</strong> Inotify 是一种强大的、细粒度的、异步的文件系统事件监控机制，linux内核从2.6.13起，加入了Inotify支持，通过Inotify可以监控文件系统中添加、删除，修改、移动等各种细微事件，利用这个内核接口，第三方软件就可以监控文件系统下文件的各种变化情况，而inotify-tools就是这样的一个第三方软件。\n在上面章节中，我们讲到，rsync可以实现触发式的文件同步，但是通过crontab守护进程方式进行触发，同步的数据和实际数据会有差异，而inotify可以监控文件系统的各种变化，当文件有任何变动时，就触发rsync同步，这样刚好解决了同步数据的实时性问题。\n\n<strong>三、 安装inotify工具inotify-tools\n</strong> 由于inotify特性需要Linux内核的支持，在安装inotify-tools前要先确认Linux系统内核是否达到了2.6.13以上，如果Linux内核低于2.6.13版本，就需要重新编译内核加入inotify的支持，也可以用如下方法判断，内核是否支持inotify：\n[root@localhost webdata]# uname -r\n2.6.18-164.11.1.el5PAE\n[root@localhost webdata]# ll /proc/sys/fs/inotify\n总计 0\n-rw-r--r-- 1 root root 0 04-13 19:56 max_queued_events\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_instances\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_watches\n如果有上面三项输出，表示系统已经默认支持inotify，接着就可以开始安装inotify-tools了。\n可以到<a href="http://inotify-tools.sourceforge.net/">http://inotify-tools.sourceforge.net/</a>下载相应的inotify-tools版本，然后开始编译安装：\n[root@localhost  ~]# tar zxvf inotify-tools-3.14.tar.gz\n<a href="mailto:root@localhost">root@localhost</a>  ~]# cd inotify-tools-3.14\n[root@localhost inotify-tools-3.14]# ./configure\n[root@localhost inotify-tools-3.14]# make\n[root@localhost inotify-tools-3.14]# make install\n[root@localhost inotify-tools-3.14]# ll /usr/local/bin/inotifywa*\n-rwxr-xr-x 1 root root 37264 04-14 13:42 /usr/local/bin/inotifywait\n-rwxr-xr-x 1 root root 35438 04-14 13:42 /usr/local/bin/inotifywatch\ninotify-tools安装完成后，会生成inotifywait和inotifywatch两个指令，其中，inotifywait用于等待文件或文件集上的一个特定事件，它可以监控任何文件和目录设置，并且可以递归地监控整个目录树。\ninotifywatch用于收集被监控的文件系统统计数据，包括每个inotify事件发生多少次等信息。\n\n<strong>四、 inotify相关参数\n</strong>inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小。下面分别做简单介绍。\n/proc/sys/fs/inotify/max_queued_evnets\n表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。\n/proc/sys/fs/inotify/max_user_instances\n表示每一个real user ID可创建的inotify instatnces的数量上限。\n/proc/sys/fs/inotify/max_user_watches\n表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小，例如：\necho 30000000 &gt; /proc/sys/fs/inotify/max_user_watches\n\n<strong>五、 inotifywait相关参数\n</strong>Inotifywait是一个监控等待事件，可以配合shell脚本使用它，下面介绍一下常用的一些参数：\n -m， 即--monitor，表示始终保持事件监听状态。\n -r， 即--recursive，表示递归查询目录。\n -q， 即--quiet，表示打印出监控事件。\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。\n更详细的请参看man  inotifywait。\n\n<strong>六、 rsync+inotify企业应用案例\n</strong> 案例描述\n这是一个CMS内容发布系统，后端采用负载均衡集群部署方案，有一个负载调度节点和三个服务节点以及一个内容发布节点构成，内容发布节点负责将用户发布的数据生成静态页面，同时将静态网页传输到三台服务节点，而负载调度节点负责将用户请求根据负载算法调度到相应的服务节点，实现用户访问。用户要求在前端访问到的网页数据始终是最新的、一致的。\n解决方案\n为了保证用户访问到的数据一致性和实时性，必须保证三个服务节点与内容发布节点的数据始终是一致的，这就需要通过文件同步工具来实现，这里采用rsync，同时又要保证数据是实时的，这就需要inotify，即：使用inotify监视内容发布节点文件的变化，如果文件有变动，那么就启动rsync，将文件实时同步到三个服务节点。\n系统环境\n这里所有服务器均采用Linux操作系统，系统内核版本与节点信息如表1 所示：\n表1\n\n<a href="http://img1.51cto.com/attachment/201106/085306518.png" target="_blank"><img src="http://img1.51cto.com/attachment/201106/085306518.png" alt="" border="0" /></a>\n\n1 安装rsync与inotify-tools\ninotify-tools是用来监控文件系统变化的工具，因此必须安装在内容发布节点，服务节点无需安装inotify-tools，另外需要在web1、web2、web3、webserver节点上安装rsync，由于安装非常简单，这里不在讲述。\n在这个案例中，内容发布节点（即server）充当了rsync客户端的角色，而三个服务节点充当了rsync服务器端的角色，整个数据同步的过程，其实就是一个从客户端向服务端推送数据的过程。这点与上面我们讲述的案例刚好相反。\n\n2 在三个服务节点配置rsync\n这里给出三个服务节点的rsync配置文件，以供参考，读者可根据实际情况自行修改。\nWeb1节点rsyncd.conf配置如下：\nuid = nobody\ngid = nobody\nuse chroot = no\nmax connections = 10\nstrict modes = yes\npid file = /var/run/rsyncd.pid\nlock file = /var/run/rsync.lock\nlog file = /var/log/rsyncd.log\n\n[web1]\npath = /web1/wwwroot/\ncomment = web1 file\nignore errors\nread only = no\nwrite only = no\nhosts allow = 192.168.12.134\nhosts deny = *\nlist = false\nuid = root\ngid = root\nauth users = web1user\nsecrets file = /etc/web1.pass\nWeb2节点rsyncd.conf配置如下：\nuid = nobody\ngid = nobody\nuse chroot = no\nmax connections = 10\nstrict modes = yes\npid file = /var/run/rsyncd.pid\nlock file = /var/run/rsync.lock\nlog file = /var/log/rsyncd.log\n\n[web2]\npath = /web2/wwwroot/\ncomment = web2 file\nignore errors\nread only = no\nwrite only = no\nhosts allow = 192.168.12.134\nhosts deny = *\nlist = false\nuid = root\ngid = root\nauth users = web2user\nsecrets file = /etc/web2.pass\nWeb3节点rsyncd.conf配置如下：\nuid = nobody\ngid = nobody\nuse chroot = no\nmax connections = 10\nstrict modes = yes\npid file = /var/run/rsyncd.pid\nlock file = /var/run/rsync.lock\nlog file = /var/log/rsyncd.log\n\n[web3]\npath = /web3/wwwroot/\ncomment = web3 file\nignore errors\nread only = no\nwrite only = no\nhosts allow = 192.168.12.134\nhosts deny = *\nlist = false\nuid = root\ngid = root\nauth users = web3user\nsecrets file = /etc/web3.pass\n在三台服务节点rsyncd.conf文件配置完成后，依次启动rsync守护进程，接着将rsync服务加入到自启动文件中：\necho  “/usr/local/bin/rsync --daemon” &gt;&gt;/etc/rc.local\n到此为止，三个web服务节点已经配置完成。\n\n3 配置内容发布节点\n配置内容发布节点的主要工作是将生成的静态网页实时的同步到集群中三个服务节点，这个过程可以通过一个shell脚本来完成，脚本内容大致如下：\n#!/bin/bash\nhost1=192.168.12.131\nhost2=192.168.12.132\nhost3=192.168.12.133\n\nsrc=/web/wwwroot/\ndst1=web1\ndst2=web2\ndst3=web3\nuser1=web1user\nuser2=web3user\nuser3=web3user\n\n/usr/local/bin/inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e modify,delete,create,attrib  $src \\\n| while read files\ndo\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user1@$host1::$dst1">$user1@$host1::$dst1</a>\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user2@$host2::$dst2">$user2@$host2::$dst2</a>\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user3@$host3::$dst3">$user3@$host3::$dst3</a>\necho "${files} was rsynced" &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\ndone\n脚本相关解释如下：\n--timefmt：指定时间的输出格式。\n--format：指定变化文件的详细信息。\n这两个参数一般配合使用，通过指定输出格式，输出类似与：\n15/04/10 00:29 /web/wwwroot/ixdba.shDELETE,ISDIR was rsynced\n15/04/10 00:30 /web/wwwroot/index.htmlMODIFY was rsynced\n15/04/10 00:31 /web/wwwroot/pcre-8.02.tar.gzCREATE was rsynced\n这个脚本的作用就是通过inotify监控文件目录的变化，进而触发rsync进行同步操作，由于这个过程是一种主动触发操作，通过系统内核完成的，所以，比起那些遍历整个目录的扫描方式，效率要高很多。\n有时会遇到这样的情况：向inotify监控的目录（这里是/web/wwwroot/）写入一个很大文件时，由于写入这个大文件需要一段时间，此时inotify就会持续不停的输出该文件被更新的信息， 这样就会持续不停的触发rsync去执行同步操作，占用了大量系统资源，那么针对这种情况，最理想的做法是等待文件写完后再去触发rsync同步。 在这种情况下，可以修改inotify的监控事件，即：“-e close_write,delete,create,attrib”。\n接着，将这个脚本命名为inotifyrsync.sh，放到/web/wwwroot目录下，然后给定可执行权限，放到后台运行：\nchmod 755 /web/wwwroot/inotifyrsync.sh\n/web/wwwroot/inotifyrsync.sh &amp;\n最后，将此脚本加入系统自启动文件：\necho  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local\n这样就完成了内容发布节点的所有配置工作。\n\n4 测试rsync+inotify实时同步功能\n所有配置完成后，可以在网页发布节点的/web/wwwroot目录下添加、删除或者修改某个文件，然后到三个服务节点对应的目录查看文件是否跟随网页发布节点的/web/wwwroot目录下文件发生变化，如果你看到三个服务节点对应的目录文件跟着内容发布节点目录文件同步变化，那么我们这个业务系统就配置成功了。\n\n</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision', '', '', '2014-06-19 06:45:44', '2014-06-18 22:45:44', '', 116, 'http://afeier.sinaapp.com/?p=117', 0, 'revision', '', 0),
(119, 1, '2014-06-19 06:53:20', '0000-00-00 00:00:00', '-a  带属性\n\n-r 递归备份\n\n-H 包括软连接\n\n-z 压缩\n\n--progress  显示备份过程，在自动环境中不需要\n\n--delete   同步删除文件\n\n-e ssh  通过shell ：ssh', 'rsync 参数', '', 'draft', 'open', 'open', '', '', '', '', '2014-06-19 06:53:20', '2014-06-18 22:53:20', '', 0, 'http://afeier.sinaapp.com/?p=119', 0, 'post', '', 0),
(120, 1, '2014-06-19 18:56:04', '2014-06-19 10:56:04', '<div>1、建立主机间信任关系</div>\n<div>\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\n<pre>jsmith@local-host$ [Note: You are on local-host here]\n\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\nEnter passphrase (empty for no passphrase): [Press enter key]\nEnter same passphrase again: [Pess enter key]\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\nThe key fingerprint is:\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\njsmith@remote-host''s password:\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\n\n.ssh/authorized_keys\n\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\n<h3>Step 3: Login to remote-host without entering the password</h3>\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\n[Note: SSH did not ask for password.]\n\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\n</div>\n<div>2、 apt-get install inotify-tools</div>\n<div></div>\n<div>3、生成脚本 rsync.sh</div>\n<div>#!/bin/bash\nhost1=8.8.8.8src=/datas/www/test/dest1=/datas/www/dest/\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,move,create,attrib $src | while read filedo\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p22 '' $src xx@$host1:$dest1 &amp;&amp;\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\ndone</div>\n<div><strong> inotifywait相关参数</strong></div>\n<div> -m， 即--monitor，表示始终保持事件监听状态。\n -r， 即--recursive，表示递归查询目录。\n -q， 即--quiet，表示打印出监控事件。\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。echo  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local</div>\n<div>--exclude "*.txt|*.log" 排除某些文件</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-autosave', '', '', '2014-06-19 18:56:04', '2014-06-19 10:56:04', '', 116, 'http://afeier.sinaapp.com/?p=120', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(121, 1, '2014-06-19 06:46:43', '2014-06-18 22:46:43', '<div></div>\r\n<strong>      </strong>在前面的博文中，我讲到过利用rsync实现数据的镜像和备份，但是要实现数据的实时备份，单独靠rsync还不能实现，本文就讲述下如何实现数据的实时备份。\r\n<div>\r\n\r\n<strong>一、rsync的优点与不足\r\n</strong> 与传统的cp、tar备份方式相比，rsync具有安全性高、备份迅速、支持增量备份等优点，通过rsync可以解决对实时性要求不高的数据备份需求，例如定期的备份文件服务器数据到远端服务器，对本地磁盘定期做数据镜像等。\r\n随着应用系统规模的不断扩大，对数据的安全性和可靠性也提出的更好的要求，rsync在高端业务系统中也逐渐暴露出了很多不足，首先，rsync同步数据时，需要扫描所有文件后进行比对，进行差量传输。如果文件数量达到了百万甚至千万量级，扫描所有文件将是非常耗时的。而且正在发生变化的往往是其中很少的一部分，这是非常低效的方式。其次，rsync不能实时的去监测、同步数据，虽然它可以通过linux守护进程的方式进行触发同步，但是两次触发动作一定会有时间差，这样就导致了服务端和客户端数据可能出现不一致，无法在应用故障时完全的恢复数据。基于以上原因，rsync+inotify组合出现了！\r\n\r\n<strong>二、 初识inotify\r\n</strong> Inotify 是一种强大的、细粒度的、异步的文件系统事件监控机制，linux内核从2.6.13起，加入了Inotify支持，通过Inotify可以监控文件系统中添加、删除，修改、移动等各种细微事件，利用这个内核接口，第三方软件就可以监控文件系统下文件的各种变化情况，而inotify-tools就是这样的一个第三方软件。\r\n在上面章节中，我们讲到，rsync可以实现触发式的文件同步，但是通过crontab守护进程方式进行触发，同步的数据和实际数据会有差异，而inotify可以监控文件系统的各种变化，当文件有任何变动时，就触发rsync同步，这样刚好解决了同步数据的实时性问题。\r\n\r\n<strong>三、 安装inotify工具inotify-tools\r\n</strong> 由于inotify特性需要Linux内核的支持，在安装inotify-tools前要先确认Linux系统内核是否达到了2.6.13以上，如果Linux内核低于2.6.13版本，就需要重新编译内核加入inotify的支持，也可以用如下方法判断，内核是否支持inotify：\r\n[root@localhost webdata]# uname -r\r\n2.6.18-164.11.1.el5PAE\r\n[root@localhost webdata]# ll /proc/sys/fs/inotify\r\n总计 0\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_queued_events\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_instances\r\n-rw-r--r-- 1 root root 0 04-13 19:56 max_user_watches\r\n如果有上面三项输出，表示系统已经默认支持inotify，接着就可以开始安装inotify-tools了。\r\n可以到<a href="http://inotify-tools.sourceforge.net/">http://inotify-tools.sourceforge.net/</a>下载相应的inotify-tools版本，然后开始编译安装：\r\n[root@localhost  ~]# tar zxvf inotify-tools-3.14.tar.gz\r\n<a href="mailto:root@localhost">root@localhost</a>  ~]# cd inotify-tools-3.14\r\n[root@localhost inotify-tools-3.14]# ./configure\r\n[root@localhost inotify-tools-3.14]# make\r\n[root@localhost inotify-tools-3.14]# make install\r\n[root@localhost inotify-tools-3.14]# ll /usr/local/bin/inotifywa*\r\n-rwxr-xr-x 1 root root 37264 04-14 13:42 /usr/local/bin/inotifywait\r\n-rwxr-xr-x 1 root root 35438 04-14 13:42 /usr/local/bin/inotifywatch\r\ninotify-tools安装完成后，会生成inotifywait和inotifywatch两个指令，其中，inotifywait用于等待文件或文件集上的一个特定事件，它可以监控任何文件和目录设置，并且可以递归地监控整个目录树。\r\ninotifywatch用于收集被监控的文件系统统计数据，包括每个inotify事件发生多少次等信息。\r\n\r\n<strong>四、 inotify相关参数\r\n</strong>inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小。下面分别做简单介绍。\r\n/proc/sys/fs/inotify/max_queued_evnets\r\n表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。\r\n/proc/sys/fs/inotify/max_user_instances\r\n表示每一个real user ID可创建的inotify instatnces的数量上限。\r\n/proc/sys/fs/inotify/max_user_watches\r\n表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小，例如：\r\necho 30000000 &gt; /proc/sys/fs/inotify/max_user_watches\r\n\r\n<strong>五、 inotifywait相关参数\r\n</strong>Inotifywait是一个监控等待事件，可以配合shell脚本使用它，下面介绍一下常用的一些参数：\r\n -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。\r\n更详细的请参看man  inotifywait。\r\n\r\n<strong>六、 rsync+inotify企业应用案例\r\n</strong> 案例描述\r\n这是一个CMS内容发布系统，后端采用负载均衡集群部署方案，有一个负载调度节点和三个服务节点以及一个内容发布节点构成，内容发布节点负责将用户发布的数据生成静态页面，同时将静态网页传输到三台服务节点，而负载调度节点负责将用户请求根据负载算法调度到相应的服务节点，实现用户访问。用户要求在前端访问到的网页数据始终是最新的、一致的。\r\n解决方案\r\n为了保证用户访问到的数据一致性和实时性，必须保证三个服务节点与内容发布节点的数据始终是一致的，这就需要通过文件同步工具来实现，这里采用rsync，同时又要保证数据是实时的，这就需要inotify，即：使用inotify监视内容发布节点文件的变化，如果文件有变动，那么就启动rsync，将文件实时同步到三个服务节点。\r\n系统环境\r\n这里所有服务器均采用Linux操作系统，系统内核版本与节点信息如表1 所示：\r\n表1\r\n\r\n<a href="http://img1.51cto.com/attachment/201106/085306518.png" target="_blank"><img src="http://img1.51cto.com/attachment/201106/085306518.png" alt="" border="0" /></a>\r\n\r\n1 安装rsync与inotify-tools\r\ninotify-tools是用来监控文件系统变化的工具，因此必须安装在内容发布节点，服务节点无需安装inotify-tools，另外需要在web1、web2、web3、webserver节点上安装rsync，由于安装非常简单，这里不在讲述。\r\n在这个案例中，内容发布节点（即server）充当了rsync客户端的角色，而三个服务节点充当了rsync服务器端的角色，整个数据同步的过程，其实就是一个从客户端向服务端推送数据的过程。这点与上面我们讲述的案例刚好相反。\r\n\r\n2 在三个服务节点配置rsync\r\n这里给出三个服务节点的rsync配置文件，以供参考，读者可根据实际情况自行修改。\r\nWeb1节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web1]\r\npath = /web1/wwwroot/\r\ncomment = web1 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web1user\r\nsecrets file = /etc/web1.pass\r\nWeb2节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web2]\r\npath = /web2/wwwroot/\r\ncomment = web2 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web2user\r\nsecrets file = /etc/web2.pass\r\nWeb3节点rsyncd.conf配置如下：\r\nuid = nobody\r\ngid = nobody\r\nuse chroot = no\r\nmax connections = 10\r\nstrict modes = yes\r\npid file = /var/run/rsyncd.pid\r\nlock file = /var/run/rsync.lock\r\nlog file = /var/log/rsyncd.log\r\n\r\n[web3]\r\npath = /web3/wwwroot/\r\ncomment = web3 file\r\nignore errors\r\nread only = no\r\nwrite only = no\r\nhosts allow = 192.168.12.134\r\nhosts deny = *\r\nlist = false\r\nuid = root\r\ngid = root\r\nauth users = web3user\r\nsecrets file = /etc/web3.pass\r\n在三台服务节点rsyncd.conf文件配置完成后，依次启动rsync守护进程，接着将rsync服务加入到自启动文件中：\r\necho  “/usr/local/bin/rsync --daemon” &gt;&gt;/etc/rc.local\r\n到此为止，三个web服务节点已经配置完成。\r\n\r\n3 配置内容发布节点\r\n配置内容发布节点的主要工作是将生成的静态网页实时的同步到集群中三个服务节点，这个过程可以通过一个shell脚本来完成，脚本内容大致如下：\r\n#!/bin/bash\r\nhost1=192.168.12.131\r\nhost2=192.168.12.132\r\nhost3=192.168.12.133\r\n\r\nsrc=/web/wwwroot/\r\ndst1=web1\r\ndst2=web2\r\ndst3=web3\r\nuser1=web1user\r\nuser2=web3user\r\nuser3=web3user\r\n\r\n/usr/local/bin/inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e modify,delete,create,attrib  $src \\\r\n| while read files\r\ndo\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user1@$host1::$dst1">$user1@$host1::$dst1</a>\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user2@$host2::$dst2">$user2@$host2::$dst2</a>\r\n/usr/bin/rsync -vzrtopg --delete --progress --password-file=/etc/server.pass $src<a href="mailto:$user3@$host3::$dst3">$user3@$host3::$dst3</a>\r\necho "${files} was rsynced" &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n脚本相关解释如下：\r\n--timefmt：指定时间的输出格式。\r\n--format：指定变化文件的详细信息。\r\n这两个参数一般配合使用，通过指定输出格式，输出类似与：\r\n15/04/10 00:29 /web/wwwroot/ixdba.shDELETE,ISDIR was rsynced\r\n15/04/10 00:30 /web/wwwroot/index.htmlMODIFY was rsynced\r\n15/04/10 00:31 /web/wwwroot/pcre-8.02.tar.gzCREATE was rsynced\r\n这个脚本的作用就是通过inotify监控文件目录的变化，进而触发rsync进行同步操作，由于这个过程是一种主动触发操作，通过系统内核完成的，所以，比起那些遍历整个目录的扫描方式，效率要高很多。\r\n有时会遇到这样的情况：向inotify监控的目录（这里是/web/wwwroot/）写入一个很大文件时，由于写入这个大文件需要一段时间，此时inotify就会持续不停的输出该文件被更新的信息， 这样就会持续不停的触发rsync去执行同步操作，占用了大量系统资源，那么针对这种情况，最理想的做法是等待文件写完后再去触发rsync同步。 在这种情况下，可以修改inotify的监控事件，即：“-e close_write,delete,create,attrib”。\r\n接着，将这个脚本命名为inotifyrsync.sh，放到/web/wwwroot目录下，然后给定可执行权限，放到后台运行：\r\nchmod 755 /web/wwwroot/inotifyrsync.sh\r\n/web/wwwroot/inotifyrsync.sh &amp;\r\n最后，将此脚本加入系统自启动文件：\r\necho  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local\r\n这样就完成了内容发布节点的所有配置工作。\r\n\r\n4 测试rsync+inotify实时同步功能\r\n所有配置完成后，可以在网页发布节点的/web/wwwroot目录下添加、删除或者修改某个文件，然后到三个服务节点对应的目录查看文件是否跟随网页发布节点的/web/wwwroot目录下文件发生变化，如果你看到三个服务节点对应的目录文件跟着内容发布节点目录文件同步变化，那么我们这个业务系统就配置成功了。\r\n\r\n</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-3', '', '', '2014-06-19 06:46:43', '2014-06-18 22:46:43', '', 116, 'http://afeier.sinaapp.com/?p=121', 0, 'revision', '', 0),
(125, 1, '2014-06-19 18:54:40', '2014-06-19 10:54:40', '<div>1、建立主机间信任关系</div>\r\n<div>\r\n<h3>Step 1: Create public and private keys using ssh-key-gen on local-host</h3>\r\n<pre>jsmith@local-host$ [Note: You are on local-host here]\r\n\r\njsmith@local-host$ <strong>ssh-keygen </strong>Generating public/private rsa key pair.\r\nEnter file in which to save the key (/home/jsmith/.ssh/id_rsa):[Enter key]\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Pess enter key]\r\nYour identification has been saved in /home/jsmith/.ssh/id_rsa.\r\nYour public key has been saved in /home/jsmith/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n33:b3:fe:af:95:95:18:11:31:d5:de:96:2f:f2:35:f9 jsmith@local-host</pre>\r\n<h3>Step 2: Copy the public key to remote-host using ssh-copy-id</h3>\r\n<pre>jsmith@local-host$ <strong>ssh-copy-id -i ~/.ssh/id_rsa.pub remote-host</strong>\r\njsmith@remote-host''s password:\r\nNow try logging into the machine, with "ssh ''remote-host''", and check in:\r\n\r\n.ssh/authorized_keys\r\n\r\nto make sure we haven''t added extra keys that you weren''t expecting.</pre>\r\n<strong>Note:</strong> ssh-copy-id <strong>appends</strong> the keys to the remote-host’s .ssh/authorized_key.\r\n<h3>Step 3: Login to remote-host without entering the password</h3>\r\n<pre>jsmith@local-host$ <strong>ssh remote-host</strong>\r\nLast login: Sun Nov 16 17:22:33 2008 from 192.168.1.2\r\n[Note: SSH did not ask for password.]\r\n\r\njsmith@remote-host$ [Note: You are on remote-host here]</pre>\r\n</div>\r\n<div>2、 apt-get install inotify-tools</div>\r\n<div></div>\r\n<div>3、生成脚本 rsync.sh</div>\r\n<div>#!/bin/bash\r\nhost1=8.8.8.8src=/datas/www/test/dest1=/datas/www/dest/\r\n#while inotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,create,attrib $src;\r\ninotifywait -mrq --timefmt ''%d/%m/%y %H:%M'' --format ''%T %w%f%e'' -e close_write,delete,move,create,attrib $src | while read filedo\r\n/usr/bin/rsync -avrz --progress --delete -e ''ssh -p1780 '' $src xx@$host1:$dest1 &amp;&amp;\r\necho $file &gt;&gt;/tmp/rsync.log 2&gt;&amp;1\r\ndone\r\n\r\n</div>\r\n<div><strong> inotifywait相关参数</strong></div>\r\n<div> -m， 即--monitor，表示始终保持事件监听状态。\r\n -r， 即--recursive，表示递归查询目录。\r\n -q， 即--quiet，表示打印出监控事件。\r\n -e， 即--event，通过此参数可以指定要监控的事件，常见的事件有modify、delete、create、attrib等。echo  “/web/wwwroot/inotifyrsync.sh &amp;”&gt;&gt;/etc/rc.local</div>\r\n<div>--exclude "*.txt|*.log" 排除某些文件</div>', '通过rsync+inotify实现数据的实时备份', '', 'inherit', 'open', 'open', '', '116-revision-7', '', '', '2014-06-19 18:54:40', '2014-06-19 10:54:40', '', 116, 'http://afeier.sinaapp.com/?p=125', 0, 'revision', '', 0),
(126, 1, '2014-06-19 23:23:46', '2014-06-19 15:23:46', '<h1><a href="http://blog.csdn.net/az9009za/article/details/6170730">让Linux的进程不受终端影响</a></h1>\r\n<div>分类： <a href="http://blog.csdn.net/AZ9009ZA/article/category/765309">Linux系统</a>2011-01-31 12:40 973人阅读 <a href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#comments">评论</a>(0) <a title="收藏">收藏</a> <a title="举报" href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#report">举报</a></div>\r\n<div><a href="http://www.csdn.net/tag/%e7%bb%88%e7%ab%af" target="_blank">终端</a><a href="http://www.csdn.net/tag/linux" target="_blank">linux</a><a href="http://www.csdn.net/tag/%e4%bd%9c%e4%b8%9a" target="_blank">作业</a><a href="http://www.csdn.net/tag/bash" target="_blank">bash</a><a href="http://www.csdn.net/tag/%e4%bb%bb%e5%8a%a1" target="_blank">任务</a><a href="http://www.csdn.net/tag/%e7%bd%91%e7%bb%9c" target="_blank">网络</a></div>\r\n<div id="article_content">\r\n\r\n使用SSH远程登陆上服务器，运行一些耗时的任务时，如果因为网络中断，这些任务也会就此中断，应此需要这些任务不受终端断开而影响，首先先看下图：\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296439419275b.gif" alt="" />\r\n\r\n&nbsp;\r\n\r\n这是运行以下命令的结果 ： ping localhost &gt; /dev/null &amp;，很明显ping是sshd的子子进程，因此当sshd断开连接时，ping命令必然会终止。\r\n\r\n&nbsp;\r\n\r\n以下有几种方法避免此种情况发生：\r\n\r\n&nbsp;\r\n\r\n一、使用nohup：\r\n\r\n在网络断开和logout时，终端会收到hup信息，因此会关闭其所有子进程，nohup正是针对此情况：\r\n\r\n运行如下命令： nohup ping localhost &gt; /dev/null &amp; ，然后断开终端，可以看到：\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296440546WX9o.gif" alt="" />\r\n\r\n&nbsp;\r\n\r\n断开终端之后，父进程ID变为1，即被init所接管的孤儿进程，因为其原来的父进程30999已经退出。\r\n\r\n&nbsp;\r\n\r\n二、使用setuid\r\n\r\nsetuid ping localhost &gt; /dev/null &amp;\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296441248KRqq.gif" alt="" />\r\n\r\n&nbsp;\r\n\r\n可见setsid直接将其父进程ID设置1\r\n\r\n&nbsp;\r\n\r\n三、使用()加上&amp;元字符\r\n\r\n运行如下命令：( ping localhost &gt; /dev/null &amp;)\r\n\r\n&nbsp;\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_12964416073trn.gif" alt="" />\r\n\r\n&nbsp;\r\n\r\n同setsid一样结果，过程是如下的\r\n\r\n&nbsp;\r\n\r\n├─sshd─┬─sshd─┬─bash───bash───ping\r\n\r\n因为&amp;是元字符，因此会新开一个bash来解释执行ping，然后()使ping成为子shell，右边的bash在解释完毕后会退出，但是ping子进程还在，因此使其成为孤儿进程，被init接管。\r\n\r\n&nbsp;\r\n\r\n四、使用screen\r\n\r\n可能需要手动安装 yum install -y screen\r\n\r\n常用命令：\r\n\r\nscreen：启用一个screen会话\r\n\r\n键入C-a c ，按下Ctrl键+a组合键，然后再按下c键：会在当前screen会话中新建一个窗口/BASH\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296444476bxQ4.gif" alt="" />\r\n\r\nexit：如果是该screen会话的唯一窗口，该screen会话将会退出，否则screen会切换到前一个窗口。\r\n\r\nscreen -d pid:detach分离screen会话\r\n\r\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296443311F6hx.gif" alt="" />\r\n\r\n&nbsp;\r\n\r\nscreen -r pid:reattach重新附着会话，比如你可以在一个会话中前台运行ls -R  /，然后退出screen会话，再reattach该会话，可以发现仍在继续执行或者已经执行完毕。\r\n\r\n&nbsp;\r\n\r\n五、使用disown\r\n\r\n用法如下：\r\n\r\ndisown -h jobspec : 让某个作业忽略HUP信号。\r\ndisown -ah : 让所有作业忽略HUP信号。\r\ndisown -rh : 让正在运行的作业忽略HUP信号。\r\n\r\n针对作业，适用于运行时比如加了 &amp; 的命令，使用此命令后会将其从作业列表中删除，如果是前台运行的命令的话，可以先按Ctrl+Z，然后bg jobspec，再使用disown即可。\r\n\r\n&nbsp;\r\n\r\n</div>', '让Linux的进程不受终端影响', '', 'publish', 'open', 'open', '', '%e8%ae%a9linux%e7%9a%84%e8%bf%9b%e7%a8%8b%e4%b8%8d%e5%8f%97%e7%bb%88%e7%ab%af%e5%bd%b1%e5%93%8d', '', '', '2014-06-19 23:23:46', '2014-06-19 15:23:46', '', 0, 'http://afeier.sinaapp.com/?p=126', 0, 'post', '', 0),
(127, 1, '2014-06-19 23:23:36', '2014-06-19 15:23:36', '<h1><a href="http://blog.csdn.net/az9009za/article/details/6170730">让Linux的进程不受终端影响</a></h1>\n<div>分类： <a href="http://blog.csdn.net/AZ9009ZA/article/category/765309">Linux系统</a>2011-01-31 12:40 973人阅读 <a href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#comments">评论</a>(0) <a title="收藏">收藏</a> <a title="举报" href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#report">举报</a></div>\n<div><a href="http://www.csdn.net/tag/%e7%bb%88%e7%ab%af" target="_blank">终端</a><a href="http://www.csdn.net/tag/linux" target="_blank">linux</a><a href="http://www.csdn.net/tag/%e4%bd%9c%e4%b8%9a" target="_blank">作业</a><a href="http://www.csdn.net/tag/bash" target="_blank">bash</a><a href="http://www.csdn.net/tag/%e4%bb%bb%e5%8a%a1" target="_blank">任务</a><a href="http://www.csdn.net/tag/%e7%bd%91%e7%bb%9c" target="_blank">网络</a></div>\n<div id="article_content">\n\n使用SSH远程登陆上服务器，运行一些耗时的任务时，如果因为网络中断，这些任务也会就此中断，应此需要这些任务不受终端断开而影响，首先先看下图：\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296439419275b.gif" alt="" />\n\n&nbsp;\n\n这是运行以下命令的结果 ： ping localhost &gt; /dev/null &amp;，很明显ping是sshd的子子进程，因此当sshd断开连接时，ping命令必然会终止。\n\n&nbsp;\n\n以下有几种方法避免此种情况发生：\n\n&nbsp;\n\n一、使用nohup：\n\n在网络断开和logout时，终端会收到hup信息，因此会关闭其所有子进程，nohup正是针对此情况：\n\n运行如下命令： nohup ping localhost &gt; /dev/null &amp; ，然后断开终端，可以看到：\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296440546WX9o.gif" alt="" />\n\n&nbsp;\n\n断开终端之后，父进程ID变为1，即被init所接管的孤儿进程，因为其原来的父进程30999已经退出。\n\n&nbsp;\n\n二、使用setuid\n\nsetuid ping localhost &gt; /dev/null &amp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296441248KRqq.gif" alt="" />\n\n&nbsp;\n\n可见setsid直接将其父进程ID设置1\n\n&nbsp;\n\n三、使用()加上&amp;元字符\n\n运行如下命令：( ping localhost &gt; /dev/null &amp;)\n\n&nbsp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_12964416073trn.gif" alt="" />\n\n&nbsp;\n\n同setsid一样结果，过程是如下的\n\n&nbsp;\n\n├─sshd─┬─sshd─┬─bash───bash───ping\n\n因为&amp;是元字符，因此会新开一个bash来解释执行ping，然后()使ping成为子shell，右边的bash在解释完毕后会退出，但是ping子进程还在，因此使其成为孤儿进程，被init接管。\n\n&nbsp;\n\n四、使用screen\n\n可能需要手动安装 yum install -y screen\n\n常用命令：\n\nscreen：启用一个screen会话\n\n键入C-a c ，按下Ctrl键+a组合键，然后再按下c键：会在当前screen会话中新建一个窗口/BASH\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296444476bxQ4.gif" alt="" />\n\nexit：如果是该screen会话的唯一窗口，该screen会话将会退出，否则screen会切换到前一个窗口。\n\nscreen -d pid:detach分离screen会话\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296443311F6hx.gif" alt="" />\n\n&nbsp;\n\nscreen -r pid:reattach重新附着会话，比如你可以在一个会话中前台运行ls -R  /，然后退出screen会话，再reattach该会话，可以发现仍在继续执行或者已经执行完毕。\n\n&nbsp;\n\n五、使用disown\n\n用法如下：\n\ndisown -h jobspec : 让某个作业忽略HUP信号。\ndisown -ah : 让所有作业忽略HUP信号。\ndisown -rh : 让正在运行的作业忽略HUP信号。\n\n针对作业，适用于运行时比如加了 &amp; 的命令，使用此命令后会将其从作业列表中删除，如果是前台运行的命令的话，可以先按Ctrl+Z，然后bg jobspec，再使用disown即可。\n\n&nbsp;\n\n</div>', '让Linux的进程不受终端影响', '', 'inherit', 'open', 'open', '', '126-revision', '', '', '2014-06-19 23:23:36', '2014-06-19 15:23:36', '', 126, 'http://afeier.sinaapp.com/?p=127', 0, 'revision', '', 0),
(128, 1, '2014-06-19 23:24:49', '2014-06-19 15:24:49', '<h1><a href="http://blog.csdn.net/az9009za/article/details/6170730">让Linux的进程不受终端影响</a></h1>\n<div>分类： <a href="http://blog.csdn.net/AZ9009ZA/article/category/765309">Linux系统</a>2011-01-31 12:40 973人阅读 <a href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#comments">评论</a>(0) <a title="收藏">收藏</a> <a title="举报" href="http://blog.csdn.net/AZ9009ZA/article/details/6170730#report">举报</a></div>\n<div><a href="http://www.csdn.net/tag/%e7%bb%88%e7%ab%af" target="_blank">终端</a><a href="http://www.csdn.net/tag/linux" target="_blank">linux</a><a href="http://www.csdn.net/tag/%e4%bd%9c%e4%b8%9a" target="_blank">作业</a><a href="http://www.csdn.net/tag/bash" target="_blank">bash</a><a href="http://www.csdn.net/tag/%e4%bb%bb%e5%8a%a1" target="_blank">任务</a><a href="http://www.csdn.net/tag/%e7%bd%91%e7%bb%9c" target="_blank">网络</a></div>\n<div id="article_content">\n\n使用SSH远程登陆上服务器，运行一些耗时的任务时，如果因为网络中断，这些任务也会就此中断，应此需要这些任务不受终端断开而影响，首先先看下图：\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296439419275b.gif" alt="" />\n\n&nbsp;\n\n这是运行以下命令的结果 ： ping localhost &gt; /dev/null &amp;，很明显ping是sshd的子子进程，因此当sshd断开连接时，ping命令必然会终止。\n\n&nbsp;\n\n以下有几种方法避免此种情况发生：\n\n&nbsp;\n\n一、使用nohup：\n\n在网络断开和logout时，终端会收到hup信息，因此会关闭其所有子进程，nohup正是针对此情况：\n\n运行如下命令： nohup ping localhost &gt; /dev/null &amp; ，然后断开终端，可以看到：\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296440546WX9o.gif" alt="" />\n\n&nbsp;\n\n断开终端之后，父进程ID变为1，即被init所接管的孤儿进程，因为其原来的父进程30999已经退出。\n\n&nbsp;\n\n二、使用setuid\n\nsetuid ping localhost &gt; /dev/null &amp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296441248KRqq.gif" alt="" />\n\n&nbsp;\n\n可见setsid直接将其父进程ID设置1\n\n&nbsp;\n\n三、使用()加上&amp;元字符\n\n运行如下命令：( ping localhost &gt; /dev/null &amp;)\n\n&nbsp;\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_12964416073trn.gif" alt="" />\n\n&nbsp;\n\n同setsid一样结果，过程是如下的\n\n&nbsp;\n\n├─sshd─┬─sshd─┬─bash───bash───ping\n\n因为&amp;是元字符，因此会新开一个bash来解释执行ping，然后()使ping成为子shell，右边的bash在解释完毕后会退出，但是ping子进程还在，因此使其成为孤儿进程，被init接管。\n\n&nbsp;\n\n四、使用screen\n\n可能需要手动安装 yum install -y screen\n\n常用命令：\n\nscreen：启用一个screen会话\n\n键入C-a c ，按下Ctrl键+a组合键，然后再按下c键：会在当前screen会话中新建一个窗口/BASH\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296444476bxQ4.gif" alt="" />\n\nexit：如果是该screen会话的唯一窗口，该screen会话将会退出，否则screen会切换到前一个窗口。\n\nscreen -d pid:detach分离screen会话\n\n<img src="http://hi.csdn.net/attachment/201101/31/0_1296443311F6hx.gif" alt="" />\n\n&nbsp;\n\nscreen -r pid:reattach重新附着会话，比如你可以在一个会话中前台运行ls -R  /，然后退出screen会话，再reattach该会话，可以发现仍在继续执行或者已经执行完毕。\n\n&nbsp;\n\n五、使用disown\n\n用法如下：\n\ndisown -h jobspec : 让某个作业忽略HUP信号。\ndisown -ah : 让所有作业忽略HUP信号。\ndisown -rh : 让正在运行的作业忽略HUP信号。\n\n针对作业，适用于运行时比如加了 &amp; 的命令，使用此命令后会将其从作业列表中删除，如果是前台运行的命令的话，可以先按Ctrl+Z，然后bg jobspec，再使用disown即可。\n\n&nbsp;\n\n</div>', '让Linux的进程不受终端影响', '', 'inherit', 'open', 'open', '', '126-autosave', '', '', '2014-06-19 23:24:49', '2014-06-19 15:24:49', '', 126, 'http://afeier.sinaapp.com/?p=128', 0, 'revision', '', 0),
(131, 1, '2014-06-23 15:26:40', '2014-06-23 07:26:40', '<h1></h1>\n<div>2011-09-01 11:44:20</div>\n<div></div>\n<div id="note_170186265_full">\n<div id="link-report"> 系统环境：Ubuntu 11.04（其他版本其实也类似），使用apt-get install mysql-server。\n\n默认情况下，mysql的数据目录是/var/lib/mysql，因为如果你的数据库以后会越来越大，那么你就得考虑用一个空间足够大的分区来存放数据库文件，所以还是选择把它修改到其他位置，比如/usr/data/mysql_data。这个目录可以直接挂载一个大硬盘。\n\n具体修改方式如下（为了方便起见，你可以先用su命令将系统当前用户转到root，否则以下命令可能都需要加上sudo 前缀）：\n\n1、 /etc/init.d/mysql stop\n\n2、 chown mysql:mysql /usr/data/mysql_data\n\n3、vim /etc/mysql/my.cnf\n\n找到datadir=/var/lib/mysql\n\n将它改为datadir=/usr/data/mysql_data\n\n4、cp -a /var/lib/mysql/* /usr/data/mysql_data\n\n5、vim /etc/apparmor.d/usr.sbin.mysqld\n我们会看到此文件中有2行：\n\n/var/lib/mysql/ r,\n/var/lib/mysql/** rwk,\n以上是针对默认数据目录的权限配置，所以据此我们增加两行，指向新目录，设置同样的权限：\n/newdir/mysql/ r,\n/newdir/mysql/** rwk,\n\n6、/etc/init.d/apparmor restart\n\n7、 /etc/init.d/mysql start\n\nOK，到此就已经成功转移了mysql数据目录。\n\n\n\n为了测试，我们登入mysql，然后创建一个数据库newdb，再看一下/usr/data/mysql_data目录，发现多了一个newdb目录，说明数据目录已经成功转移到新目录下了。</div>\n</div>', '[ZT]ubuntu系统下更改mysql数据目录的方法', '', 'inherit', 'open', 'open', '', '130-revision', '', '', '2014-06-23 15:26:40', '2014-06-23 07:26:40', '', 130, 'http://afeier.sinaapp.com/?p=131', 0, 'revision', '', 0),
(132, 1, '2014-06-23 15:28:02', '2014-06-23 07:28:02', '<h1></h1>\n<div></div>\n<div id="note_170186265_full">\n<div id="link-report">默认情况下，mysql的数据目录是/var/lib/mysql，因为如果你的数据库以后会越来越大，那么你就得考虑用一个空间足够大的分区来存放数据库文件，所以还是选择把它修改到其他位置，比如/usr/data/mysql_data。这个目录可以直接挂载一个大硬盘。具体修改方式如下（为了方便起见，你可以先用su命令将系统当前用户转到root，否则以下命令可能都需要加上sudo 前缀）：\n\n1、 /etc/init.d/mysql stop\n\n2、 chown mysql:mysql /usr/data/mysql_data\n\n3、vim /etc/mysql/my.cnf\n\n找到datadir=/var/lib/mysql\n\n将它改为datadir=/usr/data/mysql_data\n\n4、cp -a /var/lib/mysql/* /usr/data/mysql_data\n\n5、vim /etc/apparmor.d/usr.sbin.mysqld\n我们会看到此文件中有2行：\n\n/var/lib/mysql/ r,\n/var/lib/mysql/** rwk,\n以上是针对默认数据目录的权限配置，所以据此我们增加两行，指向新目录，设置同样的权限：\n/newdir/mysql/ r,\n/newdir/mysql/** rwk,\n\n6、/etc/init.d/apparmor restart\n\n7、 /etc/init.d/mysql start\n\nOK，到此就已经成功转移了mysql数据目录。\n\n为了测试，我们登入mysql，然后创建一个数据库newdb，再看一下/usr/data/mysql_data目录，发现多了一个newdb目录，说明数据目录已经成功转移到新目录下了。\n\n</div>\n</div>', '[ZT]ubuntu系统下更改mysql数据目录的方法', '', 'inherit', 'open', 'open', '', '130-autosave', '', '', '2014-06-23 15:28:02', '2014-06-23 07:28:02', '', 130, 'http://afeier.sinaapp.com/?p=132', 0, 'revision', '', 0),
(133, 1, '2014-06-23 19:18:08', '2014-06-23 11:18:08', '1、在服务器端设置rsync服务\r\n\r\nvi /etc/rsyncd.conf\r\n\r\n加入以下内容\r\npid file=/var/run/rsyncd.pid\r\nlog file=/var/log/rsyncd.log\r\nlock file=/var/run/rsyncd.lock\r\naddress=127.0.0.1\r\nport=873\r\nuid=nobody\r\ngid=nobody\r\nread only=yes\r\n\r\n2、启动rsync服务\r\n\r\n/usr/bin/rsync --daemon\r\n\r\n&nbsp;\r\n\r\n3、配置服务器间信任\r\n\r\n1、首先在C（客户端），用 ssh-keygen -t dsa 命令，(记住不要加密码！)生成所在目录 .ssh文件，应该会生成两个文件 id_rsa和id_dsa .pub 其中id_dsa  为私钥，就为C机用的，id_rsa.pub 为公钥，要拷到S（服务器端）中的.ssh目录，并改名为 authorized_keys。\r\n\r\n2、将authorized_keys考到S机中的.ssh 目录下，然后再改一下，（<span style="color: #ff6600;">OpenSSH的配置通常保存在：/etc/ssh/sshd_config\r\nPermitRootLogin no  # 禁止root用户登陆\r\nStrictModes yes  # 检查密钥的用户和权限是否正确，默认打开的\r\nRSAAuthentication yes        # 启用 RSA 认证\r\nAuthorizedKeysFile     .ssh/authorized_keys   # 验证公钥的存放路径\r\nPubkeyAuthentication yes     # 启用公钥认证\r\nPasswordAuthentication no    # 禁止密码认证，默认是打开的。）</span>\r\n\r\n4、备份到本地\r\n\r\nrsync -arHz --progress -e ''ssh -p22'' ynsync@1.1.1.1:/data/www/www.xxx.com  /data/backup/\r\n\r\n&nbsp;\r\n\r\n5、配置定时任务', 'rsync增量备份', '', 'publish', 'open', 'open', '', 'rsync%e5%a2%9e%e9%87%8f%e5%a4%87%e4%bb%bd', '', '', '2014-08-11 15:30:02', '2014-08-11 07:30:02', '', 0, 'http://afeier.sinaapp.com/?p=133', 0, 'post', '', 0),
(134, 1, '2014-06-23 19:18:04', '2014-06-23 11:18:04', '1、在服务器端设置rsync服务\n\nvi /etc/rsyncd.conf\n\n加入以下内容\npid file=/var/run/rsyncd.pid\nlog file=/var/log/rsyncd.log\nlock file=/var/run/rsyncd.lock\naddress=127.0.0.1\nport=873\nuid=nobody\ngid=nobody\nread only=yes\n\n2、启动rsync服务\n\n/usr/bin/rsync --daemon\n\n&nbsp;\n\n3、配置服务器间信任\n\n略\n\n4、备份到本地\n\nrsync -arHz --progress -e ''ssh -p22'' ynsync@1.1.1.1:/data/www/www.xxx.com  /data/backup/\n\n&nbsp;\n\n5、', 'rsync增量备份', '', 'inherit', 'open', 'open', '', '133-revision', '', '', '2014-06-23 19:18:04', '2014-06-23 11:18:04', '', 133, 'http://afeier.sinaapp.com/?p=134', 0, 'revision', '', 0),
(135, 1, '2014-08-11 15:31:05', '2014-08-11 07:31:05', '1、在服务器端设置rsync服务\n\nvi /etc/rsyncd.conf\n\n加入以下内容\npid file=/var/run/rsyncd.pid\nlog file=/var/log/rsyncd.log\nlock file=/var/run/rsyncd.lock\naddress=127.0.0.1\nport=873\nuid=nobody\ngid=nobody\nread only=yes\n\n2、启动rsync服务\n\n/usr/bin/rsync --daemon\n\n&nbsp;\n\n3、配置服务器间信任\n\n1、首先在C（客户端），用 ssh-keygen -t dsa 命令，(记住不要加密码！)生成所在目录 .ssh文件，应该会生成两个文件 id_rsa和id_dsa .pub 其中id_dsa  为私钥，就为C机用的，id_rsa.pub 为公钥，要拷到S（服务器端）中的.ssh目录，并改名为 authorized_keys。\n\n2、将authorized_keys考到S机中的.ssh 目录下，然后再改一下，（<span style="color: #ff6600;">OpenSSH的配置通常保存在：/etc/ssh/sshd_config\nPermitRootLogin no  # 禁止root用户登陆\nStrictModes yes  # 检查密钥的用户和权限是否正确，默认打开的\nRSAAuthentication yes        # 启用 RSA 认证\nAuthorizedKeysFile     .ssh/authorized_keys   # 验证公钥的存放路径\nPubkeyAuthentication yes     # 启用公钥认证\nPasswordAuthentication no    # 禁止密码认证，默认是打开的。）</span>\n\n4、备份到本地\n\nrsync -arHz --progress -e ''ssh -p22'' ynsync@1.1.1.1:/data/www/www.xxx.com  /data/backup/\n\n&nbsp;\n\n5、配置定时任务', 'rsync增量备份', '', 'inherit', 'open', 'open', '', '133-autosave', '', '', '2014-08-11 15:31:05', '2014-08-11 07:31:05', '', 133, 'http://afeier.sinaapp.com/?p=135', 0, 'revision', '', 0),
(137, 1, '2014-07-10 19:01:27', '2014-07-10 11:01:27', '1、编译环境\r\n\r\napt-get install build-essential  cmake libncurses5-dev bison\r\n<div>\r\n\r\n2、开始安装\r\n\r\nshell&gt; groupadd mysql\r\nshell&gt; useradd -r -g mysql mysql\r\n# Beginning of source-build specific instructions\r\nshell&gt; tar zxvf mysql-VERSION.tar.gz\r\nshell&gt; cd mysql-VERSION\r\nshell&gt; cmake .\r\nshell&gt; make\r\nshell&gt; make install\r\n# End of source-build specific instructions\r\n# Postinstallation setup\r\nshell&gt; cd /usr/local/mysql\r\nshell&gt; chown -R mysql .\r\nshell&gt; chgrp -R mysql .\r\nshell&gt; scripts/mysql_install_db --user=mysql\r\nshell&gt; chown -R root .\r\nshell&gt; chown -R mysql data\r\nshell&gt; bin/mysqld_safe --user=mysql &amp;\r\n\r\n</div>', 'ubuntu 编译安装mysql及mysql配置', '', 'publish', 'open', 'open', '', 'ubuntu-%e7%bc%96%e8%af%91%e5%ae%89%e8%a3%85mysql', '', '', '2014-07-10 19:01:58', '2014-07-10 11:01:58', '', 0, 'http://afeier.sinaapp.com/?p=137', 0, 'post', '', 0),
(138, 1, '2014-07-10 19:01:15', '2014-07-10 11:01:15', '1、编译环境\n\napt-get install build-essential  cmake libncurses5-dev bison\n<div>\n\n&nbsp;\n\nshell&gt; groupadd mysql\nshell&gt; useradd -r -g mysql mysql\n# Beginning of source-build specific instructions\nshell&gt; tar zxvf mysql-VERSION.tar.gz\nshell&gt; cd mysql-VERSION\nshell&gt; cmake .\nshell&gt; make\nshell&gt; make install\n# End of source-build specific instructions\n# Postinstallation setup\nshell&gt; cd /usr/local/mysql\nshell&gt; chown -R mysql .\nshell&gt; chgrp -R mysql .\nshell&gt; scripts/mysql_install_db --user=mysql\nshell&gt; chown -R root .\nshell&gt; chown -R mysql data\nshell&gt; bin/mysqld_safe --user=mysql &amp;\n\n</div>', 'ubuntu 编译安装mysql', '', 'inherit', 'open', 'open', '', '137-revision', '', '', '2014-07-10 19:01:15', '2014-07-10 11:01:15', '', 137, 'http://afeier.sinaapp.com/?p=138', 0, 'revision', '', 0),
(139, 1, '2014-07-10 19:01:27', '2014-07-10 11:01:27', '1、编译环境\r\n\r\napt-get install build-essential  cmake libncurses5-dev bison\r\n<div>\r\n\r\n2、开始安装\r\n\r\nshell&gt; groupadd mysql\r\nshell&gt; useradd -r -g mysql mysql\r\n# Beginning of source-build specific instructions\r\nshell&gt; tar zxvf mysql-VERSION.tar.gz\r\nshell&gt; cd mysql-VERSION\r\nshell&gt; cmake .\r\nshell&gt; make\r\nshell&gt; make install\r\n# End of source-build specific instructions\r\n# Postinstallation setup\r\nshell&gt; cd /usr/local/mysql\r\nshell&gt; chown -R mysql .\r\nshell&gt; chgrp -R mysql .\r\nshell&gt; scripts/mysql_install_db --user=mysql\r\nshell&gt; chown -R root .\r\nshell&gt; chown -R mysql data\r\nshell&gt; bin/mysqld_safe --user=mysql &amp;\r\n\r\n</div>', 'ubuntu 编译安装mysql', '', 'inherit', 'open', 'open', '', '137-revision-2', '', '', '2014-07-10 19:01:27', '2014-07-10 11:01:27', '', 137, 'http://afeier.sinaapp.com/?p=139', 0, 'revision', '', 0),
(140, 1, '2014-07-10 19:03:09', '2014-07-10 11:03:09', '1、编译环境\n\napt-get install build-essential  cmake libncurses5-dev bison\n<div>\n\n2、开始安装\n\nshell&gt; groupadd mysql\nshell&gt; useradd -r -g mysql mysql\n# Beginning of source-build specific instructions\nshell&gt; tar zxvf mysql-VERSION.tar.gz\nshell&gt; cd mysql-VERSION\nshell&gt; cmake .\nshell&gt; make\nshell&gt; make install\n# End of source-build specific instructions\n# Postinstallation setup\nshell&gt; cd /usr/local/mysql\nshell&gt; chown -R mysql .\nshell&gt; chgrp -R mysql .\nshell&gt; scripts/mysql_install_db --user=mysql\nshell&gt; chown -R root .\nshell&gt; chown -R mysql data\nshell&gt; bin/mysqld_safe --user=mysql &amp;\n\n</div>', 'ubuntu 编译安装mysql及mysql配置', '', 'inherit', 'open', 'open', '', '137-autosave', '', '', '2014-07-10 19:03:09', '2014-07-10 11:03:09', '', 137, 'http://afeier.sinaapp.com/?p=140', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(142, 1, '2014-07-22 16:28:51', '2014-07-22 08:28:51', '<h2><a id="cb_post_title_url" href="http://www.cnblogs.com/ximu/articles/2119136.html">ubuntu下SVN服务器安装配置</a></h2>\r\n<div>\r\n<div id="cnblogs_post_body">\r\n<div id="app-share-content">\r\n<div>\r\n<h2>一、SVN安装\r\n1.安装包\r\n$ sudo apt-get install subversion\r\n\r\n2.添加svn管理用户及subversion组\r\n$ sudo adduser svnuser\r\n$ sudo addgroup subversion\r\n$ sudo addgroup svnuser subversion <wbr><wbr><wbr><wbr><wbr><wbr><wbr>\r\n\r\n3.创建项目目录\r\n$ sudo mkdir /home/svn\r\n$ cd /home/svn\r\n$ sudo mkdir fitness\r\n$ sudo chown -R root:subversion fitness\r\n$ sudo chmod -R g+rws fitness\r\n\r\n4.创建SVN文件仓库\r\n$ sudo svnadmin create /home/svn/fitness\r\n\r\n5.访问方式及项目导入：\r\n$ svn co file:///home/svn/fitness\r\n或者\r\n$ svn co file://localhost/home/svn/fitness\r\n* 注意：\r\n如果您并不确定主机的名称，您必须使用三个斜杠(///)，而如果您指定了主机的名称，则您必须使用两个斜杠(//).\r\n//--\r\n下面的命令用于将项目导入到SVN 文件仓库：\r\n$ svn import -m "New import" /home/svn/fitness file:///home/svnuser/src/fitness\r\n一定要注明导入信息\r\n\r\n//--------------------------//\r\n6.访问权限设置\r\n修改 /home/svn/fitness目录下：\r\nsvnserve.conf 、passwd 、authz三个文件,行最前端不允许有空格\r\n//--\r\n编辑svnserve.conf文件,把如下两行取消注释\r\npassword-db = password\r\nauthz-db = authz\r\n\r\n//补充说明\r\n# [general]\r\nanon-access = read\r\nauth-access = write\r\npassword-db = passwd\r\n其中 anon-access 和 auth-access 分别为匿名和有权限用户的权限，默认给匿名用户只读的权限,但如果想拒绝匿\r\n\r\n名用户的访问，只需把 read 改成 none 就能达到目的。\r\n\r\n//--\r\n编辑/home/svnuser/etc/passwd <wbr>如下:\r\n[users]\r\nmirze = 123456\r\ntest1 = 123456\r\ntest2 = 123456\r\n//--\r\n编辑/home/svnuser/etc/authz如下\r\n[groups]\r\nadmin = mirze,test1\r\ntest = test2\r\n[/]\r\n@admin=rw\r\n*=r\r\n这里设置了三个用户mirze,test1,test2密码都是123456\r\n其中mirze和test1属于admin组，有读和写的权限,test2属于test组只有读的权限\r\n\r\n7.启动SVN服务\r\nsvnserve -d -r /home/svn\r\n描述说明：\r\n-d 表示svnserver以“守护”进程模式运行\r\n-r 指定文件系统的根位置（版本库的根目录），这样客户端不用输入全路径，就可以访问版本库\r\n如: svn://192.168.12.118/fitness\r\n\r\n这时SVN安装就完成了.\r\n局域网访问方式：\r\n例如：svn checkout svn://192.168.12.118/fitness --username mirze --password 123456 /var/www/fitness\r\n\r\n\r\n-----------------------------------------------------------------------\r\n\r\n二、HTTP:// [apache]\r\n1.安装包 [已安装subversion]\r\n$ sudo apt-get install libapache2-svn\r\n\r\n创建版本仓库：\r\nsudo svnadmin create /目录地址\r\n目录地址必须存在，这个就是保存版本仓库的地方，不同的版本仓库创建不同的文件夹即可，比如：\r\nsudo svnadmin create /home/svn/project\r\n本来/home/svn/project这个目录下什么都没有，执行下面的命令之后再去看一下，多出一些文件和文件夹，我们需要操作的是conf这个文件夹，这个文件夹下有一个文件，叫做passwd，用来存放用户名和密码。\r\n然后把这个版本仓库目录授权给apache读写：\r\nsudo chown -R www-data:www-data /目录地址\r\n然后来到打开apache配置文件：\r\nsudo gedit /etc/apache2/mods-available/dav_svn.conf\r\n\r\n加入如下内容：\r\n&lt;Location /project&gt;\r\nDAV svn\r\nSVNPath /home/svn/project\r\nAuthType Basic\r\nAuthName “myproject subversion repository”\r\nAuthUserFile /home/svn/project/conf/passwd\r\n#&lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt;\r\nRequire valid-user\r\n#&lt;/LimitExcept&gt;\r\n&lt;/Location&gt;\r\n\r\nlocation说的是访问地址，比如上述地址，访问的时候就是\r\nhttp://127.0.0.1/project\r\n其中有两行被注释掉了，以保证每次都需要用户名密码。\r\n最后一步就是创建访问用户了，建议将用户名密码文件存放在当前版本仓库下conf文件夹下，这样版本仓库多的时候无至于太乱。\r\n因为conf文件夹下已经存在passwd文件了，所以直接添加用户：\r\nsudo htpasswd -c /home/svn/project/conf/passwd test\r\n然后输入两遍密码，laoyang这个用户就创建好了。\r\n打开/home/svn/project/conf/passwd这个文件，会开到形如如下形式的文本：\r\ntest:WEd.83H.gealA <wbr>//后面是加密后的密码。\r\n创建以后，再次需要往别的版本仓库添加这个用户，直接把这一行复制过去就可以了。\r\n重启apache就可以了。\r\nsudo /etc/init.d/apache2 restart\r\n\r\n\r\n-----------------------------------------------------------------------\r\n\r\n三、同步更新 [勾子]</wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></h2>\r\n</div>\r\n<div>\r\n\r\n同步程序思路：用户提交程序到SVN，SVN触发hooks,按不同的hooks进行处理，这里用到的是post-commit，利用post-commit到代码检出到SVN服务器的本地硬盘目录，再通过rsync同步到远程的WEB服务器上。\r\n\r\n知识点：\r\n1、SVN的hooks\r\n# start-commit 提交前触发事务\r\n# pre-commit 提交完成前触发事务\r\n# post-commit 提交完成时触发事务\r\n# pre-revprop-change 版本属性修改前触发事务\r\n# post-revprop-change 版本属性修改后触发事务\r\n通过上面这些名称编写的脚本就就可以实现多种功能了，相当强大。\r\n2、同步命令rsync的具体参数使用\r\n3、具有基个语言的编程能力bash python perl都可以实现\r\n\r\npost-commit具体实现细节\r\npost-commit脚本\r\n\r\n<wbr>编辑文件：sudo vim /home/svn/fitness/hooks/post-commit</wbr>\r\n\r\n注意：编辑完成post-commit后，执行：sudo chmod 755 post-commit\r\n\r\n内容：\r\n\r\n#!/bin/sh\r\nexport LANG=zh_CN.UTF-8\r\nsudo /usr/bin/svn update /var/www/www --username mirze --password 123456\r\n\r\n或\r\n\r\n#Set variable\r\nSVN=/usr/bin/svn\r\nWEB=/home/test_nokia/\r\nRSYNC=/usr/bin/rsync\r\nLOG=/tmp/rsync_test_nokia.log\r\nWEBIP="192.168.0.23"\r\nexport LANG=en_US.UTF-8\r\n<wbr>\r\n#update the code from the SVN\r\n$SVN update $WEB --username user --password <wbr>password\r\n#If the previous command completed successfully, to continue the following\r\nif [ $? == 0 ]\r\nthen\r\n<wbr> <wbr><wbr>echo "" <wbr><wbr><wbr><wbr>&gt;&gt; $LOG\r\n<wbr> <wbr><wbr>echo `date` &gt;&gt; $LOG\r\n<wbr> <wbr><wbr>echo "##############################" &gt;&gt; $LOG\r\n<wbr> <wbr><wbr>chown -R nobody:nobody /home/test_nokia/\r\n<wbr> <wbr><wbr>#Synchronization code from the SVN server to the WEB server, notes:by the key\r\n<wbr> <wbr><wbr>$RSYNC -vaztpH <wbr>--timeout=90 <wbr><wbr>--exclude-from=/home/svn/exclude.list $WEB root@$WEBIP:/www/ &gt;&gt; $LOG\r\nfi\r\n\r\n以上是具体的post-commit程序\r\n注意事项：\r\n1、一定要定义变量，主要是用过的命令的路径。因为SVN的考虑的安全问题，没有调用系统变量，如果手动执行是没有问题，但SVN自动执行就会无法执行了。\r\n2、SVN update 之前一定要先手动checkout一份出来，还有这里一定要添加用户和密码如果只是手动一样会更新，但自动一样的不行。\r\n3、加上了对前一个命令的判断，如果update的时候出了问题，程序没有退出的话还会继续同步代码到WEB服务器上，这样会造成代码有问题\r\n4、记得要设置所属用户，因为rsync可以同步文件属性，而且我们的WEB服务器一般都不是root用户，用户不正确会造成WEB程序无法正常工作。\r\n5、建议最好记录日志，出错的时候可以很快的排错\r\n6、最后最关键的数据同步，rsync的相关参数一定要清楚，这个就不说了。注意几个场景：\r\n这里的环境是SVN服务器与WEB服务器是开的\r\n把SVN服务器定义为源服务器 WEB服务器为目的服务器\r\n场景一、如果目的WEB服务器为综合的混杂的，像只有一个WEB静态资源，用户提交的，自动生成的都在WEB的一个目录下，建议不要用–delete这个参数\r\n上面这个程序就是这样，实现的是源服务器到目的服务器的更新和添加，而没有删除操作，WEB服务器的内容会多于源SVN的服务器的\r\n场景二、实现镜像，即目的WEB服务器与源SVN服务器一样的数据，SVN上任何变化WEB上一样的变化，就需要–delete参数\r\n场景三、不需要同步某些子目录，可能有些目录是缓存的临时垃圾目录，或者是专用的图片目录（而不是样式或者排版的）要用exclude这个参数\r\n注意：这个参数的使用不用写绝对路径，只要目录名称就行 aa代表文件 aa/ 代表目录 ，缺点就是如果有多个子目录都是一样的名称那么这些名称就都不会被同步\r\n建议用–exclude-from=/home/svn/exclude.list 用文件的形式可以方便的添加和删除\r\nexclude.list\r\n\r\n.svn/\r\n.DS_Store\r\nimages/\r\n\r\n利用SVN的钩子还可以写出很多的程序来控制SVN 如代码提交前查看是否有写日志，是否有tab，有将换成空格，是否有不允许上传的文件，是否有超过限制大小的文件等等。</wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></wbr></div>\r\n</div>\r\n</div>\r\n</div>', 'ubuntu下SVN服务器安装配置', '', 'publish', 'open', 'open', '', 'ubuntu%e4%b8%8bsvn%e6%9c%8d%e5%8a%a1%e5%99%a8%e5%ae%89%e8%a3%85%e9%85%8d%e7%bd%ae', '', '', '2014-07-22 16:28:51', '2014-07-22 08:28:51', '', 0, 'http://afeier.sinaapp.com/?p=142', 0, 'post', '', 0),
(143, 1, '2014-07-22 16:28:12', '2014-07-22 08:28:12', '', '自动草稿', '', 'inherit', 'open', 'open', '', '142-revision', '', '', '2014-07-22 16:28:12', '2014-07-22 08:28:12', '', 142, 'http://afeier.sinaapp.com/?p=143', 0, 'revision', '', 0),
(144, 1, '2014-07-23 17:59:36', '2014-07-23 09:59:36', '大家下午好，第一次面对这么多人进行这次分享，这么高级的麦克风只在原来KTV时用过。首先做一下自我介绍，我是来自新浪博客刘晓震，平时主要负责应用架构方面工作。我们里面有一个名词叫做LAMP，PHP都是跟LAMP结合在一块来说的。今天各位嘉宾演讲都是跟PHP相关的东西，我今天主要介绍博客整个系统架构，是如何在LAMP平台怎么进行的，下面我们就进行今天的演讲。\r\n<div></div>\r\n<div>      今天我演讲主题是新浪博客架构分享。这个PPT不是最新的，但是不影响今天演讲，到时候会把最新的PPT更新到网站上，欢迎大家去看。这个已经做完自我介绍了，首先我们是新浪博客部门，今天议程主要是以下几个部分。第一整个新浪博客介绍，我们都知道架构是离不开跟应用特点结合的，脱离于应用特点架构一般都是比较虚无的。\r\n<div><span style="font-size: small;">第二在整个博客网站运营维护过程中我们遇到一些问题，这些问题我们经过分析去总结了一些经验，形成了现在相对来说比较稳定的架构系统。第三部分详细介绍一下这部分架构我们是如何去做的。最后一部分是做我们近年来一些总结，以及我们即将要做的一些事情。首先是新浪博客的一个介绍，新浪博客无论从用户量，访问量来说都是在国内博客类网站都是首屈一指的，原来是，现在也是。</span></div>\r\n</div>\r\n<div>\r\n<div></div>\r\n</div>\r\n<div>      我们大概博客上线5年半时间，用户量大概在6千万级左右，每天PV都是10亿级别的，动态访问数都在5亿左右。如此大一个访问量，我们博客如何去做这样一个合理架构，去保证我服务长期稳定性，和一个高性能。博客的一个访问特点比较典型的系统。</div>\r\n<div></div>\r\n<div>      第一个是访问量很大，我们有很多名人资源，有很多草根名博，这些都会提供到网站上供大家浏览，每天都有超过10亿PV。我们整个网站都是由动态应用程序组成，如何去承载这么高访问量。第二是一个博客比较典型的特点，读多写少。有很多名人博客，像韩寒，徐小明，他们发表一篇博文之后，每一篇最新文章都在访问百万级别左右。第三还是热点用户，和热点事件，当我们出现热点事件的时候博客访问量都会剧增。我们如何在激增过程当中保持一个服务稳定性和系统承载能力，都是我们需要考虑的。第四个是富媒体，博客的页面比较复杂，可以承载很多多媒体元素。利用视频，Flash，图片，音频等，页面结构比较复杂，用户也可以自己去输入CSS代码，就造成页面不可控，整个页面在渲染过程当中会出现问题，导致叶面挂掉。页面元素非常多，大家都知道HTTP下载会有阻塞，如何在这么多并发请求中最快的把页面展示给用户。</div>\r\n<div></div>\r\n<div>      这是我们面临三个挑战，第一就是系统支撑能力和稳定性，主要针对一级访问去做的。第二就是用户体验，主要针对富媒体去做的。这个用户体验，可能还会有另外一个部分，就是中国网络一个特点，就是南北差异比较大。北方用户和南方用户访问同一个地理资源，可能网速是完全不一样，我们如何去保证这些用户具有相对来说比较稳定的访问速度，甚至说会加快网络访问速度，这些都是我们需要去做的。</div>\r\n<div></div>\r\n<div>      最后就是一个监控和容灾切换。博客是新浪公司一个比较重要的产品，关注度也比较高，我们对于可用性需求，包括一个系统性能都会有比较高的标准。我们就需要保证他的可用性，或者我对一个系统性能进行长期监控，随着数据量增长，处理数据的性能不断下降，我如何优化这部分性能的下降给抹平，或者重新梳理并优化我们的架构。</div>\r\n<div></div>\r\n<div>      博客架构并没有什么复杂的，基本上就是LAMP平台，这些软件相信大家都耳熟能详，用的也比较多。可能在座各位有很多高手用的比我们好，但是我们博客就是这样的，用这几个简单软件构成这么大的服务。这个是博客系统一个层次，我今天讲的这个博客系统只是讲的一个纯博客系统，其实博客这个服务包含有很多一些业务，是以一个博客系统为主的，涵盖多个子业务模块，这样一个比较大的交流平台。</div>\r\n<div></div>\r\n<div>      今天所讲的博客系统有五部分，第一部分是我的负载均衡，我们知道一个高流量，高负载网站，负载均衡是必不可少。他必须要有一个高并发承载能力，去把所有用户请求过来，在把流量分发到各个处理单位去。我们第二层就是静态缓存，这个主要是针对整个博客产品这样一个访问特点，读多写少去做一个动态内容静态化，Squid规模做的比较多。</div>\r\n<div></div>\r\n<div>      第三层是静态应用，主要是Apache和PHP，依靠PHP这样一个可快速开发，一个性能还比较好的编程语言，Apache是相对来说服务型比较稳定去构成我们动态响应。相信很多人都在用Memcache，主要进行一些查询。最后一层是数据库，我们主要使用的是Mysql，因为比较火确实比较好用，我们一些比较小的，比较碎的数据，为了永久存储都存在MDB里面。</div>\r\n<div></div>\r\n<div>      首先讲一下7层代理，我们是采用Nginx作为我们负载均衡设备，承载所有用户的一个请求。Nginx性能非常高，我们还做另外两个功能。第一提供一个基本服务，我们是网站运营，我们编辑运营那部分会把很多静态文件生成文件页，像我们博客大首页静态文件，会进行推送，就会直接提供静态文件服务。第二是一个代理负载均衡，就不多说了。第三是业务逻辑实现，博客有一个相应特点，我相同地址登录不登录访问是同一个网址，我们需要登录博主直接访问，或者访问我们静态单位，这样Nginx就会进行浏览展示是否是动态或者纯动态的，主要解决动态缓存刷新不及时，其实是在规避这个方向。</div>\r\n<div></div>\r\n<div>      最后一个是Squid管理，我将在下面这个一起说。首先说Squid与Nginx是对等部署，就是提供一个反向代理。因为我们做了8个IDC部署，Squid+Nginx相对于我们自己搭建一个服务，在全国有8个点部署，这些基本上占博客流量70%，80%以上，让更贴近用户去访问。Squid主要依靠反向代理，如果没有命中会去后端取缓存到本地。我们去做了一个Squid静态缓冲池子，每个IDC会有N台Squid提供服务，当我们在负载均衡的时候，我们的URO过来之后可能会比较随机进行命中，这样会造成我们缓存比较多。</div>\r\n<div></div>\r\n<div>      我们在刷新的时候其实是一个负担，我有8组Squid，但是我有100台Squid服务器。我们Nginx就做了这样一个事，把URI进行一次性刷新，会根据后台Squid数量进行一次刷新，当Squid有一台挂掉之后，我们Nginx就会把它从内存里面摘掉，会随机往后面三台推。虽然这样可能会造成有一段时间数据更新程度有问题，但保证了我们整个网站这种可用性。当我任何一台机器挂掉之后，我还是可用的，还要到后端去取，还是有缓存服务。</div>\r\n<div></div>\r\n<div>      下面讲一下我们Squid上面一些缓存原则。Squid主要是缓存博客核心页面，博客核心页面主要是我们列表页，博主页正文页。在一开始在做静态化项目的时候，可能会把跟博主所有动态输出页面全部都缓存下来，这样就造成缓存成本非常高，刷新成本也非常高，导致命中率上不去。后端Squid，存储文件也非常多，性能下降很多。我们后来就会进行规避，分析用户这样一个行为，把一些访问量权重比较大的，第一页，比较热的这些页去做一些缓存，对于N页之后全部都没有做，这样做有一个比较可控，我缓存刷新的时候博主发表一个博文你可能都要进行刷新一下，当博主刷新之后我们就可以减少更新的复杂度。</div>\r\n<div></div>\r\n<div>      另外Squid会把后端PHP减少压力，我们在做权衡的时候也是这样去做的。一些比较重的页面，像博主页可能会带来十几次数据查询，我们认为非常重，有很多次网络开销，更新频率不会太大。我们综合考虑更新复杂度会越过访问量和命中率，然后决定访问，我们都是通过PHP主动输出。对于我们不输出Squid是不会缓存的。</div>\r\n<div></div>\r\n<div>      讲一下缓存命中率的优化，第一个是减少冗余存储。刚才说了主要是通过no-cache，还有良好URL设计。我们忽略到一些对我们来说影响缓存命中的一些东西，例如说会带来no-cache访问，或者带着一个策略去访问，会影响我们缓存时间，或者是缓存策略。第二有很多网站抓取的时候都会带很多随机数进行访问，这样的话，随机数会严重影响我们命中率，不断去后端去取。</div>\r\n<div></div>\r\n<div>      第三个我们肯定要对这些不正常访问，或者非法访问做一些规则。既要保证可以访问到正常页面，不影响他的使用，又要保证我们静态缓存，静态化这一层去做到更好服务。主要有两点，第一是在Squid上去做规则，去预估他们的访问会以什么样的方式，哪些是非法的。还有一部分就是说，我们的URL设计一定要规范和合理，我们在做规则的时候，一个良好的规范URL设计是很容易去做的，如果你的URL千奇百怪，有各种各样类型，那你很难去做规则。</div>\r\n<div></div>\r\n<div>      大家可以看一下这个图，这个图命中率是我们原来IBS，每天访问量大概在600万左右。我们做完这些规则，命中率已经达到95%。下面一层是动态应用，我们动态应用主要是Apache+PHP，有部分应用是Nginx+Spawn-fcgi+PHP组成的Web服务单位。按业务功能划分服务模块，把这些服务器分成很多组，代码是统一去上线和部署的，我的环境因为一致性很高，所以我可以快速增加和删除机器，去实现他的一个可扩展性和伸缩性。</div>\r\n<div></div>\r\n<div>      第二当我们的网站遇到高流量，可以把不必要的接口给禁掉，直接去提供主页面服务。动态层基本上就没有什么可讲的，主要是跟大家用的基本都一样。用Memcacheq进行版本管理，我们大家都知道，我的一个请求过来之后，他可能会有很多个操作，这些操作其实用户是不需要等待的。我们如何去把这些任务异步处理，我们用的是Memcacheq也是新浪自己开发的。我们在这个系统上做二次规范定义，第一是我自定义消息格式。Memcacheq是完全支持MC协议的，我这个消息从哪来是由谁发起的，他要干什么我们都会知道并且记录下来，对于我们这样异步系统容错会有比较好的帮助。</div>\r\n<div></div>\r\n<div>      第二是一个异常处理，主要做一些机制去保证这个Memcacheq，消息不丢，始终有一台Memcacheq可以写进去。第三是伸缩性，当一台Memcacheq不够之后，我们可以很平滑把这个应用分到第二台，而我后台处理不需要知道这台。下面讲一下我们数据缓存，主要是用MC，相信大家都用的比较多，我们都用比较拉的方式，缓存命中的时候就去MC里去取，命不中的时候就去后端。我们一类是共享内存数据，类似与验证码这样东西。还有耗时查询结果，把一些比较耗时查询放在上面。</div>\r\n<div></div>\r\n<div>      最后两个可能就是一个热点和索引数据，因为命中率非常高。最后是索引和聚合数据，我后端可能会请求几次API，这些如果更新的话长度不大的话，我们会主动把它放在MC，把多个结合汇集到一块使用。MC主要是缓存一些比较小的数据碎片，Squid因为是硬件存储所以容量上支撑比较好。缓存考核指标，还是一个容量，命中率这些东西。大家可以看这两张图，第一个图是一个MC缓存管理，第二张图是命中率提高，命中率一个表现。我们主要通过这两个去看我们的缓存服务是否该扩容，是否值得他浪费太多成本，或者他的命中率不够我们的要求，我们可能会再次去拆分数据，或者再次去聚合数据，从而提升整体命中率。</div>\r\n<div></div>\r\n<div>      数据层，我们主要是两个，一个是Mysql，我们也有自己的团队去进行维护。主要存一些关系型数据，包括所有业务，基本上最后都会落在Mysql里面。然后MemcacheDB作为key-value存储，我们数据结构简单，高并发读写都放在里面，还有可扩展能力强。上面说到我们Mysql做了8层，我后面动态单元和数据存储层目前做了北京和广州两个IDC部署。MemCache同步主要靠一个同步机制，目前广州可以承载大概，博客整个动态服务都可以切进去，这样可以有效提升一个IDC容灾切换的能力。</div>\r\n<div></div>\r\n<div>      首先说一下数据层，这个PPT跟我后来准备的不一样，有一些点没有准备。我重点去讲三部分，第一是冷热分离，我们做过统计包括我们现在也这样做了，博客的冷热用户还是区别比较明显，因为博客有很多名人用户。我们统计大概有5千个用户，博客用户量在6千万以上，大概我们有5千个用户，他们总的PV占到博客整个访问量10%，也就是说万分之一用户占到10%访问，我们就把这万分之十这些用户拆分出来，形成单独一个库，这些用户库他带来一个好处是什么？首先是说他一个数据容量减少了，因为我们博客以博文举例，数据库容量总的加起来已经超过4个T，我们把5千用户拆出来之后，我们在查询，索引效果之上优点会非常高。</div>\r\n<div></div>\r\n<div>      第二如此小的一个数据量，我们可以每天都去更新和备份，不会浪费我们太多成本。如果我们不拆分这部分用户，我们想让博客提供稳定服务，这部分用户关注度这么高，我们可能会每一天，每两天基于4个T数据备份，对于成本浪费非常重，而且也起到一个非常好效果。从后端数据访问来说，原来我们文章平均查询时间大概在0.03左右，对一些热点库访问就在0.05秒之内，甚至更低，还有数据安全，我们可以以更高，更好的备份策略去保证他的安全。</div>\r\n<div></div>\r\n<div>      第二部分是提高单表能力，这可能还是一个拆分功能。我们做了一个比较有意义的尝试，原来我们文章库既可以按照列表查询，又可以按照正文查询。当你容量很大的话，你单表超过几百万，甚至上千万，你列表查询比较慢，虽然有索引，但也需要把他所有索引取出来进行排序，你在从磁盘里面把数据取出来进行过滤，过滤完之后把你想要的数据给筛出来。这样的话给后端数据增长之后，后端压力不断变大，列表查询会变成非常大压力，影响我们数据库性能。我们采取不动数据库情况下，把列表和文章进行拆分，把列表库大字段给剥离出去了。</div>\r\n<div></div>\r\n<div>      但是这样的话，也许有人会问你拆分完之后，你写一篇文章之后，会不会更新两个库。我们目前采取的技术，就是把那张表，字段强行转换为一个类型，在同步的时候是不受影响。因为你的列表库做了优化，正文库只取一条数据，这是直接命中的。最后一点对于Mysql使用，越简单越好，我们在设计的时候也不会设计多么复杂，倾向于简单使用，使用索引去查询，直接返回，没有特别复杂的应用，包括也不支持事物，因为本身我们网站特点事物性要求也不会太高。</div>\r\n<div></div>\r\n<div>      另外，我们采取覆盖索引快速索引的一个机制去做。提到可用性和监控，我们主要从三个方面，第一个是我的前端性能监控，第二是前端性能监控，第三方面就是应用级别监控，还有后端监控。第一监控是这样，因为博客页面比较复杂，是富媒体，用户输入什么，输出什么，可能我们不会太清楚。这样的话用户虽然在输出，但是很多人会读他的。至于用户的前端发生过什么，如果没有一套非常好的监控机制，我们很难保证，我虽然服务器上返回是200，但是页面在执行一段之后，GS挂了，页面直接出白页再也不往下执行了，这些都会影响我们服务可行性，和服务质量。</div>\r\n<div></div>\r\n<div>      我们主要通过两部分，第一是基调系统。全国各个地方布很多点，去监控一些特定地址，这些地址整个下载时间，这个地址可能会有不同元素，像图片，视频这样一个多媒体元素来去看他两个指标，一个是他首屏的时间。一个页面快慢直接是首屏时间，还有整个页面系统，包括资源下载完毕时间，让我们去做衡量。</div>\r\n<div></div>\r\n<div>      第二点我们去做一些异常报错，当GS执行异常退出之后，我们会把这些事件，把一些信息传回服务器，我们就可以做定期收集，分析出来之后去做一定汇总，去让前端人员帮助我们不断地去进行优化，去看究竟是哪部分出的问题。应用级别优化，两部分，第一部分可能是在上线前我们会去做的，就是用Xdebug看他写的代码有没有很慢，或者重复连接的次数，去做这些工作。第二我们会监控，因为刚才各位嘉宾也都说了，PHP性能本身是没有什么性能上大的问题，主要还是取决于你对于资源的访问，数据库的查询，因为他是一个创业型，有一个槛就会影响整个性能。我们重点会监控数据库查询时间，和API查询时间。对于一些很严重的错误我们会通过Syslog定期收集数据库，定期出一个报表。Sql和Api会进行一个分析，我们去谁快谁慢找对应策略。服务器端靠它去监控服务器，这部分就不多讲了。</div>\r\n<div></div>\r\n<div>      我们遇到很多问题，像现在来说博客系统相对来说是一个相对比较稳定的版本了，但是我们还是要前进和进步。首先是一个平台化的概念，我们服务单位比较多，其实扩展能力还可以，但是它的运维成本还比较复杂。我们就需要有一套比较快速的，可以高速扩展这样一个服务器管理平台能快速去进行服务器复制，去进行一个容量快速扩容的能力。</div>\r\n<div></div>\r\n<div>      第二是我整个系统环境希望能够统一进行升级，包括代码也能统一去进行升级。第二是DAL访问层，有两部分，第一部分是解决我们连接上问题，可能会有连接阻塞，或者连接慢，给后端服务器造成压力，我们就需要有这样一个层去解决一个问题。第二我们希望把我们数据做的更底层一点，让开发人员可以忽略这层直接使用，在内部直接实现缓存刷新，可以达到比较高的水平。</div>\r\n<div></div>\r\n<div>      第三个是Nginx SSI。博客有单独这样一个静态提供图片，包括小图片处理。大家都知道一个页面下载，我们会把用户自定义GS，CSS通过前端进行下载，这样势必会造成一个当他下载不下来，势必会造成一个裸奔，我页面整个模板出不来。第二他的下载会阻塞后面的执行，会造成页面阻塞，影响首屏。我们可能会用Nginx，我们已经做8个点部署，我们把一些比较小的合并数据，安全SSI标准，不一定是后端文件，也可能是后端API，让它直接在后端拉进来，直接在输出，这样用户会减少很多次请求。</div>\r\n<div></div>\r\n<div>      最后一个是Redis，可能掀起最近一个缓存风暴，支持多种类型缓存数据，可以支持列表，集合，包括排序。我们希望能借助它去简化我们缓存整个系统复杂度，提升开发效率，包括后端部署效率。最后一点是Open，我们博客已经有5年历史，数据量也非常大，我们希望能够把我们数据开放出去。现在我们也在做一个Open项目，在这里有两个项目，第一把自己东西拿出去给别人用，第二我们需要有一个统一框架，统一平台去做类似于新浪微博这样产品东西，能够快速地融入进来。因为现在主流是微博，我们希望能够通过我们这样一个系统，能把跟微博做更好结合，从而扩充我们整个业务产品线。</div>\r\n<div></div>\r\n<div>      我的演讲就到这里，谢谢大家。</div>', '新浪微博构架', '', 'publish', 'open', 'open', '', '%e6%96%b0%e6%b5%aa%e5%be%ae%e5%8d%9a%e6%9e%84%e6%9e%b6', '', '', '2014-07-23 17:59:36', '2014-07-23 09:59:36', '', 0, 'http://afeier.sinaapp.com/?p=144', 0, 'post', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(145, 1, '2014-07-23 17:59:19', '2014-07-23 09:59:19', '大家下午好，第一次面对这么多人进行这次分享，这么高级的麦克风只在原来KTV时用过。首先做一下自我介绍，我是来自新浪博客刘晓震，平时主要负责应用架构方面工作。我们里面有一个名词叫做LAMP，PHP都是跟LAMP结合在一块来说的。今天各位嘉宾演讲都是跟PHP相关的东西，我今天主要介绍博客整个系统架构，是如何在LAMP平台怎么进行的，下面我们就进行今天的演讲。\n<div></div>\n<div>      今天我演讲主题是新浪博客架构分享。这个PPT不是最新的，但是不影响今天演讲，到时候会把最新的PPT更新到网站上，欢迎大家去看。这个已经做完自我介绍了，首先我们是新浪博客部门，今天议程主要是以下几个部分。第一整个新浪博客介绍，我们都知道架构是离不开跟应用特点结合的，脱离于应用特点架构一般都是比较虚无的。\n<div><span style="font-size: small;">第二在整个博客网站运营维护过程中我们遇到一些问题，这些问题我们经过分析去总结了一些经验，形成了现在相对来说比较稳定的架构系统。第三部分详细介绍一下这部分架构我们是如何去做的。最后一部分是做我们近年来一些总结，以及我们即将要做的一些事情。首先是新浪博客的一个介绍，新浪博客无论从用户量，访问量来说都是在国内博客类网站都是首屈一指的，原来是，现在也是。</span></div>\n</div>\n<div>\n<div></div>\n</div>\n<div>      我们大概博客上线5年半时间，用户量大概在6千万级左右，每天PV都是10亿级别的，动态访问数都在5亿左右。如此大一个访问量，我们博客如何去做这样一个合理架构，去保证我服务长期稳定性，和一个高性能。博客的一个访问特点比较典型的系统。</div>\n<div></div>\n<div>      第一个是访问量很大，我们有很多名人资源，有很多草根名博，这些都会提供到网站上供大家浏览，每天都有超过10亿PV。我们整个网站都是由动态应用程序组成，如何去承载这么高访问量。第二是一个博客比较典型的特点，读多写少。有很多名人博客，像韩寒，徐小明，他们发表一篇博文之后，每一篇最新文章都在访问百万级别左右。第三还是热点用户，和热点事件，当我们出现热点事件的时候博客访问量都会剧增。我们如何在激增过程当中保持一个服务稳定性和系统承载能力，都是我们需要考虑的。第四个是富媒体，博客的页面比较复杂，可以承载很多多媒体元素。利用视频，Flash，图片，音频等，页面结构比较复杂，用户也可以自己去输入CSS代码，就造成页面不可控，整个页面在渲染过程当中会出现问题，导致叶面挂掉。页面元素非常多，大家都知道HTTP下载会有阻塞，如何在这么多并发请求中最快的把页面展示给用户。</div>\n<div></div>\n<div>      这是我们面临三个挑战，第一就是系统支撑能力和稳定性，主要针对一级访问去做的。第二就是用户体验，主要针对富媒体去做的。这个用户体验，可能还会有另外一个部分，就是中国网络一个特点，就是南北差异比较大。北方用户和南方用户访问同一个地理资源，可能网速是完全不一样，我们如何去保证这些用户具有相对来说比较稳定的访问速度，甚至说会加快网络访问速度，这些都是我们需要去做的。</div>\n<div></div>\n<div>      最后就是一个监控和容灾切换。博客是新浪公司一个比较重要的产品，关注度也比较高，我们对于可用性需求，包括一个系统性能都会有比较高的标准。我们就需要保证他的可用性，或者我对一个系统性能进行长期监控，随着数据量增长，处理数据的性能不断下降，我如何优化这部分性能的下降给抹平，或者重新梳理并优化我们的架构。</div>\n<div></div>\n<div>      博客架构并没有什么复杂的，基本上就是LAMP平台，这些软件相信大家都耳熟能详，用的也比较多。可能在座各位有很多高手用的比我们好，但是我们博客就是这样的，用这几个简单软件构成这么大的服务。这个是博客系统一个层次，我今天讲的这个博客系统只是讲的一个纯博客系统，其实博客这个服务包含有很多一些业务，是以一个博客系统为主的，涵盖多个子业务模块，这样一个比较大的交流平台。</div>\n<div></div>\n<div>      今天所讲的博客系统有五部分，第一部分是我的负载均衡，我们知道一个高流量，高负载网站，负载均衡是必不可少。他必须要有一个高并发承载能力，去把所有用户请求过来，在把流量分发到各个处理单位去。我们第二层就是静态缓存，这个主要是针对整个博客产品这样一个访问特点，读多写少去做一个动态内容静态化，Squid规模做的比较多。</div>\n<div></div>\n<div>      第三层是静态应用，主要是Apache和PHP，依靠PHP这样一个可快速开发，一个性能还比较好的编程语言，Apache是相对来说服务型比较稳定去构成我们动态响应。相信很多人都在用Memcache，主要进行一些查询。最后一层是数据库，我们主要使用的是Mysql，因为比较火确实比较好用，我们一些比较小的，比较碎的数据，为了永久存储都存在MDB里面。</div>\n<div></div>\n<div>      首先讲一下7层代理，我们是采用Nginx作为我们负载均衡设备，承载所有用户的一个请求。Nginx性能非常高，我们还做另外两个功能。第一提供一个基本服务，我们是网站运营，我们编辑运营那部分会把很多静态文件生成文件页，像我们博客大首页静态文件，会进行推送，就会直接提供静态文件服务。第二是一个代理负载均衡，就不多说了。第三是业务逻辑实现，博客有一个相应特点，我相同地址登录不登录访问是同一个网址，我们需要登录博主直接访问，或者访问我们静态单位，这样Nginx就会进行浏览展示是否是动态或者纯动态的，主要解决动态缓存刷新不及时，其实是在规避这个方向。</div>\n<div></div>\n<div>      最后一个是Squid管理，我将在下面这个一起说。首先说Squid与Nginx是对等部署，就是提供一个反向代理。因为我们做了8个IDC部署，Squid+Nginx相对于我们自己搭建一个服务，在全国有8个点部署，这些基本上占博客流量70%，80%以上，让更贴近用户去访问。Squid主要依靠反向代理，如果没有命中会去后端取缓存到本地。我们去做了一个Squid静态缓冲池子，每个IDC会有N台Squid提供服务，当我们在负载均衡的时候，我们的URO过来之后可能会比较随机进行命中，这样会造成我们缓存比较多。</div>\n<div></div>\n<div>      我们在刷新的时候其实是一个负担，我有8组Squid，但是我有100台Squid服务器。我们Nginx就做了这样一个事，把URI进行一次性刷新，会根据后台Squid数量进行一次刷新，当Squid有一台挂掉之后，我们Nginx就会把它从内存里面摘掉，会随机往后面三台推。虽然这样可能会造成有一段时间数据更新程度有问题，但保证了我们整个网站这种可用性。当我任何一台机器挂掉之后，我还是可用的，还要到后端去取，还是有缓存服务。</div>\n<div></div>\n<div>      下面讲一下我们Squid上面一些缓存原则。Squid主要是缓存博客核心页面，博客核心页面主要是我们列表页，博主页正文页。在一开始在做静态化项目的时候，可能会把跟博主所有动态输出页面全部都缓存下来，这样就造成缓存成本非常高，刷新成本也非常高，导致命中率上不去。后端Squid，存储文件也非常多，性能下降很多。我们后来就会进行规避，分析用户这样一个行为，把一些访问量权重比较大的，第一页，比较热的这些页去做一些缓存，对于N页之后全部都没有做，这样做有一个比较可控，我缓存刷新的时候博主发表一个博文你可能都要进行刷新一下，当博主刷新之后我们就可以减少更新的复杂度。</div>\n<div></div>\n<div>      另外Squid会把后端PHP减少压力，我们在做权衡的时候也是这样去做的。一些比较重的页面，像博主页可能会带来十几次数据查询，我们认为非常重，有很多次网络开销，更新频率不会太大。我们综合考虑更新复杂度会越过访问量和命中率，然后决定访问，我们都是通过PHP主动输出。对于我们不输出Squid是不会缓存的。</div>\n<div></div>\n<div>      讲一下缓存命中率的优化，第一个是减少冗余存储。刚才说了主要是通过no-cache，还有良好URL设计。我们忽略到一些对我们来说影响缓存命中的一些东西，例如说会带来no-cache访问，或者带着一个策略去访问，会影响我们缓存时间，或者是缓存策略。第二有很多网站抓取的时候都会带很多随机数进行访问，这样的话，随机数会严重影响我们命中率，不断去后端去取。</div>\n<div></div>\n<div>      第三个我们肯定要对这些不正常访问，或者非法访问做一些规则。既要保证可以访问到正常页面，不影响他的使用，又要保证我们静态缓存，静态化这一层去做到更好服务。主要有两点，第一是在Squid上去做规则，去预估他们的访问会以什么样的方式，哪些是非法的。还有一部分就是说，我们的URL设计一定要规范和合理，我们在做规则的时候，一个良好的规范URL设计是很容易去做的，如果你的URL千奇百怪，有各种各样类型，那你很难去做规则。</div>\n<div></div>\n<div>      大家可以看一下这个图，这个图命中率是我们原来IBS，每天访问量大概在600万左右。我们做完这些规则，命中率已经达到95%。下面一层是动态应用，我们动态应用主要是Apache+PHP，有部分应用是Nginx+Spawn-fcgi+PHP组成的Web服务单位。按业务功能划分服务模块，把这些服务器分成很多组，代码是统一去上线和部署的，我的环境因为一致性很高，所以我可以快速增加和删除机器，去实现他的一个可扩展性和伸缩性。</div>\n<div></div>\n<div>      第二当我们的网站遇到高流量，可以把不必要的接口给禁掉，直接去提供主页面服务。动态层基本上就没有什么可讲的，主要是跟大家用的基本都一样。用Memcacheq进行版本管理，我们大家都知道，我的一个请求过来之后，他可能会有很多个操作，这些操作其实用户是不需要等待的。我们如何去把这些任务异步处理，我们用的是Memcacheq也是新浪自己开发的。我们在这个系统上做二次规范定义，第一是我自定义消息格式。Memcacheq是完全支持MC协议的，我这个消息从哪来是由谁发起的，他要干什么我们都会知道并且记录下来，对于我们这样异步系统容错会有比较好的帮助。</div>\n<div></div>\n<div>      第二是一个异常处理，主要做一些机制去保证这个Memcacheq，消息不丢，始终有一台Memcacheq可以写进去。第三是伸缩性，当一台Memcacheq不够之后，我们可以很平滑把这个应用分到第二台，而我后台处理不需要知道这台。下面讲一下我们数据缓存，主要是用MC，相信大家都用的比较多，我们都用比较拉的方式，缓存命中的时候就去MC里去取，命不中的时候就去后端。我们一类是共享内存数据，类似与验证码这样东西。还有耗时查询结果，把一些比较耗时查询放在上面。</div>\n<div></div>\n<div>      最后两个可能就是一个热点和索引数据，因为命中率非常高。最后是索引和聚合数据，我后端可能会请求几次API，这些如果更新的话长度不大的话，我们会主动把它放在MC，把多个结合汇集到一块使用。MC主要是缓存一些比较小的数据碎片，Squid因为是硬件存储所以容量上支撑比较好。缓存考核指标，还是一个容量，命中率这些东西。大家可以看这两张图，第一个图是一个MC缓存管理，第二张图是命中率提高，命中率一个表现。我们主要通过这两个去看我们的缓存服务是否该扩容，是否值得他浪费太多成本，或者他的命中率不够我们的要求，我们可能会再次去拆分数据，或者再次去聚合数据，从而提升整体命中率。</div>\n<div></div>\n<div>      数据层，我们主要是两个，一个是Mysql，我们也有自己的团队去进行维护。主要存一些关系型数据，包括所有业务，基本上最后都会落在Mysql里面。然后MemcacheDB作为key-value存储，我们数据结构简单，高并发读写都放在里面，还有可扩展能力强。上面说到我们Mysql做了8层，我后面动态单元和数据存储层目前做了北京和广州两个IDC部署。MemCache同步主要靠一个同步机制，目前广州可以承载大概，博客整个动态服务都可以切进去，这样可以有效提升一个IDC容灾切换的能力。</div>\n<div></div>\n<div>      首先说一下数据层，这个PPT跟我后来准备的不一样，有一些点没有准备。我重点去讲三部分，第一是冷热分离，我们做过统计包括我们现在也这样做了，博客的冷热用户还是区别比较明显，因为博客有很多名人用户。我们统计大概有5千个用户，博客用户量在6千万以上，大概我们有5千个用户，他们总的PV占到博客整个访问量10%，也就是说万分之一用户占到10%访问，我们就把这万分之十这些用户拆分出来，形成单独一个库，这些用户库他带来一个好处是什么？首先是说他一个数据容量减少了，因为我们博客以博文举例，数据库容量总的加起来已经超过4个T，我们把5千用户拆出来之后，我们在查询，索引效果之上优点会非常高。</div>\n<div></div>\n<div>      第二如此小的一个数据量，我们可以每天都去更新和备份，不会浪费我们太多成本。如果我们不拆分这部分用户，我们想让博客提供稳定服务，这部分用户关注度这么高，我们可能会每一天，每两天基于4个T数据备份，对于成本浪费非常重，而且也起到一个非常好效果。从后端数据访问来说，原来我们文章平均查询时间大概在0.03左右，对一些热点库访问就在0.05秒之内，甚至更低，还有数据安全，我们可以以更高，更好的备份策略去保证他的安全。</div>\n<div></div>\n<div>      第二部分是提高单表能力，这可能还是一个拆分功能。我们做了一个比较有意义的尝试，原来我们文章库既可以按照列表查询，又可以按照正文查询。当你容量很大的话，你单表超过几百万，甚至上千万，你列表查询比较慢，虽然有索引，但也需要把他所有索引取出来进行排序，你在从磁盘里面把数据取出来进行过滤，过滤完之后把你想要的数据给筛出来。这样的话给后端数据增长之后，后端压力不断变大，列表查询会变成非常大压力，影响我们数据库性能。我们采取不动数据库情况下，把列表和文章进行拆分，把列表库大字段给剥离出去了。</div>\n<div></div>\n<div>      但是这样的话，也许有人会问你拆分完之后，你写一篇文章之后，会不会更新两个库。我们目前采取的技术，就是把那张表，字段强行转换为一个类型，在同步的时候是不受影响。因为你的列表库做了优化，正文库只取一条数据，这是直接命中的。最后一点对于Mysql使用，越简单越好，我们在设计的时候也不会设计多么复杂，倾向于简单使用，使用索引去查询，直接返回，没有特别复杂的应用，包括也不支持事物，因为本身我们网站特点事物性要求也不会太高。</div>\n<div></div>\n<div>      另外，我们采取覆盖索引快速索引的一个机制去做。提到可用性和监控，我们主要从三个方面，第一个是我的前端性能监控，第二是前端性能监控，第三方面就是应用级别监控，还有后端监控。第一监控是这样，因为博客页面比较复杂，是富媒体，用户输入什么，输出什么，可能我们不会太清楚。这样的话用户虽然在输出，但是很多人会读他的。至于用户的前端发生过什么，如果没有一套非常好的监控机制，我们很难保证，我虽然服务器上返回是200，但是页面在执行一段之后，GS挂了，页面直接出白页再也不往下执行了，这些都会影响我们服务可行性，和服务质量。</div>\n<div></div>\n<div>      我们主要通过两部分，第一是基调系统。全国各个地方布很多点，去监控一些特定地址，这些地址整个下载时间，这个地址可能会有不同元素，像图片，视频这样一个多媒体元素来去看他两个指标，一个是他首屏的时间。一个页面快慢直接是首屏时间，还有整个页面系统，包括资源下载完毕时间，让我们去做衡量。</div>\n<div></div>\n<div>      第二点我们去做一些异常报错，当GS执行异常退出之后，我们会把这些事件，把一些信息传回服务器，我们就可以做定期收集，分析出来之后去做一定汇总，去让前端人员帮助我们不断地去进行优化，去看究竟是哪部分出的问题。应用级别优化，两部分，第一部分可能是在上线前我们会去做的，就是用Xdebug看他写的代码有没有很慢，或者重复连接的次数，去做这些工作。第二我们会监控，因为刚才各位嘉宾也都说了，PHP性能本身是没有什么性能上大的问题，主要还是取决于你对于资源的访问，数据库的查询，因为他是一个创业型，有一个槛就会影响整个性能。我们重点会监控数据库查询时间，和API查询时间。对于一些很严重的错误我们会通过Syslog定期收集数据库，定期出一个报表。Sql和Api会进行一个分析，我们去谁快谁慢找对应策略。服务器端靠它去监控服务器，这部分就不多讲了。</div>\n<div></div>\n<div>      我们遇到很多问题，像现在来说博客系统相对来说是一个相对比较稳定的版本了，但是我们还是要前进和进步。首先是一个平台化的概念，我们服务单位比较多，其实扩展能力还可以，但是它的运维成本还比较复杂。我们就需要有一套比较快速的，可以高速扩展这样一个服务器管理平台能快速去进行服务器复制，去进行一个容量快速扩容的能力。</div>\n<div></div>\n<div>      第二是我整个系统环境希望能够统一进行升级，包括代码也能统一去进行升级。第二是DAL访问层，有两部分，第一部分是解决我们连接上问题，可能会有连接阻塞，或者连接慢，给后端服务器造成压力，我们就需要有这样一个层去解决一个问题。第二我们希望把我们数据做的更底层一点，让开发人员可以忽略这层直接使用，在内部直接实现缓存刷新，可以达到比较高的水平。</div>\n<div></div>\n<div>      第三个是Nginx SSI。博客有单独这样一个静态提供图片，包括小图片处理。大家都知道一个页面下载，我们会把用户自定义GS，CSS通过前端进行下载，这样势必会造成一个当他下载不下来，势必会造成一个裸奔，我页面整个模板出不来。第二他的下载会阻塞后面的执行，会造成页面阻塞，影响首屏。我们可能会用Nginx，我们已经做8个点部署，我们把一些比较小的合并数据，安全SSI标准，不一定是后端文件，也可能是后端API，让它直接在后端拉进来，直接在输出，这样用户会减少很多次请求。</div>\n<div></div>\n<div>      最后一个是Redis，可能掀起最近一个缓存风暴，支持多种类型缓存数据，可以支持列表，集合，包括排序。我们希望能借助它去简化我们缓存整个系统复杂度，提升开发效率，包括后端部署效率。最后一点是Open，我们博客已经有5年历史，数据量也非常大，我们希望能够把我们数据开放出去。现在我们也在做一个Open项目，在这里有两个项目，第一把自己东西拿出去给别人用，第二我们需要有一个统一框架，统一平台去做类似于新浪微博这样产品东西，能够快速地融入进来。因为现在主流是微博，我们希望能够通过我们这样一个系统，能把跟微博做更好结合，从而扩充我们整个业务产品线。</div>\n<div></div>\n<div>      我的演讲就到这里，谢谢大家。</div>', '', '', 'inherit', 'open', 'open', '', '144-revision', '', '', '2014-07-23 17:59:19', '2014-07-23 09:59:19', '', 144, 'http://afeier.sinaapp.com/?p=145', 0, 'revision', '', 0),
(146, 1, '2014-07-26 10:02:36', '2014-07-26 02:02:36', '<ol start="1">\r\n	<li>&lt;meta name="viewport" content="width=device-width, initial-scale=0.5, minimum-scale=0.3, maximum-scale=2.0, user-scalable=yes" /&gt;</li>\r\n	<li>    &lt;meta content="yes" name="apple-mobile-web-app-capable" /&gt;</li>\r\n	<li>    &lt;meta content="black" name="apple-mobile-web-app-status-bar-style" /&gt;</li>\r\n	<li>    &lt;meta content="telephone=no" name="format-detection" /&gt;</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>1.  使用HTML中的viewport来实现</li>\r\n	<li></li>\r\n	<li>viewport语法如下：</li>\r\n	<li></li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>    &lt;!--在html代码的&lt;head&gt;...&lt;/head&gt;中嵌入下面代码--&gt;</li>\r\n	<li>    &lt;meta name="viewport"</li>\r\n	<li>      content="</li>\r\n	<li>        height = [pixel_value | device-height] ,</li>\r\n	<li>        width = [pixel_value | device-width ] ,</li>\r\n	<li>        initial-scale = 0.5 ,</li>\r\n	<li>        minimum-scale = float_value ,</li>\r\n	<li>        maximum-scale = float_value ,</li>\r\n	<li>        user-scalable = [yes | no] ,</li>\r\n	<li>      "</li>\r\n	<li></li>\r\n	<li>    /&gt;</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>width</li>\r\n	<li></li>\r\n	<li>控制 viewport 的大小，可以指定的一个值或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</li>\r\n	<li></li>\r\n	<li>height</li>\r\n	<li></li>\r\n	<li>和 width 相对应，指定高度。</li>\r\n	<li></li>\r\n	<li>initial-scale</li>\r\n	<li></li>\r\n	<li>初始缩放。即页面初始缩放程度。这是一个浮点值，是页面大小的一个乘数。例如，如果你设置初始缩放为“1.0”，那么，web页面在展现的时候就会以target density分辨率的1:1来展现。如果你设置为“2.0”，那么这个页面就会放大为2倍。</li>\r\n	<li></li>\r\n	<li>maximum-scale</li>\r\n	<li></li>\r\n	<li>最大缩放。即允许的最大缩放程度。这也是一个浮点值，用以指出页面大小与屏幕大小相比的最大乘数。例如，如果你将这个值设置为“2.0”，那么这个页面与target size相比，最多能放大2倍。</li>\r\n	<li></li>\r\n	<li>user-scalable</li>\r\n	<li></li>\r\n	<li>用户调整缩放。即用户是否能改变页面缩放程度。如果设置为yes则是允许用户对其进行改变，反之为no。默认值是yes。如果你将其设置为no，那么minimum-scale 和 maximum-scale都将被忽略，因为根本不可能缩放。</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>(设置屏幕宽度为设备宽度，禁止用户手动调整缩放)</li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>    &lt;meta name="viewport" content="width=device-width,user-scalable=no" /&gt;</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>(设置屏幕密度为高频，中频，低频自动缩放，禁止用户手动调整缩放)</li>\r\n	<li></li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>    &lt;meta</li>\r\n	<li>    name="viewport" content="width=device-width,target-densitydpi=high-dpi,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"</li>\r\n	<li>    /&gt;</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>注：1). 所有的缩放值都必须在0.01–10的范围之内。</li>\r\n	<li></li>\r\n	<li>       2). minimum-scale、maximum-scale要么写值，要不留这两个</li>\r\n	<li></li>\r\n	<li>2. 不使用绝对宽度</li>\r\n	<li></li>\r\n	<li>    由于网页会根据屏幕宽度调整布局，所以不能使用绝对宽度的布局，也不能使用具有绝对宽度的元素。这一条非常重要。</li>\r\n	<li>具体说，CSS代码不能指定像素宽度：</li>\r\n	<li>　　width:xxx px;</li>\r\n	<li>只能指定百分比宽度：</li>\r\n	<li>　　width: xx%;</li>\r\n	<li>或者</li>\r\n	<li>　　width:auto;</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>3. CSS的@media规则</li>\r\n	<li>     同一个CSS文件中，也可以根据不同的屏幕分辨率，选择应用不同的CSS规则。</li>\r\n	<li></li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>    @media screen and (max-device-width: 400px) {</li>\r\n	<li>    　　.column {</li>\r\n	<li>    　　　　float: none;</li>\r\n	<li>    　　　　width:auto;</li>\r\n	<li>    　　}</li>\r\n	<li>    　　#sidebar {</li>\r\n	<li>    　　　　display:none;</li>\r\n	<li>    　　}</li>\r\n	<li>    }</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>上面的代码意思是，如果屏幕宽度小于400像素，则column块取消浮动（float:none）、宽度自动调节（width:auto），sidebar块不显示（display:none）。</li>\r\n	<li></li>\r\n	<li>4.  流动布局</li>\r\n	<li>    各个区块的位置都是浮动的，不是固定不变的。</li>\r\n	<li></li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>      　.main {</li>\r\n	<li>    　　　　float: right;</li>\r\n	<li>    　　　　width: 70%;</li>\r\n	<li>    　　}</li>\r\n	<li>    　　.leftBar {</li>\r\n	<li>    　　　　float: left;</li>\r\n	<li>    　　　　width: 25%;</li>\r\n	<li>    　　}</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>float的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现。</li>\r\n	<li>另外，绝对定位（position: absolute）的使用，也要非常小心。</li>\r\n	<li></li>\r\n	<li></li>\r\n	<li>5. 图片的自适应</li>\r\n	<li>    图片的宽度和高度要按百分比来设定，千万不可以设定成固定大小。</li>\r\n	<li></li>\r\n	<li>HTML代码</li>\r\n	<li></li>\r\n	<li>      &lt;img width="95%" src="" alt="" /&gt;</li>\r\n</ol>', '移动html5开发', '', 'publish', 'open', 'open', '', '%e7%a7%bb%e5%8a%a8html5%e5%bc%80%e5%8f%91', '', '', '2014-07-26 10:02:36', '2014-07-26 02:02:36', '', 0, 'http://afeier.sinaapp.com/?p=146', 0, 'post', '', 0),
(147, 1, '2014-07-26 10:02:16', '2014-07-26 02:02:16', '', '移动html5开发', '', 'inherit', 'open', 'open', '', '146-revision', '', '', '2014-07-26 10:02:16', '2014-07-26 02:02:16', '', 146, 'http://afeier.sinaapp.com/?p=147', 0, 'revision', '', 0),
(148, 1, '2014-07-26 10:03:38', '2014-07-26 02:03:38', '<ol start="1">\n	<li>&lt;meta name="viewport" content="width=device-width, initial-scale=0.5, minimum-scale=0.3, maximum-scale=2.0, user-scalable=yes" /&gt;</li>\n	<li>    &lt;meta content="yes" name="apple-mobile-web-app-capable" /&gt;</li>\n	<li>    &lt;meta content="black" name="apple-mobile-web-app-status-bar-style" /&gt;</li>\n	<li>    &lt;meta content="telephone=no" name="format-detection" /&gt;</li>\n	<li></li>\n	<li></li>\n	<li></li>\n	<li>1.  使用HTML中的viewport来实现</li>\n	<li></li>\n	<li>viewport语法如下：</li>\n	<li></li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>    &lt;!--在html代码的&lt;head&gt;...&lt;/head&gt;中嵌入下面代码--&gt;</li>\n	<li>    &lt;meta name="viewport"</li>\n	<li>      content="</li>\n	<li>        height = [pixel_value | device-height] ,</li>\n	<li>        width = [pixel_value | device-width ] ,</li>\n	<li>        initial-scale = 0.5 ,</li>\n	<li>        minimum-scale = float_value ,</li>\n	<li>        maximum-scale = float_value ,</li>\n	<li>        user-scalable = [yes | no] ,</li>\n	<li>      "</li>\n	<li></li>\n	<li>    /&gt;</li>\n	<li></li>\n	<li></li>\n	<li></li>\n	<li>width</li>\n	<li></li>\n	<li>控制 viewport 的大小，可以指定的一个值或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</li>\n	<li></li>\n	<li>height</li>\n	<li></li>\n	<li>和 width 相对应，指定高度。</li>\n	<li></li>\n	<li>initial-scale</li>\n	<li></li>\n	<li>初始缩放。即页面初始缩放程度。这是一个浮点值，是页面大小的一个乘数。例如，如果你设置初始缩放为“1.0”，那么，web页面在展现的时候就会以target density分辨率的1:1来展现。如果你设置为“2.0”，那么这个页面就会放大为2倍。</li>\n	<li></li>\n	<li>maximum-scale</li>\n	<li></li>\n	<li>最大缩放。即允许的最大缩放程度。这也是一个浮点值，用以指出页面大小与屏幕大小相比的最大乘数。例如，如果你将这个值设置为“2.0”，那么这个页面与target size相比，最多能放大2倍。</li>\n	<li></li>\n	<li>user-scalable</li>\n	<li></li>\n	<li>用户调整缩放。即用户是否能改变页面缩放程度。如果设置为yes则是允许用户对其进行改变，反之为no。默认值是yes。如果你将其设置为no，那么minimum-scale 和 maximum-scale都将被忽略，因为根本不可能缩放。</li>\n	<li></li>\n	<li></li>\n	<li>(设置屏幕宽度为设备宽度，禁止用户手动调整缩放)</li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>    &lt;meta name="viewport" content="width=device-width,user-scalable=no" /&gt;</li>\n	<li></li>\n	<li></li>\n	<li></li>\n	<li>(设置屏幕密度为高频，中频，低频自动缩放，禁止用户手动调整缩放)</li>\n	<li></li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>    &lt;meta</li>\n	<li>    name="viewport" content="width=device-width,target-densitydpi=high-dpi,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"</li>\n	<li>    /&gt;</li>\n	<li></li>\n	<li></li>\n	<li></li>\n	<li>注：1). 所有的缩放值都必须在0.01–10的范围之内。</li>\n	<li></li>\n	<li>       2). minimum-scale、maximum-scale要么写值，要不留这两个</li>\n	<li></li>\n	<li>2. 不使用绝对宽度</li>\n	<li></li>\n	<li>    由于网页会根据屏幕宽度调整布局，所以不能使用绝对宽度的布局，也不能使用具有绝对宽度的元素。这一条非常重要。</li>\n	<li>具体说，CSS代码不能指定像素宽度：</li>\n	<li>　　width:xxx px;</li>\n	<li>只能指定百分比宽度：</li>\n	<li>　　width: xx%;</li>\n	<li>或者</li>\n	<li>　　width:auto;</li>\n	<li></li>\n	<li></li>\n	<li>3. CSS的@media规则</li>\n	<li>     同一个CSS文件中，也可以根据不同的屏幕分辨率，选择应用不同的CSS规则。</li>\n	<li></li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>    @media screen and (max-device-width: 400px) {</li>\n	<li>    　　.column {</li>\n	<li>    　　　　float: none;</li>\n	<li>    　　　　width:auto;</li>\n	<li>    　　}</li>\n	<li>    　　#sidebar {</li>\n	<li>    　　　　display:none;</li>\n	<li>    　　}</li>\n	<li>    }</li>\n	<li></li>\n	<li></li>\n	<li>上面的代码意思是，如果屏幕宽度小于400像素，则column块取消浮动（float:none）、宽度自动调节（width:auto），sidebar块不显示（display:none）。</li>\n	<li></li>\n	<li>4.  流动布局</li>\n	<li>    各个区块的位置都是浮动的，不是固定不变的。</li>\n	<li></li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>      　.main {</li>\n	<li>    　　　　float: right;</li>\n	<li>    　　　　width: 70%;</li>\n	<li>    　　}</li>\n	<li>    　　.leftBar {</li>\n	<li>    　　　　float: left;</li>\n	<li>    　　　　width: 25%;</li>\n	<li>    　　}</li>\n	<li></li>\n	<li></li>\n	<li>float的好处是，如果宽度太小，放不下两个元素，后面的元素会自动滚动到前面元素的下方，不会在水平方向overflow（溢出），避免了水平滚动条的出现。</li>\n	<li>另外，绝对定位（position: absolute）的使用，也要非常小心。</li>\n	<li></li>\n	<li></li>\n	<li>5. 图片的自适应</li>\n	<li>    图片的宽度和高度要按百分比来设定，千万不可以设定成固定大小。</li>\n	<li></li>\n	<li>HTML代码</li>\n	<li></li>\n	<li>      &lt;img width="95%" src="" alt="" /&gt;</li>\n</ol>', '移动html5开发', '', 'inherit', 'open', 'open', '', '146-autosave', '', '', '2014-07-26 10:03:38', '2014-07-26 02:03:38', '', 146, 'http://afeier.sinaapp.com/?p=148', 0, 'revision', '', 0),
(149, 1, '2014-02-28 14:18:02', '2014-02-28 06:18:02', 'class mypdo extends pdo{\r\n\r\nprivate static $instances=null;\r\n\r\npublic $connected=false;\r\n\r\n&nbsp;\r\n\r\npublic static function getInstance($options=array()){\r\n\r\n&nbsp;\r\n\r\nif(self::$instances==null){\r\n\r\nself::$instances = array();\r\n\r\n}\r\n\r\n$options = self::_setOptions($options);\r\n\r\nksort($options);\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nif(empty(self::$instances[$name])){\r\n\r\n&nbsp;\r\n\r\ntry{\r\n\r\n$name = md5(serialize($options));\r\n\r\nself::$instances[$name] = new mypdo($options);\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nself::$instances[$name]-&gt;connected = true;\r\n\r\n}catch(\\PDOException $e){\r\n\r\necho $e-&gt;getMessage();\r\n\r\nreturn false;\r\n\r\n}\r\n\r\nreturn self::$instances[$name];\r\n\r\n}else{\r\n\r\nreturn self::$instances[$name];\r\n\r\n}\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\npublic function __construct($options, $driver_options = null){\r\n\r\nparent::__construct($options[''type''].'':dbname=''.$options[''name''].'';host=''.$options[''host''].'';charset=''.$options[''charset''], $options[''user''], $options[''pass''], $driver_options);\r\n\r\n$this-&gt;setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);\r\n\r\n//$this-&gt;setAttribute(\\PDO::ATTR_EMULATE_PREPARES, false);\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\npublic static function _setOptions($options = array()){\r\n\r\nif(empty($options)){\r\n\r\n$options[''user''] = '''';\r\n\r\n$options[''pass''] = '''';\r\n\r\n$options[''name''] = '''';\r\n\r\n$options[''host''] = ''xx.mysql.rds.aliyuncs.com'';\r\n\r\n$options[''type''] = ''mysql'';\r\n\r\n$options[''charset''] = ''utf8'';\r\n\r\n$options[''prefix''] = '''';\r\n\r\n}\r\n\r\nreturn $options;\r\n\r\n}\r\n\r\n&nbsp;\r\n\r\n}', '一个简单的PDO封装类，单件模式', '', 'inherit', 'open', 'open', '', '4-revision-2', '', '', '2014-02-28 14:18:02', '2014-02-28 06:18:02', '', 4, 'http://afeier.sinaapp.com/?p=149', 0, 'revision', '', 0),
(151, 1, '2014-08-08 17:24:39', '0000-00-00 00:00:00', 'php-resque项目地址：https://github.com/chrisboulton/php-resque\n\nredius高可用集群方案：http://afeier.sinaapp.com/?p=152\n\n&nbsp;\n\n&nbsp;', 'PHP-Resque+redius构建高可用任务队列', '', 'draft', 'open', 'open', '', '', '', '', '2014-08-08 17:24:39', '2014-08-08 09:24:39', '', 0, 'http://afeier.sinaapp.com/?p=151', 0, 'post', '', 0),
(152, 1, '2014-08-08 13:48:34', '2014-08-08 05:48:34', '<div class="post">\r\n<div class="postTitle"><span style="color: #000000; font-weight: bold;">1. Redis 性能</span></div>\r\n<div id="cnblogs_post_body">\r\n<blockquote>对于redis 的一些简单测试，仅供参考：\r\n\r\n测试环境：Redhat6.2 , Xeon E5520(4核)*2/8G，1000M网卡\r\n\r\nRedis 版本：2.6.9\r\n\r\n&nbsp;\r\n\r\n客户端机器使用redis-benchmark 简单GET、SET操作：\r\n<h2>1. 1单实例测试</h2>\r\n1. Value大小：10Byte~1390Byte\r\n\r\n处理速度： 7.5 w/s，速度受单线程处理能力限制\r\n\r\n2. Value 大小：1400 左右\r\n\r\n处理速度突降到5w/s 样子，网卡未能跑满；由于请求包大于MTU造成TCP分包，服务端中断处理请求加倍，造成业务急剧下降。\r\n\r\n3. Value大小：&gt;1.5 k\r\n\r\n1000M网卡跑满，速度受网卡速度限制</blockquote>\r\n<blockquote><em>处理速度与包大小大概关系如下：</em>\r\n\r\n<a href="http://images.cnitblog.com/blog/28886/201306/10164145-a7d6055272894bcc8e893a5eb977ade2.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164146-f544bd50d4934946ba8bb80bdf9a9406.png" alt="image" width="352" height="248" border="0" /></a>\r\n<h2>1.2 <strong>多实例测试</strong></h2>\r\n前提是系统网卡软中断均衡到多CPU核心处理，测试机器网卡开启RSS，有16个队列：\r\n\r\n操作：10字节Value SET，服务端开启8个实例，四台客户端服务器每台开启两个redis-benchmark，每个client 速度近4W/s，服务端总处理30w/s左右。\r\n\r\n网卡流量：\r\n\r\n<a href="http://images.cnitblog.com/blog/28886/201306/10164147-0e10d68fadf744a8a8b70b7f97c22ad6.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164148-5bdac6a03a6c414490810a44bad16e1d.png" alt="image" width="522" height="56" border="0" /></a>\r\n\r\n其中8个单数核心CPU全部耗尽，像是超线程没有利用上，测试已经达到很好效果，就没有继续测试下去了。从单实例跑满一个核心7.5w/s，8个实例跑满8个核心，30W/s来看，CPU使用和性能提升不成正比， RSS会造成redis-server线程基本每收到一个请求都切换一次CPU核心，软中断CPU占用太高。这种情况RPS/RFS功能也许就很合适了，RSS只需要映射1~2个核心，然后再讲软中断根据redis-server端口动态转发，保证redis进程都在一个核心上执行，减少进程不必要的切换。\r\n\r\n&nbsp;\r\n\r\n开多实例可以充分利用系统CPU、网卡处理小包能力。具体看业务场景，考虑包平均大小、处理CPU消耗、业务量。如果多实例是为了提高处理能力，需要注意配置网卡软中断均衡，否则处理能力也无法提升。</blockquote>\r\n<h1></h1>\r\n<h1>2. Redis 持久化</h1>\r\n<blockquote>测试策略：AOF + 定时rewriteaof\r\n\r\n1. 准备数据量：\r\n\r\n1亿，Key：12 字节 Value：15字节，存储为string，进程占用内存12G\r\n\r\n2. Dump\r\n\r\n文件大小2.8G，执行时间：95s，重启加载时间：112s\r\n\r\n2. Bgrewriteaof\r\n\r\n文件大小5.1G，执行时间：95s，重启加载时间：165s\r\n\r\n3.开启AOF后性能影响（每秒fsync一次）：\r\n\r\n8K/s SET 操作时：cup 从20% 增加到40%\r\n\r\n4.修改1Kw数据：\r\n\r\n文件大小：5.6G，<a name="OLE_LINK2"></a><a name="OLE_LINK1"></a>重启加载时间：194s\r\n\r\n5.修改2K数据\r\n\r\n文件大小：6.1G，重启加载时间：200s\r\n\r\n另：Redis2.4 版本以后对fsync做了不少优化， bgrewriteaof，bgsave 期间对redis对外提供服务完全无任何影响。</blockquote>\r\n<h1></h1>\r\n<h1>3. Redis 主从复制</h1>\r\n<blockquote>因为目前版本没有mysql 主从那样的增量备份，对网路稳定性要求很高，如果频繁TCP连接断开会对服务器和网络带来很大负担。\r\n\r\n就目前生产环境主从机器部署同一个机架下，几个月都不会又一次连接断开重连的情况的。</blockquote>\r\n<h1></h1>\r\n<h1>4. keepalived 简介</h1>\r\n<blockquote>参考官方文档：<a href="http://keepalived.org/pdf/sery-lvs-cluster.pdf">http://keepalived.org/pdf/sery-lvs-cluster.pdf</a>\r\n\r\nKeepalived 是一个用c写的路由选择软件，配合IPVS 负载均衡实用，通过VRRP 协议提供高可用。目前最新版本1.2.7.Keepalived 机器之间实用VRRP路由协议切换VIP，切换速度秒级，且不存在脑裂问题。可以实现\r\n\r\n可以实现一主多备，主挂后备自动选举，漂移VIP，切换速度秒级；切换时可通过运行指定脚本更改业务服务状态。\r\n\r\n如两台主机A、B，可以实现如下切换：\r\n\r\n1．A 、B 依次启动，A作为主、B为从\r\n\r\n2 .主A 挂掉，B接管业务，作为主\r\n\r\n3.A 起来，作为从SLAVEOF B\r\n\r\n4.B 挂掉，A 切回主\r\n\r\n将一台全部作为主，即可实现主从，可做读写分离；也可以通过多个VIP，在一台机器上多个实例中一半主、一半从，实现互备份，两机同时负责部分业务，一台宕机后业务都集中在一台上\r\n\r\n安装配置都比较简单：\r\n\r\n需要依赖包：openssl-devel（ubuntu 中为 libssl-dev),popt-devel （ubuntu中为libpopt-dev）。\r\n\r\n配置文件默认路径：/etc/keepalived/keepalived.conf 也可以手动指定路径，不过要注意的是手动指定需要使用绝对路径。主要要确保配置文件的正确性，keepalived 不会检查配置是否符合规则。\r\n\r\n使用keepalived -D 运行，即可启动3个守护进程：一个父进程，一个check健康检查，一个Vrrp，-D将日志写入/var/log/message，可以通过日志查看切换状况。</blockquote>\r\n<blockquote><strong>注意问题：</strong>\r\n\r\n1. VRRP 协议是组播协议，需要保证主、备、VIP 都在同一个VLAN下\r\n\r\n2. 不同的VIP 需要与不同的VRID 对应，一个VLAN 中VRID 不能和其他组冲突\r\n\r\n3. 在keepalived 有两个角色：Master(一个)、Backup（多个），如果设置一个为Master，但Master挂了后再起来，必然再次业务又一次切换，这对于有状态服务是不可接受的。解决方案就是两台机器都设置为Backup，而且优先级高的Backup设置为nopreemt 不抢占。</blockquote>\r\n<h1></h1>\r\n<h1>5. 通过keepalived实现的高可用方案</h1>\r\n<blockquote>&nbsp;\r\n\r\n<a href="http://images.cnitblog.com/blog/28886/201306/10164149-517070bfdd8c4ecc832d3ad4e581f87c.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164150-983fdb63f1f34b81947f384e4d819d35.png" alt="image" width="582" height="363" border="0" /></a>\r\n\r\n<strong>切换流程：</strong>\r\n\r\n1. 当Master挂了后，VIP漂移到Slave；Slave 上keepalived 通知redis 执行：slaveof no one ,开始提供业务\r\n\r\n2. 当Master起来后，VIP 地址不变，Master的keepalived 通知redis 执行slaveof slave IP host ，开始作为从同步数据\r\n\r\n3. 依次类推\r\n\r\n<strong>主从同时Down</strong><strong>机情况：</strong>\r\n\r\n1. 非计划性，不做考虑，一般也不会存在这种问题\r\n\r\n2. 、计划性重启，重启之前通过运维手段SAVE DUMP 主库数据；需要注意顺序：\r\n\r\n1. 关闭其中一台机器上所有redis，是得master全部切到另外一台机器（多实例部署，单机上既有主又有从的情况）；并关闭机器\r\n\r\n2. 依次dump主上redis服务\r\n\r\n3. 关闭主\r\n\r\n4. 启动主，并等待数据load完毕\r\n\r\n5. 启动从\r\n\r\n删除DUMP 文件（避免重启加载慢）</blockquote>\r\n&nbsp;\r\n<h1>6. 使用Twemproxy 实现集群方案</h1>\r\n<blockquote>一个由twitter开源的c版本proxy，同时支持memcached和redis，目前最新版本为：0.2.4，持续开发中;<a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a> .twitter用它主要减少前端与缓存服务间网络连接数。\r\n\r\n特点：快、轻量级、减少后端Cache Server连接数、易配置、支持ketama、modula、random、常用hash 分片算法。\r\n\r\n<a href="http://images.cnitblog.com/blog/28886/201306/10164151-f420e31e69844d859c32ea204976cb84.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164153-10d5562feeb5478cb0dd3df29293937e.png" alt="image" width="609" height="383" border="0" /></a>\r\n\r\n这里使用keepalived实现高可用主备方案，解决proxy单点问题；\r\n\r\n优点：\r\n\r\n1. 对于客户端而言，redis集群是透明的，客户端简单，遍于动态扩容\r\n\r\n2. Proxy为单点、处理一致性hash时，集群节点可用性检测不存在脑裂问题\r\n\r\n3. 高性能，CPU密集型，而redis节点集群多CPU资源冗余，可部署在redis节点集群上，不需要额外设备</blockquote>\r\n&nbsp;\r\n<h1>7 . 一致性hash</h1>\r\n<blockquote>使用zookeeper 实现一致性hash。\r\n\r\nredis服务启动时，将自己的路由信息通过临时节点方式写入zk，客户端通过zk client读取可用的路由信息。\r\n\r\n&nbsp;\r\n\r\n具体实现见我另外一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html">redis 一致性hash</a></blockquote>\r\n<h1></h1>\r\n<h1>8 . 监控工具</h1>\r\n<blockquote>历史redis运行查询：CPU、内存、命中率、请求量、主从切换等\r\n\r\n实时监控曲线\r\n\r\n短信报警\r\n\r\n使用基于开源Redis Live 修改工具，便于批量实例监控，基础功能都已实现，细节也将逐步完善。\r\n\r\n源码地址如下：\r\n\r\n<a href="https://github.com/LittlePeng/redis-monitor">https://github.com/LittlePeng/redis-monitor</a></blockquote>\r\n</div>\r\n<div id="MySignature"></div>\r\n</div>', '高可用redis集群方案', '', 'publish', 'open', 'open', '', '%e9%ab%98%e5%8f%af%e7%94%a8redis%e9%9b%86%e7%be%a4%e6%96%b9%e6%a1%88', '', '', '2014-08-08 13:50:17', '2014-08-08 05:50:17', '', 0, 'http://afeier.sinaapp.com/?p=152', 0, 'post', '', 0),
(153, 1, '2014-08-08 13:47:28', '2014-08-08 05:47:28', '', '高可用redis集群方案', '', 'inherit', 'open', 'open', '', '152-revision', '', '', '2014-08-08 13:47:28', '2014-08-08 05:47:28', '', 152, 'http://afeier.sinaapp.com/?p=153', 0, 'revision', '', 0),
(158, 1, '2014-08-08 15:55:33', '2014-08-08 07:55:33', 'deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse', '国内ubuntu 14.04升级源', '', 'publish', 'open', 'open', '', '%e5%9b%bd%e5%86%85ubuntu-14-04%e5%8d%87%e7%ba%a7%e6%ba%90', '', '', '2014-08-08 15:55:40', '2014-08-08 07:55:40', '', 0, 'http://afeier.sinaapp.com/?p=158', 0, 'post', '', 0),
(159, 1, '2014-08-08 15:55:05', '2014-08-08 07:55:05', '', '国内14.04升级源', '', 'inherit', 'open', 'open', '', '158-revision', '', '', '2014-08-08 15:55:05', '2014-08-08 07:55:05', '', 158, 'http://afeier.sinaapp.com/?p=159', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(156, 1, '2014-08-08 13:51:20', '2014-08-08 05:51:20', '<div class="post">\n<div class="postTitle"><span style="color: #000000; font-weight: bold;">1. Redis 性能</span></div>\n<div id="cnblogs_post_body">\n<blockquote>对于redis 的一些简单测试，仅供参考：\n\n测试环境：Redhat6.2 , Xeon E5520(4核)*2/8G，1000M网卡\n\nRedis 版本：2.6.9\n\n&nbsp;\n\n客户端机器使用redis-benchmark 简单GET、SET操作：\n<h2>1. 1单实例测试</h2>\n1. Value大小：10Byte~1390Byte\n\n处理速度： 7.5 w/s，速度受单线程处理能力限制\n\n2. Value 大小：1400 左右\n\n处理速度突降到5w/s 样子，网卡未能跑满；由于请求包大于MTU造成TCP分包，服务端中断处理请求加倍，造成业务急剧下降。\n\n3. Value大小：&gt;1.5 k\n\n1000M网卡跑满，速度受网卡速度限制</blockquote>\n<blockquote><em>处理速度与包大小大概关系如下：</em>\n\n<a href="http://images.cnitblog.com/blog/28886/201306/10164145-a7d6055272894bcc8e893a5eb977ade2.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164146-f544bd50d4934946ba8bb80bdf9a9406.png" alt="image" width="352" height="248" border="0" /></a>\n<h2>1.2 <strong>多实例测试</strong></h2>\n前提是系统网卡软中断均衡到多CPU核心处理，测试机器网卡开启RSS，有16个队列：\n\n操作：10字节Value SET，服务端开启8个实例，四台客户端服务器每台开启两个redis-benchmark，每个client 速度近4W/s，服务端总处理30w/s左右。\n\n网卡流量：\n\n<a href="http://images.cnitblog.com/blog/28886/201306/10164147-0e10d68fadf744a8a8b70b7f97c22ad6.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164148-5bdac6a03a6c414490810a44bad16e1d.png" alt="image" width="522" height="56" border="0" /></a>\n\n其中8个单数核心CPU全部耗尽，像是超线程没有利用上，测试已经达到很好效果，就没有继续测试下去了。从单实例跑满一个核心7.5w/s，8个实例跑满8个核心，30W/s来看，CPU使用和性能提升不成正比， RSS会造成redis-server线程基本每收到一个请求都切换一次CPU核心，软中断CPU占用太高。这种情况RPS/RFS功能也许就很合适了，RSS只需要映射1~2个核心，然后再讲软中断根据redis-server端口动态转发，保证redis进程都在一个核心上执行，减少进程不必要的切换。\n\n&nbsp;\n\n开多实例可以充分利用系统CPU、网卡处理小包能力。具体看业务场景，考虑包平均大小、处理CPU消耗、业务量。如果多实例是为了提高处理能力，需要注意配置网卡软中断均衡，否则处理能力也无法提升。</blockquote>\n<h1></h1>\n<h1>2. Redis 持久化</h1>\n<blockquote>测试策略：AOF + 定时rewriteaof\n\n1. 准备数据量：\n\n1亿，Key：12 字节 Value：15字节，存储为string，进程占用内存12G\n\n2. Dump\n\n文件大小2.8G，执行时间：95s，重启加载时间：112s\n\n2. Bgrewriteaof\n\n文件大小5.1G，执行时间：95s，重启加载时间：165s\n\n3.开启AOF后性能影响（每秒fsync一次）：\n\n8K/s SET 操作时：cup 从20% 增加到40%\n\n4.修改1Kw数据：\n\n文件大小：5.6G，<a name="OLE_LINK2"></a><a name="OLE_LINK1"></a>重启加载时间：194s\n\n5.修改2K数据\n\n文件大小：6.1G，重启加载时间：200s\n\n另：Redis2.4 版本以后对fsync做了不少优化， bgrewriteaof，bgsave 期间对redis对外提供服务完全无任何影响。</blockquote>\n<h1></h1>\n<h1>3. Redis 主从复制</h1>\n<blockquote>因为目前版本没有mysql 主从那样的增量备份，对网路稳定性要求很高，如果频繁TCP连接断开会对服务器和网络带来很大负担。\n\n就目前生产环境主从机器部署同一个机架下，几个月都不会又一次连接断开重连的情况的。</blockquote>\n<h1></h1>\n<h1>4. keepalived 简介</h1>\n<blockquote>参考官方文档：<a href="http://keepalived.org/pdf/sery-lvs-cluster.pdf">http://keepalived.org/pdf/sery-lvs-cluster.pdf</a>\n\nKeepalived 是一个用c写的路由选择软件，配合IPVS 负载均衡实用，通过VRRP 协议提供高可用。目前最新版本1.2.7.Keepalived 机器之间实用VRRP路由协议切换VIP，切换速度秒级，且不存在脑裂问题。可以实现\n\n可以实现一主多备，主挂后备自动选举，漂移VIP，切换速度秒级；切换时可通过运行指定脚本更改业务服务状态。\n\n如两台主机A、B，可以实现如下切换：\n\n1．A 、B 依次启动，A作为主、B为从\n\n2 .主A 挂掉，B接管业务，作为主\n\n3.A 起来，作为从SLAVEOF B\n\n4.B 挂掉，A 切回主\n\n将一台全部作为主，即可实现主从，可做读写分离；也可以通过多个VIP，在一台机器上多个实例中一半主、一半从，实现互备份，两机同时负责部分业务，一台宕机后业务都集中在一台上\n\n安装配置都比较简单：\n\n需要依赖包：openssl-devel（ubuntu 中为 libssl-dev),popt-devel （ubuntu中为libpopt-dev）。\n\n配置文件默认路径：/etc/keepalived/keepalived.conf 也可以手动指定路径，不过要注意的是手动指定需要使用绝对路径。主要要确保配置文件的正确性，keepalived 不会检查配置是否符合规则。\n\n使用keepalived -D 运行，即可启动3个守护进程：一个父进程，一个check健康检查，一个Vrrp，-D将日志写入/var/log/message，可以通过日志查看切换状况。</blockquote>\n<blockquote><strong>注意问题：</strong>\n\n1. VRRP 协议是组播协议，需要保证主、备、VIP 都在同一个VLAN下\n\n2. 不同的VIP 需要与不同的VRID 对应，一个VLAN 中VRID 不能和其他组冲突\n\n3. 在keepalived 有两个角色：Master(一个)、Backup（多个），如果设置一个为Master，但Master挂了后再起来，必然再次业务又一次切换，这对于有状态服务是不可接受的。解决方案就是两台机器都设置为Backup，而且优先级高的Backup设置为nopreemt 不抢占。</blockquote>\n<h1></h1>\n<h1>5. 通过keepalived实现的高可用方案</h1>\n<blockquote>&nbsp;\n\n<a href="http://images.cnitblog.com/blog/28886/201306/10164149-517070bfdd8c4ecc832d3ad4e581f87c.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164150-983fdb63f1f34b81947f384e4d819d35.png" alt="image" width="582" height="363" border="0" /></a>\n\n<strong>切换流程：</strong>\n\n1. 当Master挂了后，VIP漂移到Slave；Slave 上keepalived 通知redis 执行：slaveof no one ,开始提供业务\n\n2. 当Master起来后，VIP 地址不变，Master的keepalived 通知redis 执行slaveof slave IP host ，开始作为从同步数据\n\n3. 依次类推\n\n<strong>主从同时Down</strong><strong>机情况：</strong>\n\n1. 非计划性，不做考虑，一般也不会存在这种问题\n\n2. 、计划性重启，重启之前通过运维手段SAVE DUMP 主库数据；需要注意顺序：\n\n1. 关闭其中一台机器上所有redis，是得master全部切到另外一台机器（多实例部署，单机上既有主又有从的情况）；并关闭机器\n\n2. 依次dump主上redis服务\n\n3. 关闭主\n\n4. 启动主，并等待数据load完毕\n\n5. 启动从\n\n删除DUMP 文件（避免重启加载慢）</blockquote>\n&nbsp;\n<h1>6. 使用Twemproxy 实现集群方案</h1>\n<blockquote>一个由twitter开源的c版本proxy，同时支持memcached和redis，目前最新版本为：0.2.4，持续开发中;<a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a> .twitter用它主要减少前端与缓存服务间网络连接数。\n\n特点：快、轻量级、减少后端Cache Server连接数、易配置、支持ketama、modula、random、常用hash 分片算法。\n\n<a href="http://images.cnitblog.com/blog/28886/201306/10164151-f420e31e69844d859c32ea204976cb84.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;" title="image" src="http://images.cnitblog.com/blog/28886/201306/10164153-10d5562feeb5478cb0dd3df29293937e.png" alt="image" width="609" height="383" border="0" /></a>\n\n这里使用keepalived实现高可用主备方案，解决proxy单点问题；\n\n优点：\n\n1. 对于客户端而言，redis集群是透明的，客户端简单，遍于动态扩容\n\n2. Proxy为单点、处理一致性hash时，集群节点可用性检测不存在脑裂问题\n\n3. 高性能，CPU密集型，而redis节点集群多CPU资源冗余，可部署在redis节点集群上，不需要额外设备</blockquote>\n&nbsp;\n<h1>7 . 一致性hash</h1>\n<blockquote>使用zookeeper 实现一致性hash。\n\nredis服务启动时，将自己的路由信息通过临时节点方式写入zk，客户端通过zk client读取可用的路由信息。\n\n&nbsp;\n\n具体实现见我另外一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html">redis 一致性hash</a></blockquote>\n<h1></h1>\n<h1>8 . 监控工具</h1>\n<blockquote>历史redis运行查询：CPU、内存、命中率、请求量、主从切换等\n\n实时监控曲线\n\n短信报警\n\n使用基于开源Redis Live 修改工具，便于批量实例监控，基础功能都已实现，细节也将逐步完善。\n\n源码地址如下：\n\n<a href="https://github.com/LittlePeng/redis-monitor">https://github.com/LittlePeng/redis-monitor</a></blockquote>\n</div>\n<div id="MySignature"></div>\n</div>', '高可用redis集群方案', '', 'inherit', 'open', 'open', '', '152-autosave', '', '', '2014-08-08 13:51:20', '2014-08-08 05:51:20', '', 152, 'http://afeier.sinaapp.com/?p=156', 0, 'revision', '', 0),
(154, 1, '2014-08-08 13:47:54', '2014-08-08 05:47:54', '<div class="post">\r\n	<div class="postTitle">\r\n		<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130878.html">Redis 集群方案</a>\r\n	</div>\r\n	<div id="cnblogs_post_body"><p>根据一些测试整理出来的一份方案：</p> <h1>1. Redis 性能</h1> <blockquote> <p>对于redis 的一些简单测试，仅供参考：  </p><p>测试环境：Redhat6.2 , Xeon E5520(4核)*2/8G，1000M网卡  </p><p>Redis 版本：2.6.9  </p><p>&nbsp;</p> <p>客户端机器使用redis-benchmark 简单GET、SET操作：  </p><h2>1. 1单实例测试</h2> <p>1. Value大小：10Byte~1390Byte  </p><p>处理速度： 7.5 w/s，速度受单线程处理能力限制  </p><p>2. Value 大小：1400 左右  </p><p>处理速度突降到5w/s 样子，网卡未能跑满；由于请求包大于MTU造成TCP分包，服务端中断处理请求加倍，造成业务急剧下降。  </p><p>3. Value大小：&gt;1.5 k  </p><p>1000M网卡跑满，速度受网卡速度限制</p></blockquote> <blockquote> <p><i>处理速度与包大小大概关系如下：</i>  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164145-a7d6055272894bcc8e893a5eb977ade2.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164146-f544bd50d4934946ba8bb80bdf9a9406.png" width="352" height="248"></a>  </p><h2>1.2 <b>多实例测试</b></h2> <p>前提是系统网卡软中断均衡到多CPU核心处理，测试机器网卡开启RSS，有16个队列：  </p><p>操作：10字节Value SET，服务端开启8个实例，四台客户端服务器每台开启两个redis-benchmark，每个client 速度近4W/s，服务端总处理30w/s左右。  </p><p>网卡流量：  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164147-0e10d68fadf744a8a8b70b7f97c22ad6.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164148-5bdac6a03a6c414490810a44bad16e1d.png" width="522" height="56"></a>  </p><p>其中8个单数核心CPU全部耗尽，像是超线程没有利用上，测试已经达到很好效果，就没有继续测试下去了。从单实例跑满一个核心7.5w/s，8个实例跑满8个核心，30W/s来看，CPU使用和性能提升不成正比， RSS会造成redis-server线程基本每收到一个请求都切换一次CPU核心，软中断CPU占用太高。这种情况RPS/RFS功能也许就很合适了，RSS只需要映射1~2个核心，然后再讲软中断根据redis-server端口动态转发，保证redis进程都在一个核心上执行，减少进程不必要的切换。  </p><p>&nbsp; </p><p>开多实例可以充分利用系统CPU、网卡处理小包能力。具体看业务场景，考虑包平均大小、处理CPU消耗、业务量。如果多实例是为了提高处理能力，需要注意配置网卡软中断均衡，否则处理能力也无法提升。</p></blockquote> <h1>&nbsp;</h1> <h1>2. Redis 持久化</h1> <blockquote> <p>测试策略：AOF + 定时rewriteaof  </p><p>1. 准备数据量：  </p><p>1亿，Key：12 字节 Value：15字节，存储为string，进程占用内存12G  </p><p>2. Dump  </p><p>文件大小2.8G，执行时间：95s，重启加载时间：112s  </p><p>2. Bgrewriteaof  </p><p>文件大小5.1G，执行时间：95s，重启加载时间：165s  </p><p>3.开启AOF后性能影响（每秒fsync一次）：  </p><p>8K/s SET 操作时：cup 从20% 增加到40%  </p><p>4.修改1Kw数据：  </p><p>文件大小：5.6G，<a name="OLE_LINK2"></a><a name="OLE_LINK1">重启加载时间</a>：194s  </p><p>5.修改2K数据  </p><p>文件大小：6.1G，重启加载时间：200s  </p><p>另：Redis2.4 版本以后对fsync做了不少优化， bgrewriteaof，bgsave 期间对redis对外提供服务完全无任何影响。</p></blockquote> <h1>&nbsp;</h1> <h1>3. Redis 主从复制</h1> <blockquote> <p>因为目前版本没有mysql 主从那样的增量备份，对网路稳定性要求很高，如果频繁TCP连接断开会对服务器和网络带来很大负担。  </p><p>就目前生产环境主从机器部署同一个机架下，几个月都不会又一次连接断开重连的情况的。</p></blockquote> <h1>&nbsp;</h1> <h1>4. keepalived 简介</h1> <blockquote> <p>参考官方文档：<a href="http://keepalived.org/pdf/sery-lvs-cluster.pdf">http://keepalived.org/pdf/sery-lvs-cluster.pdf</a></p> <p>Keepalived 是一个用c写的路由选择软件，配合IPVS 负载均衡实用，通过VRRP 协议提供高可用。目前最新版本1.2.7.Keepalived 机器之间实用VRRP路由协议切换VIP，切换速度秒级，且不存在脑裂问题。可以实现  </p><p>可以实现一主多备，主挂后备自动选举，漂移VIP，切换速度秒级；切换时可通过运行指定脚本更改业务服务状态。  </p><p>如两台主机A、B，可以实现如下切换：  </p><p>1．A 、B 依次启动，A作为主、B为从  </p><p>2 .主A 挂掉，B接管业务，作为主  </p><p>3.A 起来，作为从SLAVEOF B  </p><p>4.B 挂掉，A 切回主  </p><p>将一台全部作为主，即可实现主从，可做读写分离；也可以通过多个VIP，在一台机器上多个实例中一半主、一半从，实现互备份，两机同时负责部分业务，一台宕机后业务都集中在一台上  </p><p>安装配置都比较简单：  </p><p>　　需要依赖包：openssl-devel（ubuntu 中为 libssl-dev),popt-devel （ubuntu中为libpopt-dev）。  </p><p>　　配置文件默认路径：/etc/keepalived/keepalived.conf 也可以手动指定路径，不过要注意的是手动指定需要使用绝对路径。主要要确保配置文件的正确性，keepalived 不会检查配置是否符合规则。  </p><p>　　使用keepalived -D 运行，即可启动3个守护进程：一个父进程，一个check健康检查，一个Vrrp，-D将日志写入/var/log/message，可以通过日志查看切换状况。</p></blockquote> <blockquote> <p><strong>注意问题：</strong>  </p><p>1. VRRP 协议是组播协议，需要保证主、备、VIP 都在同一个VLAN下  </p><p>2. 不同的VIP 需要与不同的VRID 对应，一个VLAN 中VRID 不能和其他组冲突  </p><p>3. 在keepalived 有两个角色：Master(一个)、Backup（多个），如果设置一个为Master，但Master挂了后再起来，必然再次业务又一次切换，这对于有状态服务是不可接受的。解决方案就是两台机器都设置为Backup，而且优先级高的Backup设置为nopreemt 不抢占。</p></blockquote> <h1>&nbsp;</h1> <h1>5. 通过keepalived实现的高可用方案</h1> <blockquote> <p>&nbsp;</p> <p><a href="http://images.cnitblog.com/blog/28886/201306/10164149-517070bfdd8c4ecc832d3ad4e581f87c.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164150-983fdb63f1f34b81947f384e4d819d35.png" width="582" height="363"></a></p> <p><b>切换流程：</b>  </p><p>1. 当Master挂了后，VIP漂移到Slave；Slave 上keepalived 通知redis 执行：slaveof no one ,开始提供业务  </p><p>2. 当Master起来后，VIP 地址不变，Master的keepalived 通知redis 执行slaveof slave IP host ，开始作为从同步数据  </p><p>3. 依次类推  </p><p><b>主从同时Down</b><b>机情况：</b>  </p><p>1. 非计划性，不做考虑，一般也不会存在这种问题  </p><p>2. 、计划性重启，重启之前通过运维手段SAVE DUMP 主库数据；需要注意顺序：  </p><p>1. 关闭其中一台机器上所有redis，是得master全部切到另外一台机器（多实例部署，单机上既有主又有从的情况）；并关闭机器  </p><p>2. 依次dump主上redis服务  </p><p>3. 关闭主  </p><p>4. 启动主，并等待数据load完毕  </p><p>5. 启动从  </p><p>删除DUMP 文件（避免重启加载慢）</p></blockquote> <p>&nbsp;</p> <h1>6. 使用Twemproxy 实现集群方案</h1> <blockquote> <p>一个由twitter开源的c版本proxy，同时支持memcached和redis，目前最新版本为：0.2.4，持续开发中;<a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a> .twitter用它主要减少前端与缓存服务间网络连接数。  </p><p>特点：快、轻量级、减少后端Cache Server连接数、易配置、支持ketama、modula、random、常用hash 分片算法。  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164151-f420e31e69844d859c32ea204976cb84.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164153-10d5562feeb5478cb0dd3df29293937e.png" width="609" height="383"></a>  </p><p>这里使用keepalived实现高可用主备方案，解决proxy单点问题；  </p><p>优点：  </p><p>1. 对于客户端而言，redis集群是透明的，客户端简单，遍于动态扩容  </p><p>2. Proxy为单点、处理一致性hash时，集群节点可用性检测不存在脑裂问题  </p><p>3. 高性能，CPU密集型，而redis节点集群多CPU资源冗余，可部署在redis节点集群上，不需要额外设备</p></blockquote> <p>&nbsp;</p> <h1>7 . 一致性hash</h1> <blockquote> <p>使用zookeeper 实现一致性hash。 </p><p>redis服务启动时，将自己的路由信息通过临时节点方式写入zk，客户端通过zk client读取可用的路由信息。 </p><p>&nbsp; </p><p>具体实现见我另外一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html">redis 一致性hash</a> </p></blockquote> <h1>&nbsp;</h1> <h1>8 . 监控工具</h1> <blockquote> <p>历史redis运行查询：CPU、内存、命中率、请求量、主从切换等  </p><p>实时监控曲线  </p><p>短信报警  </p><p>使用基于开源Redis Live 修改工具，便于批量实例监控，基础功能都已实现，细节也将逐步完善。  </p><p>源码地址如下：  </p><p><a href="https://github.com/LittlePeng/redis-monitor">https://github.com/LittlePeng/redis-monitor</a></p></blockquote></div><div id="MySignature"></div>\r\n<div class="clear"></div>\r\n<div id="blog_post_info_block">\r\n<div id="BlogPostCategory"></div>\r\n<div id="EntryTag"></div>\r\n<div id="blog_post_info"><div id="green_channel">\r\n绿色通道：\r\n<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(3130878,cb_blogId,1);green_channel_success(this,''谢谢推荐！'');">好文要顶</a>\r\n<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>\r\n<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://space.cnblogs.com/msg/send/%e6%98%8e%e5%a4%a9.Net" target="_blank">与我联系</a>\r\n<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="http://static.cnblogs.com/images/icon_weibo_24.png" alt=""></a>\r\n</div>\r\n<div id="author_profile">\r\n<div id="author_profile_info" class="author_profile_info">\r\n<a href="http://home.cnblogs.com/u/lulu/" target="_blank"><img src="http://pic.cnitblog.com/face/u28886.png" class="author_avatar" alt=""></a>\r\n<div id="author_profile_detail" class="author_profile_info">\r\n<a href="http://home.cnblogs.com/u/lulu/">明天.Net</a><br>\r\n<a href="http://home.cnblogs.com/u/lulu/followees">关注 - 25</a><br>\r\n<a href="http://home.cnblogs.com/u/lulu/followers">粉丝 - 57</a>\r\n</div>\r\n</div>\r\n<div class="clear"></div>\r\n<div id="author_profile_honor"></div>\r\n<div id="author_profile_follow">\r\n    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>\r\n</div>\r\n</div>\r\n<div id="div_digg">										\r\n    <div class="diggit" onclick="votePost(3130878,''Digg'')">\r\n        <span class="diggnum" id="digg_count">3</span>\r\n    </div>\r\n	<div class="buryit" onclick="votePost(3130878,''Bury'')"> \r\n		<span class="burynum" id="bury_count">0</span>\r\n	</div>\r\n	<div class="clear"></div>	\r\n	<div class="diggword" id="digg_tips">\r\n    (请您对文章做出评价)\r\n    </div>	\r\n</div>\r\n</div>\r\n<div class="clear"></div>\r\n<div id="post_next_prev"><a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130837.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130837.html" title="发布于2013-06-10 16:12">[知识整理] Mysql协议解析</a><br><a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html" title="发布于2013-06-10 17:10">redis 一致性hash</a><br></div>\r\n</div>\r\n\r\n\r\n	<div class="postDesc">posted on <span id="post-date">2013-06-10 16:42</span> <a href="http://www.cnblogs.com/lulu/">明天.Net</a> 阅读(<span id="post_view_count">15043</span>) 评论(<span id="post_comment_count">14</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=3130878" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(3130878);return false;">收藏</a></div>\r\n</div>', '高可用redis集群方案', '', 'inherit', 'open', 'open', '', '152-revision-2', '', '', '2014-08-08 13:47:54', '2014-08-08 05:47:54', '', 152, 'http://afeier.sinaapp.com/?p=154', 0, 'revision', '', 0),
(155, 1, '2014-08-08 13:47:57', '2014-08-08 05:47:57', '<div class="post">\r\n	<div class="postTitle">\r\n		<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130878.html">Redis 集群方案</a>\r\n	</div>\r\n	<div id="cnblogs_post_body"><p>根据一些测试整理出来的一份方案：</p> <h1>1. Redis 性能</h1> <blockquote> <p>对于redis 的一些简单测试，仅供参考：  </p><p>测试环境：Redhat6.2 , Xeon E5520(4核)*2/8G，1000M网卡  </p><p>Redis 版本：2.6.9  </p><p>&nbsp;</p> <p>客户端机器使用redis-benchmark 简单GET、SET操作：  </p><h2>1. 1单实例测试</h2> <p>1. Value大小：10Byte~1390Byte  </p><p>处理速度： 7.5 w/s，速度受单线程处理能力限制  </p><p>2. Value 大小：1400 左右  </p><p>处理速度突降到5w/s 样子，网卡未能跑满；由于请求包大于MTU造成TCP分包，服务端中断处理请求加倍，造成业务急剧下降。  </p><p>3. Value大小：&gt;1.5 k  </p><p>1000M网卡跑满，速度受网卡速度限制</p></blockquote> <blockquote> <p><i>处理速度与包大小大概关系如下：</i>  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164145-a7d6055272894bcc8e893a5eb977ade2.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164146-f544bd50d4934946ba8bb80bdf9a9406.png" width="352" height="248"></a>  </p><h2>1.2 <b>多实例测试</b></h2> <p>前提是系统网卡软中断均衡到多CPU核心处理，测试机器网卡开启RSS，有16个队列：  </p><p>操作：10字节Value SET，服务端开启8个实例，四台客户端服务器每台开启两个redis-benchmark，每个client 速度近4W/s，服务端总处理30w/s左右。  </p><p>网卡流量：  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164147-0e10d68fadf744a8a8b70b7f97c22ad6.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164148-5bdac6a03a6c414490810a44bad16e1d.png" width="522" height="56"></a>  </p><p>其中8个单数核心CPU全部耗尽，像是超线程没有利用上，测试已经达到很好效果，就没有继续测试下去了。从单实例跑满一个核心7.5w/s，8个实例跑满8个核心，30W/s来看，CPU使用和性能提升不成正比， RSS会造成redis-server线程基本每收到一个请求都切换一次CPU核心，软中断CPU占用太高。这种情况RPS/RFS功能也许就很合适了，RSS只需要映射1~2个核心，然后再讲软中断根据redis-server端口动态转发，保证redis进程都在一个核心上执行，减少进程不必要的切换。  </p><p>&nbsp; </p><p>开多实例可以充分利用系统CPU、网卡处理小包能力。具体看业务场景，考虑包平均大小、处理CPU消耗、业务量。如果多实例是为了提高处理能力，需要注意配置网卡软中断均衡，否则处理能力也无法提升。</p></blockquote> <h1>&nbsp;</h1> <h1>2. Redis 持久化</h1> <blockquote> <p>测试策略：AOF + 定时rewriteaof  </p><p>1. 准备数据量：  </p><p>1亿，Key：12 字节 Value：15字节，存储为string，进程占用内存12G  </p><p>2. Dump  </p><p>文件大小2.8G，执行时间：95s，重启加载时间：112s  </p><p>2. Bgrewriteaof  </p><p>文件大小5.1G，执行时间：95s，重启加载时间：165s  </p><p>3.开启AOF后性能影响（每秒fsync一次）：  </p><p>8K/s SET 操作时：cup 从20% 增加到40%  </p><p>4.修改1Kw数据：  </p><p>文件大小：5.6G，<a name="OLE_LINK2"></a><a name="OLE_LINK1">重启加载时间</a>：194s  </p><p>5.修改2K数据  </p><p>文件大小：6.1G，重启加载时间：200s  </p><p>另：Redis2.4 版本以后对fsync做了不少优化， bgrewriteaof，bgsave 期间对redis对外提供服务完全无任何影响。</p></blockquote> <h1>&nbsp;</h1> <h1>3. Redis 主从复制</h1> <blockquote> <p>因为目前版本没有mysql 主从那样的增量备份，对网路稳定性要求很高，如果频繁TCP连接断开会对服务器和网络带来很大负担。  </p><p>就目前生产环境主从机器部署同一个机架下，几个月都不会又一次连接断开重连的情况的。</p></blockquote> <h1>&nbsp;</h1> <h1>4. keepalived 简介</h1> <blockquote> <p>参考官方文档：<a href="http://keepalived.org/pdf/sery-lvs-cluster.pdf">http://keepalived.org/pdf/sery-lvs-cluster.pdf</a></p> <p>Keepalived 是一个用c写的路由选择软件，配合IPVS 负载均衡实用，通过VRRP 协议提供高可用。目前最新版本1.2.7.Keepalived 机器之间实用VRRP路由协议切换VIP，切换速度秒级，且不存在脑裂问题。可以实现  </p><p>可以实现一主多备，主挂后备自动选举，漂移VIP，切换速度秒级；切换时可通过运行指定脚本更改业务服务状态。  </p><p>如两台主机A、B，可以实现如下切换：  </p><p>1．A 、B 依次启动，A作为主、B为从  </p><p>2 .主A 挂掉，B接管业务，作为主  </p><p>3.A 起来，作为从SLAVEOF B  </p><p>4.B 挂掉，A 切回主  </p><p>将一台全部作为主，即可实现主从，可做读写分离；也可以通过多个VIP，在一台机器上多个实例中一半主、一半从，实现互备份，两机同时负责部分业务，一台宕机后业务都集中在一台上  </p><p>安装配置都比较简单：  </p><p>　　需要依赖包：openssl-devel（ubuntu 中为 libssl-dev),popt-devel （ubuntu中为libpopt-dev）。  </p><p>　　配置文件默认路径：/etc/keepalived/keepalived.conf 也可以手动指定路径，不过要注意的是手动指定需要使用绝对路径。主要要确保配置文件的正确性，keepalived 不会检查配置是否符合规则。  </p><p>　　使用keepalived -D 运行，即可启动3个守护进程：一个父进程，一个check健康检查，一个Vrrp，-D将日志写入/var/log/message，可以通过日志查看切换状况。</p></blockquote> <blockquote> <p><strong>注意问题：</strong>  </p><p>1. VRRP 协议是组播协议，需要保证主、备、VIP 都在同一个VLAN下  </p><p>2. 不同的VIP 需要与不同的VRID 对应，一个VLAN 中VRID 不能和其他组冲突  </p><p>3. 在keepalived 有两个角色：Master(一个)、Backup（多个），如果设置一个为Master，但Master挂了后再起来，必然再次业务又一次切换，这对于有状态服务是不可接受的。解决方案就是两台机器都设置为Backup，而且优先级高的Backup设置为nopreemt 不抢占。</p></blockquote> <h1>&nbsp;</h1> <h1>5. 通过keepalived实现的高可用方案</h1> <blockquote> <p>&nbsp;</p> <p><a href="http://images.cnitblog.com/blog/28886/201306/10164149-517070bfdd8c4ecc832d3ad4e581f87c.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164150-983fdb63f1f34b81947f384e4d819d35.png" width="582" height="363"></a></p> <p><b>切换流程：</b>  </p><p>1. 当Master挂了后，VIP漂移到Slave；Slave 上keepalived 通知redis 执行：slaveof no one ,开始提供业务  </p><p>2. 当Master起来后，VIP 地址不变，Master的keepalived 通知redis 执行slaveof slave IP host ，开始作为从同步数据  </p><p>3. 依次类推  </p><p><b>主从同时Down</b><b>机情况：</b>  </p><p>1. 非计划性，不做考虑，一般也不会存在这种问题  </p><p>2. 、计划性重启，重启之前通过运维手段SAVE DUMP 主库数据；需要注意顺序：  </p><p>1. 关闭其中一台机器上所有redis，是得master全部切到另外一台机器（多实例部署，单机上既有主又有从的情况）；并关闭机器  </p><p>2. 依次dump主上redis服务  </p><p>3. 关闭主  </p><p>4. 启动主，并等待数据load完毕  </p><p>5. 启动从  </p><p>删除DUMP 文件（避免重启加载慢）</p></blockquote> <p>&nbsp;</p> <h1>6. 使用Twemproxy 实现集群方案</h1> <blockquote> <p>一个由twitter开源的c版本proxy，同时支持memcached和redis，目前最新版本为：0.2.4，持续开发中;<a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a> .twitter用它主要减少前端与缓存服务间网络连接数。  </p><p>特点：快、轻量级、减少后端Cache Server连接数、易配置、支持ketama、modula、random、常用hash 分片算法。  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164151-f420e31e69844d859c32ea204976cb84.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164153-10d5562feeb5478cb0dd3df29293937e.png" width="609" height="383"></a>  </p><p>这里使用keepalived实现高可用主备方案，解决proxy单点问题；  </p><p>优点：  </p><p>1. 对于客户端而言，redis集群是透明的，客户端简单，遍于动态扩容  </p><p>2. Proxy为单点、处理一致性hash时，集群节点可用性检测不存在脑裂问题  </p><p>3. 高性能，CPU密集型，而redis节点集群多CPU资源冗余，可部署在redis节点集群上，不需要额外设备</p></blockquote> <p>&nbsp;</p> <h1>7 . 一致性hash</h1> <blockquote> <p>使用zookeeper 实现一致性hash。 </p><p>redis服务启动时，将自己的路由信息通过临时节点方式写入zk，客户端通过zk client读取可用的路由信息。 </p><p>&nbsp; </p><p>具体实现见我另外一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html">redis 一致性hash</a> </p></blockquote> <h1>&nbsp;</h1> <h1>8 . 监控工具</h1> <blockquote> <p>历史redis运行查询：CPU、内存、命中率、请求量、主从切换等  </p><p>实时监控曲线  </p><p>短信报警  </p><p>使用基于开源Redis Live 修改工具，便于批量实例监控，基础功能都已实现，细节也将逐步完善。  </p><p>源码地址如下：  </p><p><a href="https://github.com/LittlePeng/redis-monitor">https://github.com/LittlePeng/redis-monitor</a></p></blockquote></div><div id="MySignature"></div>\r\n<div class="clear"></div>\r\n<div id="blog_post_info_block">\r\n<div id="BlogPostCategory"></div>\r\n<div id="EntryTag"></div>\r\n<div id="blog_post_info"><div id="green_channel">\r\n绿色通道：\r\n<a href="javascript:void(0);" id="green_channel_digg" onclick="DiggIt(3130878,cb_blogId,1);green_channel_success(this,''谢谢推荐！'');">好文要顶</a>\r\n<a id="green_channel_follow" onclick="c_follow();" href="javascript:void(0);">关注我</a>\r\n<a id="green_channel_favorite" onclick="AddToWz(cb_entryId);return false;" href="javascript:void(0);">收藏该文</a><a id="green_channel_contact" href="http://space.cnblogs.com/msg/send/%e6%98%8e%e5%a4%a9.Net" target="_blank">与我联系</a>\r\n<a id="green_channel_weibo" href="javascript:void(0);" title="分享至新浪微博" onclick="ShareToTsina()"><img src="http://static.cnblogs.com/images/icon_weibo_24.png" alt=""></a>\r\n</div>\r\n<div id="author_profile">\r\n<div id="author_profile_info" class="author_profile_info">\r\n<a href="http://home.cnblogs.com/u/lulu/" target="_blank"><img src="http://pic.cnitblog.com/face/u28886.png" class="author_avatar" alt=""></a>\r\n<div id="author_profile_detail" class="author_profile_info">\r\n<a href="http://home.cnblogs.com/u/lulu/">明天.Net</a><br>\r\n<a href="http://home.cnblogs.com/u/lulu/followees">关注 - 25</a><br>\r\n<a href="http://home.cnblogs.com/u/lulu/followers">粉丝 - 57</a>\r\n</div>\r\n</div>\r\n<div class="clear"></div>\r\n<div id="author_profile_honor"></div>\r\n<div id="author_profile_follow">\r\n    <a href="javascript:void(0);" onclick="c_follow();return false;">+加关注</a>\r\n</div>\r\n</div>\r\n<div id="div_digg">										\r\n    <div class="diggit" onclick="votePost(3130878,''Digg'')">\r\n        <span class="diggnum" id="digg_count">3</span>\r\n    </div>\r\n	<div class="buryit" onclick="votePost(3130878,''Bury'')"> \r\n		<span class="burynum" id="bury_count">0</span>\r\n	</div>\r\n	<div class="clear"></div>	\r\n	<div class="diggword" id="digg_tips">\r\n    (请您对文章做出评价)\r\n    </div>	\r\n</div>\r\n</div>\r\n<div class="clear"></div>\r\n<div id="post_next_prev"><a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130837.html" class="p_n_p_prefix">« </a> 上一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130837.html" title="发布于2013-06-10 16:12">[知识整理] Mysql协议解析</a><br><a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html" class="p_n_p_prefix">» </a> 下一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html" title="发布于2013-06-10 17:10">redis 一致性hash</a><br></div>\r\n</div>\r\n\r\n\r\n	<div class="postDesc">posted on <span id="post-date">2013-06-10 16:42</span> <a href="http://www.cnblogs.com/lulu/">明天.Net</a> 阅读(<span id="post_view_count">15043</span>) 评论(<span id="post_comment_count">14</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=3130878" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(3130878);return false;">收藏</a></div>\r\n</div>', '高可用redis集群方案', '', 'inherit', 'open', 'open', '', '152-revision-3', '', '', '2014-08-08 13:47:57', '2014-08-08 05:47:57', '', 152, 'http://afeier.sinaapp.com/?p=155', 0, 'revision', '', 0),
(157, 1, '2014-08-08 13:48:34', '2014-08-08 05:48:34', '<div class="post">\r\n	<div class="postTitle">\r\n		<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130878.html">Redis 集群方案</a>\r\n	</div>\r\n	<div id="cnblogs_post_body"><p>根据一些测试整理出来的一份方案：</p> <h1>1. Redis 性能</h1> <blockquote> <p>对于redis 的一些简单测试，仅供参考：  </p><p>测试环境：Redhat6.2 , Xeon E5520(4核)*2/8G，1000M网卡  </p><p>Redis 版本：2.6.9  </p><p>&nbsp;</p> <p>客户端机器使用redis-benchmark 简单GET、SET操作：  </p><h2>1. 1单实例测试</h2> <p>1. Value大小：10Byte~1390Byte  </p><p>处理速度： 7.5 w/s，速度受单线程处理能力限制  </p><p>2. Value 大小：1400 左右  </p><p>处理速度突降到5w/s 样子，网卡未能跑满；由于请求包大于MTU造成TCP分包，服务端中断处理请求加倍，造成业务急剧下降。  </p><p>3. Value大小：&gt;1.5 k  </p><p>1000M网卡跑满，速度受网卡速度限制</p></blockquote> <blockquote> <p><i>处理速度与包大小大概关系如下：</i>  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164145-a7d6055272894bcc8e893a5eb977ade2.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164146-f544bd50d4934946ba8bb80bdf9a9406.png" width="352" height="248"></a>  </p><h2>1.2 <b>多实例测试</b></h2> <p>前提是系统网卡软中断均衡到多CPU核心处理，测试机器网卡开启RSS，有16个队列：  </p><p>操作：10字节Value SET，服务端开启8个实例，四台客户端服务器每台开启两个redis-benchmark，每个client 速度近4W/s，服务端总处理30w/s左右。  </p><p>网卡流量：  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164147-0e10d68fadf744a8a8b70b7f97c22ad6.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164148-5bdac6a03a6c414490810a44bad16e1d.png" width="522" height="56"></a>  </p><p>其中8个单数核心CPU全部耗尽，像是超线程没有利用上，测试已经达到很好效果，就没有继续测试下去了。从单实例跑满一个核心7.5w/s，8个实例跑满8个核心，30W/s来看，CPU使用和性能提升不成正比， RSS会造成redis-server线程基本每收到一个请求都切换一次CPU核心，软中断CPU占用太高。这种情况RPS/RFS功能也许就很合适了，RSS只需要映射1~2个核心，然后再讲软中断根据redis-server端口动态转发，保证redis进程都在一个核心上执行，减少进程不必要的切换。  </p><p>&nbsp; </p><p>开多实例可以充分利用系统CPU、网卡处理小包能力。具体看业务场景，考虑包平均大小、处理CPU消耗、业务量。如果多实例是为了提高处理能力，需要注意配置网卡软中断均衡，否则处理能力也无法提升。</p></blockquote> <h1>&nbsp;</h1> <h1>2. Redis 持久化</h1> <blockquote> <p>测试策略：AOF + 定时rewriteaof  </p><p>1. 准备数据量：  </p><p>1亿，Key：12 字节 Value：15字节，存储为string，进程占用内存12G  </p><p>2. Dump  </p><p>文件大小2.8G，执行时间：95s，重启加载时间：112s  </p><p>2. Bgrewriteaof  </p><p>文件大小5.1G，执行时间：95s，重启加载时间：165s  </p><p>3.开启AOF后性能影响（每秒fsync一次）：  </p><p>8K/s SET 操作时：cup 从20% 增加到40%  </p><p>4.修改1Kw数据：  </p><p>文件大小：5.6G，<a name="OLE_LINK2"></a><a name="OLE_LINK1">重启加载时间</a>：194s  </p><p>5.修改2K数据  </p><p>文件大小：6.1G，重启加载时间：200s  </p><p>另：Redis2.4 版本以后对fsync做了不少优化， bgrewriteaof，bgsave 期间对redis对外提供服务完全无任何影响。</p></blockquote> <h1>&nbsp;</h1> <h1>3. Redis 主从复制</h1> <blockquote> <p>因为目前版本没有mysql 主从那样的增量备份，对网路稳定性要求很高，如果频繁TCP连接断开会对服务器和网络带来很大负担。  </p><p>就目前生产环境主从机器部署同一个机架下，几个月都不会又一次连接断开重连的情况的。</p></blockquote> <h1>&nbsp;</h1> <h1>4. keepalived 简介</h1> <blockquote> <p>参考官方文档：<a href="http://keepalived.org/pdf/sery-lvs-cluster.pdf">http://keepalived.org/pdf/sery-lvs-cluster.pdf</a></p> <p>Keepalived 是一个用c写的路由选择软件，配合IPVS 负载均衡实用，通过VRRP 协议提供高可用。目前最新版本1.2.7.Keepalived 机器之间实用VRRP路由协议切换VIP，切换速度秒级，且不存在脑裂问题。可以实现  </p><p>可以实现一主多备，主挂后备自动选举，漂移VIP，切换速度秒级；切换时可通过运行指定脚本更改业务服务状态。  </p><p>如两台主机A、B，可以实现如下切换：  </p><p>1．A 、B 依次启动，A作为主、B为从  </p><p>2 .主A 挂掉，B接管业务，作为主  </p><p>3.A 起来，作为从SLAVEOF B  </p><p>4.B 挂掉，A 切回主  </p><p>将一台全部作为主，即可实现主从，可做读写分离；也可以通过多个VIP，在一台机器上多个实例中一半主、一半从，实现互备份，两机同时负责部分业务，一台宕机后业务都集中在一台上  </p><p>安装配置都比较简单：  </p><p>　　需要依赖包：openssl-devel（ubuntu 中为 libssl-dev),popt-devel （ubuntu中为libpopt-dev）。  </p><p>　　配置文件默认路径：/etc/keepalived/keepalived.conf 也可以手动指定路径，不过要注意的是手动指定需要使用绝对路径。主要要确保配置文件的正确性，keepalived 不会检查配置是否符合规则。  </p><p>　　使用keepalived -D 运行，即可启动3个守护进程：一个父进程，一个check健康检查，一个Vrrp，-D将日志写入/var/log/message，可以通过日志查看切换状况。</p></blockquote> <blockquote> <p><strong>注意问题：</strong>  </p><p>1. VRRP 协议是组播协议，需要保证主、备、VIP 都在同一个VLAN下  </p><p>2. 不同的VIP 需要与不同的VRID 对应，一个VLAN 中VRID 不能和其他组冲突  </p><p>3. 在keepalived 有两个角色：Master(一个)、Backup（多个），如果设置一个为Master，但Master挂了后再起来，必然再次业务又一次切换，这对于有状态服务是不可接受的。解决方案就是两台机器都设置为Backup，而且优先级高的Backup设置为nopreemt 不抢占。</p></blockquote> <h1>&nbsp;</h1> <h1>5. 通过keepalived实现的高可用方案</h1> <blockquote> <p>&nbsp;</p> <p><a href="http://images.cnitblog.com/blog/28886/201306/10164149-517070bfdd8c4ecc832d3ad4e581f87c.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164150-983fdb63f1f34b81947f384e4d819d35.png" width="582" height="363"></a></p> <p><b>切换流程：</b>  </p><p>1. 当Master挂了后，VIP漂移到Slave；Slave 上keepalived 通知redis 执行：slaveof no one ,开始提供业务  </p><p>2. 当Master起来后，VIP 地址不变，Master的keepalived 通知redis 执行slaveof slave IP host ，开始作为从同步数据  </p><p>3. 依次类推  </p><p><b>主从同时Down</b><b>机情况：</b>  </p><p>1. 非计划性，不做考虑，一般也不会存在这种问题  </p><p>2. 、计划性重启，重启之前通过运维手段SAVE DUMP 主库数据；需要注意顺序：  </p><p>1. 关闭其中一台机器上所有redis，是得master全部切到另外一台机器（多实例部署，单机上既有主又有从的情况）；并关闭机器  </p><p>2. 依次dump主上redis服务  </p><p>3. 关闭主  </p><p>4. 启动主，并等待数据load完毕  </p><p>5. 启动从  </p><p>删除DUMP 文件（避免重启加载慢）</p></blockquote> <p>&nbsp;</p> <h1>6. 使用Twemproxy 实现集群方案</h1> <blockquote> <p>一个由twitter开源的c版本proxy，同时支持memcached和redis，目前最新版本为：0.2.4，持续开发中;<a href="https://github.com/twitter/twemproxy">https://github.com/twitter/twemproxy</a> .twitter用它主要减少前端与缓存服务间网络连接数。  </p><p>特点：快、轻量级、减少后端Cache Server连接数、易配置、支持ketama、modula、random、常用hash 分片算法。  </p><p><a href="http://images.cnitblog.com/blog/28886/201306/10164151-f420e31e69844d859c32ea204976cb84.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://images.cnitblog.com/blog/28886/201306/10164153-10d5562feeb5478cb0dd3df29293937e.png" width="609" height="383"></a>  </p><p>这里使用keepalived实现高可用主备方案，解决proxy单点问题；  </p><p>优点：  </p><p>1. 对于客户端而言，redis集群是透明的，客户端简单，遍于动态扩容  </p><p>2. Proxy为单点、处理一致性hash时，集群节点可用性检测不存在脑裂问题  </p><p>3. 高性能，CPU密集型，而redis节点集群多CPU资源冗余，可部署在redis节点集群上，不需要额外设备</p></blockquote> <p>&nbsp;</p> <h1>7 . 一致性hash</h1> <blockquote> <p>使用zookeeper 实现一致性hash。 </p><p>redis服务启动时，将自己的路由信息通过临时节点方式写入zk，客户端通过zk client读取可用的路由信息。 </p><p>&nbsp; </p><p>具体实现见我另外一篇：<a href="http://www.cnblogs.com/lulu/archive/2013/06/10/3130906.html">redis 一致性hash</a> </p></blockquote> <h1>&nbsp;</h1> <h1>8 . 监控工具</h1> <blockquote> <p>历史redis运行查询：CPU、内存、命中率、请求量、主从切换等  </p><p>实时监控曲线  </p><p>短信报警  </p><p>使用基于开源Redis Live 修改工具，便于批量实例监控，基础功能都已实现，细节也将逐步完善。  </p><p>源码地址如下：  </p><p><a href="https://github.com/LittlePeng/redis-monitor">https://github.com/LittlePeng/redis-monitor</a></p></blockquote></div><div id="MySignature"></div>\r\n\r\n</div>\r\n\r\n\r\n	<div class="postDesc">posted on <span id="post-date">2013-06-10 16:42</span> <a href="http://www.cnblogs.com/lulu/">明天.Net</a> 阅读(<span id="post_view_count">15043</span>) 评论(<span id="post_comment_count">14</span>)  <a href="http://i.cnblogs.com/EditPosts.aspx?postid=3130878" rel="nofollow">编辑</a> <a href="#" onclick="AddToWz(3130878);return false;">收藏</a></div>\r\n</div>', '高可用redis集群方案', '', 'inherit', 'open', 'open', '', '152-revision-4', '', '', '2014-08-08 13:48:34', '2014-08-08 05:48:34', '', 152, 'http://afeier.sinaapp.com/?p=157', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(160, 1, '2014-08-08 15:55:33', '2014-08-08 07:55:33', 'deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\r\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse', '国内ubuntu 14.04升级源', '', 'inherit', 'open', 'open', '', '158-revision-2', '', '', '2014-08-08 15:55:33', '2014-08-08 07:55:33', '', 158, 'http://afeier.sinaapp.com/?p=160', 0, 'revision', '', 0),
(161, 1, '2014-08-08 15:56:43', '2014-08-08 07:56:43', 'deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse', '国内ubuntu 14.04升级源', '', 'inherit', 'open', 'open', '', '158-autosave', '', '', '2014-08-08 15:56:43', '2014-08-08 07:56:43', '', 158, 'http://afeier.sinaapp.com/?p=161', 0, 'revision', '', 0);
